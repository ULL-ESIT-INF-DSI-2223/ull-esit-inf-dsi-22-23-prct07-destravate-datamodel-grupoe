{"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/grupo.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/grupo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":28}},"3":{"start":{"line":26,"column":8},"end":{"line":26,"column":30}},"4":{"start":{"line":27,"column":8},"end":{"line":27,"column":44}},"5":{"start":{"line":28,"column":8},"end":{"line":28,"column":67}},"6":{"start":{"line":29,"column":8},"end":{"line":29,"column":35}},"7":{"start":{"line":30,"column":8},"end":{"line":30,"column":46}},"8":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"9":{"start":{"line":34,"column":26},"end":{"line":34,"column":75}},"10":{"start":{"line":35,"column":8},"end":{"line":62,"column":9}},"11":{"start":{"line":36,"column":12},"end":{"line":36,"column":93}},"12":{"start":{"line":39,"column":12},"end":{"line":52,"column":13}},"13":{"start":{"line":40,"column":16},"end":{"line":40,"column":30}},"14":{"start":{"line":44,"column":34},"end":{"line":44,"column":79}},"15":{"start":{"line":45,"column":16},"end":{"line":45,"column":48}},"16":{"start":{"line":45,"column":41},"end":{"line":45,"column":46}},"17":{"start":{"line":46,"column":16},"end":{"line":51,"column":17}},"18":{"start":{"line":47,"column":20},"end":{"line":47,"column":33}},"19":{"start":{"line":50,"column":20},"end":{"line":50,"column":67}},"20":{"start":{"line":53,"column":12},"end":{"line":61,"column":23}},"21":{"start":{"line":86,"column":8},"end":{"line":86,"column":24}},"22":{"start":{"line":93,"column":8},"end":{"line":93,"column":28}},"23":{"start":{"line":100,"column":8},"end":{"line":100,"column":35}},"24":{"start":{"line":107,"column":8},"end":{"line":107,"column":47}},"25":{"start":{"line":114,"column":8},"end":{"line":114,"column":29}},"26":{"start":{"line":121,"column":8},"end":{"line":121,"column":37}},"27":{"start":{"line":128,"column":8},"end":{"line":128,"column":36}},"28":{"start":{"line":135,"column":8},"end":{"line":135,"column":33}},"29":{"start":{"line":142,"column":8},"end":{"line":142,"column":30}},"30":{"start":{"line":149,"column":8},"end":{"line":149,"column":44}},"31":{"start":{"line":156,"column":8},"end":{"line":156,"column":68}},"32":{"start":{"line":163,"column":8},"end":{"line":163,"column":32}},"33":{"start":{"line":170,"column":8},"end":{"line":170,"column":47}},"34":{"start":{"line":177,"column":8},"end":{"line":177,"column":46}},"35":{"start":{"line":180,"column":0},"end":{"line":180,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":85},"end":{"line":63,"column":5}},"line":25},"1":{"name":"(anonymous_1)","decl":{"start":{"line":45,"column":31},"end":{"line":45,"column":32}},"loc":{"start":{"line":45,"column":41},"end":{"line":45,"column":46}},"line":45},"2":{"name":"(anonymous_2)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":16},"end":{"line":87,"column":5}},"line":85},"3":{"name":"(anonymous_3)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":20},"end":{"line":94,"column":5}},"line":92},"4":{"name":"(anonymous_4)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":27},"end":{"line":101,"column":5}},"line":99},"5":{"name":"(anonymous_5)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":39},"end":{"line":108,"column":5}},"line":106},"6":{"name":"(anonymous_6)","decl":{"start":{"line":113,"column":4},"end":{"line":113,"column":5}},"loc":{"start":{"line":113,"column":21},"end":{"line":115,"column":5}},"line":113},"7":{"name":"(anonymous_7)","decl":{"start":{"line":120,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":120,"column":28},"end":{"line":122,"column":5}},"line":120},"8":{"name":"(anonymous_8)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":28},"end":{"line":129,"column":5}},"line":127},"9":{"name":"(anonymous_9)","decl":{"start":{"line":134,"column":4},"end":{"line":134,"column":5}},"loc":{"start":{"line":134,"column":29},"end":{"line":136,"column":5}},"line":134},"10":{"name":"(anonymous_10)","decl":{"start":{"line":141,"column":4},"end":{"line":141,"column":5}},"loc":{"start":{"line":141,"column":26},"end":{"line":143,"column":5}},"line":141},"11":{"name":"(anonymous_11)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":40},"end":{"line":150,"column":5}},"line":148},"12":{"name":"(anonymous_12)","decl":{"start":{"line":155,"column":4},"end":{"line":155,"column":5}},"loc":{"start":{"line":155,"column":64},"end":{"line":157,"column":5}},"line":155},"13":{"name":"(anonymous_13)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":28},"end":{"line":164,"column":5}},"line":162},"14":{"name":"(anonymous_14)","decl":{"start":{"line":169,"column":4},"end":{"line":169,"column":5}},"loc":{"start":{"line":169,"column":42},"end":{"line":171,"column":5}},"line":169},"15":{"name":"(anonymous_15)","decl":{"start":{"line":176,"column":4},"end":{"line":176,"column":5}},"loc":{"start":{"line":176,"column":42},"end":{"line":178,"column":5}},"line":176}},"branchMap":{"0":{"loc":{"start":{"line":35,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":62,"column":9}},{"start":{"line":35,"column":8},"end":{"line":62,"column":9}}],"line":35},"1":{"loc":{"start":{"line":39,"column":12},"end":{"line":52,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":52,"column":13}},{"start":{"line":39,"column":12},"end":{"line":52,"column":13}}],"line":39},"2":{"loc":{"start":{"line":46,"column":16},"end":{"line":51,"column":17}},"type":"if","locations":[{"start":{"line":46,"column":16},"end":{"line":51,"column":17}},{"start":{"line":46,"column":16},"end":{"line":51,"column":17}}],"line":46}},"s":{"0":1,"1":1,"2":1,"3":9,"4":9,"5":9,"6":9,"7":9,"8":9,"9":9,"10":9,"11":8,"12":1,"13":0,"14":1,"15":1,"16":5,"17":1,"18":0,"19":1,"20":1,"21":9,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1},"f":{"0":9,"1":5,"2":9,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"b":{"0":[8,1],"1":[0,1],"2":[0,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/grupo.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/grupo.ts"],"names":[],"mappings":"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","sourcesContent":["import { ID,estadisticaEntrenamiento, historicoRutas } from \"./types\";\nimport { Usuario } from \"./usuario\";\n\nimport { database } from \"./bd\";\n\n\n/**\n * @class Grupo\n * @description Clase que representa un grupo de usuarios\n */\nexport class Grupo {\n  private id_: ID;\n  private nombre_: string;\n  private participantes_: ID[];\n  private estadisticasEntrenamiento_: estadisticaEntrenamiento;\n  private ranking_: ID[];\n  private rutas_favoritas_ : ID[];\n  private historicoRutas_: historicoRutas[];\n  \n  /**\n   * Constructor de la clase Grupo.\n   * @param nombre \n   * @param participantes \n   * @param estadisticaEntrenamiento \n   * @param historicoRutas \n   * @param id \n   */\n  constructor(nombre: string, participantes: ID[], estadisticaEntrenamiento: estadisticaEntrenamiento, historicoRutas: historicoRutas[],id?: ID) {\n    this.nombre_ = nombre;\n    this.participantes_ = participantes;\n    this.estadisticasEntrenamiento_ = estadisticaEntrenamiento;\n    this.rutas_favoritas_ = [];\n    this.historicoRutas_ = historicoRutas;\n    \n    // this.ranking_ = this.calcularRanking();\n    this.ranking_ = [];\n    \n    //* escribir en lowdb la ruta creada\n    const id_global = database.get(\"grupos\").map(\"nombre\").value();\n    if (id_global.includes(this.nombre_)) {\n      this.id_ = database.get(\"grupos\").find({ nombre: this.nombre_ }).value().id;\n    } else {\n      if (id !== undefined) {\n        this.id_ = id;\n      }\n      else {\n        // se busca el id más alto y se le suma 1\n        const id_global = database.get(\"grupos\").map(\"id\").value();\n        id_global.sort((a, b) => a - b);\n        if (id_global.length === 0) {\n          this.id_ = 1;\n        }\n        else {\n          this.id_ = id_global[id_global.length - 1] + 1;\n        }\n      }\n      \n      database.get(\"grupos\").push({\n        id: this.id_,\n        nombre: this.nombre_,\n        participantes: this.participantes_,\n        estadisticasEntrenamiento: this.estadisticasEntrenamiento_,\n        ranking: this.ranking_,\n        rutas_favoritas: this.rutas_favoritas_,\n        historicoRutas: this.historicoRutas_\n      }).write();\n    }\n  }\n\n\n  // calcularRanking(): ID[] {\n  //   const ranking: Usuario[] = [];\n  //   const participantes = this.participantes_;\n  //   participantes.forEach(participante => {\n  //     // buscar el usuario en la base de datos\n  //     const usuario = database.get(\"usuarios\").find({ id: participante }).value();\n  //     ranking.push(new Usuario(usuario.nombre, usuario.actividad, usuario.amigos, usuario.grupo_de_amigos, usuario.estadisticas, usuario.historicoRutas, usuario.retos, usuario.id));\n  //   });\n  //   // ordenar el ranking, en base a la suma de los km del histórico de rutas de cada usuario\n  //   ranking.sort((a, b) => b.getKMTotales() - a.getKMTotales());\n  //   const rankingFinal: ID[] = [];\n  //   ranking.forEach(usuario => {\n  //     rankingFinal.push(usuario.getID);\n  //   });\n  //   return rankingFinal;\n\n  // }\n\n\n  //* GETTER Y SETTER\n\n  /**\n   * Método que devuelve el id del grupo\n   * @returns -- id del grupo\n   */\n  get getID(): ID {\n    return this.id_;\n  }\n\n  /**\n   * Método que devuelve el nombre del grupo\n   * @returns -- nombre del grupo\n   */\n  get getNombre(): string {\n    return this.nombre_;\n  }\n\n  /**\n   * Método que devuelve los participantes del grupo\n   * @returns -- participantes del grupo\n   */\n  get getParticipantes(): ID[] {\n    return this.participantes_;\n  }\n\n  /**\n   * Método que devuelve las estadisticas de entrenamiento del grupo\n   * @returns -- estadisticas de entrenamiento del grupo\n   */\n  get getEstadisticasEntrenamiento(): estadisticaEntrenamiento {\n    return this.estadisticasEntrenamiento_;\n  }\n\n  /**\n   * Método que devuelve el ranking del grupo\n   * @returns -- ranking del grupo\n   */\n  get getRanking(): ID[] {\n    return this.ranking_;\n  }\n\n  /**\n   * Método que devuelve las rutas favoritas del grupo\n   * @returns -- rutas favoritas del grupo\n   */\n  get getRutasFavoritas(): ID[] {\n    return this.rutas_favoritas_;\n  }\n\n  /**\n   * Método que devuelve el historico de rutas del grupo\n   * @returns -- historico de rutas del grupo\n   */\n  get getHistoricoRutas(): historicoRutas[] {\n    return this.historicoRutas_;\n  }\n\n  /**\n   * Método que modifica el id del grupo\n   * @param identificador-- nuevo id del grupo\n   */\n  set setID(identificador: ID) {\n    this.id_ = identificador;\n  }\n\n  /**\n   * Método que modifica el nombre del grupo\n   * @param nombre -- nuevo nombre del grupo\n   */\n  set setNombre(nombre: string) {\n    this.nombre_ = nombre;\n  }\n\n  /**\n   * Método que añade un participante al grupo\n   * @param participante -- participante que se añade al grupo\n   */\n  set setParticipantes(participantes: ID[]) {\n    this.participantes_ = participantes;\n  }\n\n  /**\n   * Método que añade un participante al grupo\n   * @param participante -- participante que se añade al grupo\n   */\n  set setEstadisticasEntrenamiento(estadisticasEntrenamiento: estadisticaEntrenamiento) {\n    this.estadisticasEntrenamiento_ = estadisticasEntrenamiento;\n  }\n\n  /**\n   * Método que añade un ranking al ranking del grupo\n   * @param ranking -- ranking que se añade al ranking del grupo\n   */\n  set setRanking(ranking: ID[]) {\n    this.ranking_ = ranking;\n  }\n\n  /**\n   * Método que añade una ruta a las rutas favoritas del grupo\n   * @param ruta -- ruta que se añade a las rutas favoritas\n   */\n  set setRutasFavoritas(rutasFavoritas: ID[]) {\n    this.rutas_favoritas_ = rutasFavoritas;\n  }\n\n  /**\n   * Método que añade una ruta al historico de rutas del grupo\n   * @param ruta -- ruta que se añade al historico\n   */\n  set setHistoricoRutas(historicoRutas: historicoRutas[]) {\n    this.historicoRutas_ = historicoRutas;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ba603f6080728f3614537f1ddd3a01003246c0ef","contentHash":"461a0f39ea8349a9b45619063940419484f7ab725e97f38f2a5ad6beca6cbfdd"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/bd.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/bd.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":51}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":56}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":98}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/bd.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/bd.ts"],"names":[],"mappings":";;;AAAA,QAAQ;AACR,+BAA+B;AAC/B,oDAAoD;AAIpD,wCAAwC;AACxC,gBAAQ,GAAG,KAAK,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;AAChD,gBAAQ,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAC,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC","sourcesContent":["// lowdb\nimport * as lowdb from \"lowdb\";\nimport * as FileSync from \"lowdb/adapters/FileSync\";\nimport { schemaType } from \"./types\";\n\nexport let database: lowdb.LowdbSync<schemaType>;\n// eslint-disable-next-line prefer-const\ndatabase = lowdb(new FileSync(\"database.json\"));\ndatabase.defaults({ rutas: [] }, {usuarios: [] }, { grupos: []}, { retos: []}).write();"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"be2d6fc28264ac61e16d6e2e031cc25decea83b3","contentHash":"aaf92e7f08ba74d5ac87c1322042a203b27bb33bf34256db90b40301eaaa7393"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/gruposCollection.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/gruposCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":28}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":34}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":22}},"6":{"start":{"line":23,"column":27},"end":{"line":23,"column":62}},"7":{"start":{"line":24,"column":26},"end":{"line":24,"column":28}},"8":{"start":{"line":25,"column":8},"end":{"line":28,"column":11}},"9":{"start":{"line":26,"column":30},"end":{"line":26,"column":147}},"10":{"start":{"line":27,"column":12},"end":{"line":27,"column":38}},"11":{"start":{"line":29,"column":8},"end":{"line":29,"column":35}},"12":{"start":{"line":36,"column":23},"end":{"line":36,"column":52}},"13":{"start":{"line":37,"column":8},"end":{"line":73,"column":11}},"14":{"start":{"line":52,"column":12},"end":{"line":72,"column":13}},"15":{"start":{"line":54,"column":20},"end":{"line":54,"column":50}},"16":{"start":{"line":55,"column":20},"end":{"line":55,"column":26}},"17":{"start":{"line":57,"column":20},"end":{"line":57,"column":50}},"18":{"start":{"line":58,"column":20},"end":{"line":58,"column":26}},"19":{"start":{"line":60,"column":20},"end":{"line":60,"column":50}},"20":{"start":{"line":61,"column":20},"end":{"line":61,"column":26}},"21":{"start":{"line":63,"column":20},"end":{"line":63,"column":48}},"22":{"start":{"line":64,"column":20},"end":{"line":64,"column":26}},"23":{"start":{"line":66,"column":20},"end":{"line":66,"column":49}},"24":{"start":{"line":67,"column":20},"end":{"line":67,"column":26}},"25":{"start":{"line":70,"column":20},"end":{"line":70,"column":36}},"26":{"start":{"line":71,"column":20},"end":{"line":71,"column":26}},"27":{"start":{"line":79,"column":25},"end":{"line":79,"column":29}},"28":{"start":{"line":80,"column":23},"end":{"line":80,"column":52}},"29":{"start":{"line":81,"column":8},"end":{"line":109,"column":11}},"30":{"start":{"line":92,"column":12},"end":{"line":94,"column":13}},"31":{"start":{"line":93,"column":16},"end":{"line":93,"column":35}},"32":{"start":{"line":95,"column":33},"end":{"line":95,"column":45}},"33":{"start":{"line":96,"column":12},"end":{"line":103,"column":15}},"34":{"start":{"line":97,"column":16},"end":{"line":102,"column":17}},"35":{"start":{"line":98,"column":20},"end":{"line":98,"column":66}},"36":{"start":{"line":101,"column":20},"end":{"line":101,"column":66}},"37":{"start":{"line":104,"column":12},"end":{"line":104,"column":36}},"38":{"start":{"line":105,"column":12},"end":{"line":107,"column":15}},"39":{"start":{"line":106,"column":16},"end":{"line":106,"column":44}},"40":{"start":{"line":108,"column":12},"end":{"line":108,"column":29}},"41":{"start":{"line":115,"column":25},"end":{"line":115,"column":29}},"42":{"start":{"line":116,"column":23},"end":{"line":116,"column":52}},"43":{"start":{"line":117,"column":8},"end":{"line":145,"column":11}},"44":{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},"45":{"start":{"line":129,"column":16},"end":{"line":129,"column":35}},"46":{"start":{"line":131,"column":33},"end":{"line":131,"column":45}},"47":{"start":{"line":132,"column":12},"end":{"line":139,"column":15}},"48":{"start":{"line":133,"column":16},"end":{"line":138,"column":17}},"49":{"start":{"line":134,"column":20},"end":{"line":134,"column":111}},"50":{"start":{"line":137,"column":20},"end":{"line":137,"column":111}},"51":{"start":{"line":141,"column":12},"end":{"line":143,"column":15}},"52":{"start":{"line":142,"column":16},"end":{"line":142,"column":93}},"53":{"start":{"line":144,"column":12},"end":{"line":144,"column":29}},"54":{"start":{"line":151,"column":25},"end":{"line":151,"column":29}},"55":{"start":{"line":152,"column":23},"end":{"line":152,"column":52}},"56":{"start":{"line":153,"column":8},"end":{"line":180,"column":11}},"57":{"start":{"line":164,"column":12},"end":{"line":166,"column":13}},"58":{"start":{"line":165,"column":16},"end":{"line":165,"column":35}},"59":{"start":{"line":167,"column":33},"end":{"line":167,"column":45}},"60":{"start":{"line":168,"column":12},"end":{"line":175,"column":15}},"61":{"start":{"line":169,"column":16},"end":{"line":174,"column":17}},"62":{"start":{"line":170,"column":20},"end":{"line":170,"column":105}},"63":{"start":{"line":173,"column":20},"end":{"line":173,"column":105}},"64":{"start":{"line":176,"column":12},"end":{"line":178,"column":15}},"65":{"start":{"line":177,"column":16},"end":{"line":177,"column":90}},"66":{"start":{"line":179,"column":12},"end":{"line":179,"column":29}},"67":{"start":{"line":186,"column":25},"end":{"line":186,"column":29}},"68":{"start":{"line":187,"column":23},"end":{"line":187,"column":52}},"69":{"start":{"line":188,"column":8},"end":{"line":216,"column":11}},"70":{"start":{"line":199,"column":12},"end":{"line":201,"column":13}},"71":{"start":{"line":200,"column":16},"end":{"line":200,"column":35}},"72":{"start":{"line":202,"column":33},"end":{"line":202,"column":45}},"73":{"start":{"line":203,"column":12},"end":{"line":210,"column":15}},"74":{"start":{"line":204,"column":16},"end":{"line":209,"column":17}},"75":{"start":{"line":205,"column":20},"end":{"line":205,"column":105}},"76":{"start":{"line":208,"column":20},"end":{"line":208,"column":105}},"77":{"start":{"line":212,"column":12},"end":{"line":214,"column":15}},"78":{"start":{"line":213,"column":16},"end":{"line":213,"column":88}},"79":{"start":{"line":215,"column":12},"end":{"line":215,"column":29}},"80":{"start":{"line":222,"column":25},"end":{"line":222,"column":29}},"81":{"start":{"line":223,"column":23},"end":{"line":223,"column":52}},"82":{"start":{"line":224,"column":8},"end":{"line":252,"column":11}},"83":{"start":{"line":235,"column":12},"end":{"line":237,"column":13}},"84":{"start":{"line":236,"column":16},"end":{"line":236,"column":35}},"85":{"start":{"line":238,"column":33},"end":{"line":238,"column":45}},"86":{"start":{"line":239,"column":12},"end":{"line":246,"column":15}},"87":{"start":{"line":240,"column":16},"end":{"line":245,"column":17}},"88":{"start":{"line":241,"column":20},"end":{"line":241,"column":81}},"89":{"start":{"line":244,"column":20},"end":{"line":244,"column":81}},"90":{"start":{"line":248,"column":12},"end":{"line":250,"column":15}},"91":{"start":{"line":249,"column":16},"end":{"line":249,"column":83}},"92":{"start":{"line":251,"column":12},"end":{"line":251,"column":29}},"93":{"start":{"line":259,"column":23},"end":{"line":259,"column":52}},"94":{"start":{"line":260,"column":8},"end":{"line":287,"column":11}},"95":{"start":{"line":273,"column":12},"end":{"line":286,"column":13}},"96":{"start":{"line":275,"column":20},"end":{"line":275,"column":45}},"97":{"start":{"line":276,"column":20},"end":{"line":276,"column":26}},"98":{"start":{"line":278,"column":20},"end":{"line":278,"column":47}},"99":{"start":{"line":279,"column":20},"end":{"line":279,"column":26}},"100":{"start":{"line":281,"column":20},"end":{"line":281,"column":48}},"101":{"start":{"line":282,"column":20},"end":{"line":282,"column":26}},"102":{"start":{"line":284,"column":20},"end":{"line":284,"column":36}},"103":{"start":{"line":285,"column":20},"end":{"line":285,"column":26}},"104":{"start":{"line":293,"column":23},"end":{"line":293,"column":52}},"105":{"start":{"line":294,"column":8},"end":{"line":305,"column":11}},"106":{"start":{"line":300,"column":20},"end":{"line":300,"column":73}},"107":{"start":{"line":304,"column":12},"end":{"line":304,"column":48}},"108":{"start":{"line":312,"column":8},"end":{"line":317,"column":11}},"109":{"start":{"line":313,"column":12},"end":{"line":316,"column":13}},"110":{"start":{"line":314,"column":16},"end":{"line":314,"column":70}},"111":{"start":{"line":315,"column":16},"end":{"line":315,"column":28}},"112":{"start":{"line":318,"column":8},"end":{"line":318,"column":21}},"113":{"start":{"line":326,"column":37},"end":{"line":326,"column":42}},"114":{"start":{"line":327,"column":21},"end":{"line":327,"column":23}},"115":{"start":{"line":328,"column":8},"end":{"line":333,"column":11}},"116":{"start":{"line":329,"column":12},"end":{"line":332,"column":13}},"117":{"start":{"line":330,"column":16},"end":{"line":330,"column":46}},"118":{"start":{"line":331,"column":16},"end":{"line":331,"column":31}},"119":{"start":{"line":334,"column":8},"end":{"line":337,"column":9}},"120":{"start":{"line":335,"column":12},"end":{"line":335,"column":71}},"121":{"start":{"line":336,"column":12},"end":{"line":336,"column":19}},"122":{"start":{"line":338,"column":23},"end":{"line":338,"column":52}},"123":{"start":{"line":339,"column":8},"end":{"line":519,"column":11}},"124":{"start":{"line":352,"column":12},"end":{"line":518,"column":13}},"125":{"start":{"line":354,"column":20},"end":{"line":367,"column":23}},"126":{"start":{"line":361,"column":24},"end":{"line":361,"column":73}},"127":{"start":{"line":362,"column":24},"end":{"line":362,"column":61}},"128":{"start":{"line":363,"column":42},"end":{"line":363,"column":249}},"129":{"start":{"line":364,"column":24},"end":{"line":364,"column":53}},"130":{"start":{"line":365,"column":24},"end":{"line":365,"column":55}},"131":{"start":{"line":366,"column":24},"end":{"line":366,"column":44}},"132":{"start":{"line":368,"column":20},"end":{"line":368,"column":26}},"133":{"start":{"line":370,"column":20},"end":{"line":417,"column":23}},"134":{"start":{"line":381,"column":24},"end":{"line":416,"column":25}},"135":{"start":{"line":383,"column":32},"end":{"line":396,"column":35}},"136":{"start":{"line":390,"column":36},"end":{"line":390,"column":146}},"137":{"start":{"line":391,"column":36},"end":{"line":391,"column":73}},"138":{"start":{"line":392,"column":54},"end":{"line":392,"column":261}},"139":{"start":{"line":393,"column":36},"end":{"line":393,"column":65}},"140":{"start":{"line":394,"column":36},"end":{"line":394,"column":67}},"141":{"start":{"line":395,"column":36},"end":{"line":395,"column":56}},"142":{"start":{"line":397,"column":32},"end":{"line":397,"column":38}},"143":{"start":{"line":399,"column":32},"end":{"line":414,"column":35}},"144":{"start":{"line":406,"column":36},"end":{"line":408,"column":39}},"145":{"start":{"line":407,"column":40},"end":{"line":407,"column":77}},"146":{"start":{"line":409,"column":36},"end":{"line":409,"column":73}},"147":{"start":{"line":410,"column":54},"end":{"line":410,"column":261}},"148":{"start":{"line":411,"column":36},"end":{"line":411,"column":65}},"149":{"start":{"line":412,"column":36},"end":{"line":412,"column":67}},"150":{"start":{"line":413,"column":36},"end":{"line":413,"column":56}},"151":{"start":{"line":415,"column":32},"end":{"line":415,"column":38}},"152":{"start":{"line":418,"column":20},"end":{"line":418,"column":26}},"153":{"start":{"line":420,"column":20},"end":{"line":475,"column":23}},"154":{"start":{"line":452,"column":55},"end":{"line":455,"column":25}},"155":{"start":{"line":456,"column":52},"end":{"line":459,"column":25}},"156":{"start":{"line":460,"column":52},"end":{"line":463,"column":25}},"157":{"start":{"line":464,"column":49},"end":{"line":468,"column":25}},"158":{"start":{"line":469,"column":24},"end":{"line":469,"column":93}},"159":{"start":{"line":470,"column":24},"end":{"line":470,"column":61}},"160":{"start":{"line":471,"column":43},"end":{"line":471,"column":250}},"161":{"start":{"line":472,"column":24},"end":{"line":472,"column":54}},"162":{"start":{"line":473,"column":24},"end":{"line":473,"column":55}},"163":{"start":{"line":474,"column":24},"end":{"line":474,"column":44}},"164":{"start":{"line":476,"column":20},"end":{"line":476,"column":26}},"165":{"start":{"line":478,"column":20},"end":{"line":516,"column":23}},"166":{"start":{"line":501,"column":42},"end":{"line":505,"column":25}},"167":{"start":{"line":506,"column":46},"end":{"line":509,"column":25}},"168":{"start":{"line":510,"column":24},"end":{"line":510,"column":83}},"169":{"start":{"line":511,"column":24},"end":{"line":511,"column":61}},"170":{"start":{"line":512,"column":41},"end":{"line":512,"column":248}},"171":{"start":{"line":513,"column":24},"end":{"line":513,"column":52}},"172":{"start":{"line":514,"column":24},"end":{"line":514,"column":55}},"173":{"start":{"line":515,"column":24},"end":{"line":515,"column":44}},"174":{"start":{"line":517,"column":20},"end":{"line":517,"column":26}},"175":{"start":{"line":525,"column":23},"end":{"line":525,"column":52}},"176":{"start":{"line":526,"column":8},"end":{"line":538,"column":11}},"177":{"start":{"line":532,"column":20},"end":{"line":532,"column":73}},"178":{"start":{"line":536,"column":12},"end":{"line":536,"column":47}},"179":{"start":{"line":537,"column":12},"end":{"line":537,"column":32}},"180":{"start":{"line":544,"column":27},"end":{"line":544,"column":32}},"181":{"start":{"line":546,"column":8},"end":{"line":553,"column":11}},"182":{"start":{"line":547,"column":12},"end":{"line":552,"column":13}},"183":{"start":{"line":548,"column":16},"end":{"line":548,"column":34}},"184":{"start":{"line":549,"column":16},"end":{"line":549,"column":47}},"185":{"start":{"line":550,"column":16},"end":{"line":550,"column":36}},"186":{"start":{"line":551,"column":16},"end":{"line":551,"column":70}},"187":{"start":{"line":554,"column":8},"end":{"line":559,"column":9}},"188":{"start":{"line":555,"column":12},"end":{"line":555,"column":29}},"189":{"start":{"line":558,"column":12},"end":{"line":558,"column":29}},"190":{"start":{"line":565,"column":23},"end":{"line":565,"column":52}},"191":{"start":{"line":566,"column":8},"end":{"line":615,"column":11}},"192":{"start":{"line":598,"column":34},"end":{"line":598,"column":66}},"193":{"start":{"line":599,"column":37},"end":{"line":599,"column":39}},"194":{"start":{"line":600,"column":31},"end":{"line":600,"column":59}},"195":{"start":{"line":601,"column":12},"end":{"line":601,"column":68}},"196":{"start":{"line":602,"column":12},"end":{"line":602,"column":68}},"197":{"start":{"line":603,"column":12},"end":{"line":603,"column":68}},"198":{"start":{"line":604,"column":25},"end":{"line":604,"column":109}},"199":{"start":{"line":605,"column":25},"end":{"line":605,"column":109}},"200":{"start":{"line":606,"column":25},"end":{"line":606,"column":109}},"201":{"start":{"line":607,"column":33},"end":{"line":611,"column":13}},"202":{"start":{"line":612,"column":30},"end":{"line":612,"column":104}},"203":{"start":{"line":613,"column":12},"end":{"line":613,"column":41}},"204":{"start":{"line":614,"column":12},"end":{"line":614,"column":32}},"205":{"start":{"line":622,"column":8},"end":{"line":622,"column":28}},"206":{"start":{"line":628,"column":8},"end":{"line":628,"column":30}},"207":{"start":{"line":631,"column":0},"end":{"line":631,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":18},"end":{"line":18,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":13},"end":{"line":30,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":27},"end":{"line":25,"column":28}},"loc":{"start":{"line":25,"column":38},"end":{"line":28,"column":9}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":16},"end":{"line":74,"column":5}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":51,"column":16},"end":{"line":51,"column":17}},"loc":{"start":{"line":51,"column":29},"end":{"line":73,"column":9}},"line":51},"5":{"name":"(anonymous_5)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":29},"end":{"line":110,"column":5}},"line":78},"6":{"name":"(anonymous_6)","decl":{"start":{"line":91,"column":16},"end":{"line":91,"column":17}},"loc":{"start":{"line":91,"column":29},"end":{"line":109,"column":9}},"line":91},"7":{"name":"(anonymous_7)","decl":{"start":{"line":96,"column":30},"end":{"line":96,"column":31}},"loc":{"start":{"line":96,"column":40},"end":{"line":103,"column":13}},"line":96},"8":{"name":"(anonymous_8)","decl":{"start":{"line":105,"column":33},"end":{"line":105,"column":34}},"loc":{"start":{"line":105,"column":43},"end":{"line":107,"column":13}},"line":105},"9":{"name":"(anonymous_9)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":29},"end":{"line":146,"column":5}},"line":114},"10":{"name":"(anonymous_10)","decl":{"start":{"line":127,"column":16},"end":{"line":127,"column":17}},"loc":{"start":{"line":127,"column":29},"end":{"line":145,"column":9}},"line":127},"11":{"name":"(anonymous_11)","decl":{"start":{"line":132,"column":30},"end":{"line":132,"column":31}},"loc":{"start":{"line":132,"column":40},"end":{"line":139,"column":13}},"line":132},"12":{"name":"(anonymous_12)","decl":{"start":{"line":141,"column":33},"end":{"line":141,"column":34}},"loc":{"start":{"line":141,"column":43},"end":{"line":143,"column":13}},"line":141},"13":{"name":"(anonymous_13)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":29},"end":{"line":181,"column":5}},"line":150},"14":{"name":"(anonymous_14)","decl":{"start":{"line":163,"column":16},"end":{"line":163,"column":17}},"loc":{"start":{"line":163,"column":29},"end":{"line":180,"column":9}},"line":163},"15":{"name":"(anonymous_15)","decl":{"start":{"line":168,"column":30},"end":{"line":168,"column":31}},"loc":{"start":{"line":168,"column":40},"end":{"line":175,"column":13}},"line":168},"16":{"name":"(anonymous_16)","decl":{"start":{"line":176,"column":33},"end":{"line":176,"column":34}},"loc":{"start":{"line":176,"column":43},"end":{"line":178,"column":13}},"line":176},"17":{"name":"(anonymous_17)","decl":{"start":{"line":185,"column":4},"end":{"line":185,"column":5}},"loc":{"start":{"line":185,"column":27},"end":{"line":217,"column":5}},"line":185},"18":{"name":"(anonymous_18)","decl":{"start":{"line":198,"column":16},"end":{"line":198,"column":17}},"loc":{"start":{"line":198,"column":29},"end":{"line":216,"column":9}},"line":198},"19":{"name":"(anonymous_19)","decl":{"start":{"line":203,"column":30},"end":{"line":203,"column":31}},"loc":{"start":{"line":203,"column":40},"end":{"line":210,"column":13}},"line":203},"20":{"name":"(anonymous_20)","decl":{"start":{"line":212,"column":33},"end":{"line":212,"column":34}},"loc":{"start":{"line":212,"column":43},"end":{"line":214,"column":13}},"line":212},"21":{"name":"(anonymous_21)","decl":{"start":{"line":221,"column":4},"end":{"line":221,"column":5}},"loc":{"start":{"line":221,"column":28},"end":{"line":253,"column":5}},"line":221},"22":{"name":"(anonymous_22)","decl":{"start":{"line":234,"column":16},"end":{"line":234,"column":17}},"loc":{"start":{"line":234,"column":29},"end":{"line":252,"column":9}},"line":234},"23":{"name":"(anonymous_23)","decl":{"start":{"line":239,"column":30},"end":{"line":239,"column":31}},"loc":{"start":{"line":239,"column":40},"end":{"line":246,"column":13}},"line":239},"24":{"name":"(anonymous_24)","decl":{"start":{"line":248,"column":33},"end":{"line":248,"column":34}},"loc":{"start":{"line":248,"column":43},"end":{"line":250,"column":13}},"line":248},"25":{"name":"(anonymous_25)","decl":{"start":{"line":258,"column":4},"end":{"line":258,"column":5}},"loc":{"start":{"line":258,"column":19},"end":{"line":288,"column":5}},"line":258},"26":{"name":"(anonymous_26)","decl":{"start":{"line":272,"column":16},"end":{"line":272,"column":17}},"loc":{"start":{"line":272,"column":29},"end":{"line":287,"column":9}},"line":272},"27":{"name":"(anonymous_27)","decl":{"start":{"line":292,"column":4},"end":{"line":292,"column":5}},"loc":{"start":{"line":292,"column":27},"end":{"line":306,"column":5}},"line":292},"28":{"name":"(anonymous_28)","decl":{"start":{"line":299,"column":42},"end":{"line":299,"column":43}},"loc":{"start":{"line":299,"column":53},"end":{"line":301,"column":17}},"line":299},"29":{"name":"(anonymous_29)","decl":{"start":{"line":303,"column":16},"end":{"line":303,"column":17}},"loc":{"start":{"line":303,"column":29},"end":{"line":305,"column":9}},"line":303},"30":{"name":"(anonymous_30)","decl":{"start":{"line":311,"column":4},"end":{"line":311,"column":5}},"loc":{"start":{"line":311,"column":36},"end":{"line":319,"column":5}},"line":311},"31":{"name":"(anonymous_31)","decl":{"start":{"line":312,"column":29},"end":{"line":312,"column":30}},"loc":{"start":{"line":312,"column":46},"end":{"line":317,"column":9}},"line":312},"32":{"name":"(anonymous_32)","decl":{"start":{"line":325,"column":4},"end":{"line":325,"column":5}},"loc":{"start":{"line":325,"column":34},"end":{"line":520,"column":5}},"line":325},"33":{"name":"(anonymous_33)","decl":{"start":{"line":328,"column":29},"end":{"line":328,"column":30}},"loc":{"start":{"line":328,"column":45},"end":{"line":333,"column":9}},"line":328},"34":{"name":"(anonymous_34)","decl":{"start":{"line":351,"column":16},"end":{"line":351,"column":17}},"loc":{"start":{"line":351,"column":29},"end":{"line":519,"column":9}},"line":351},"35":{"name":"(anonymous_35)","decl":{"start":{"line":360,"column":28},"end":{"line":360,"column":29}},"loc":{"start":{"line":360,"column":41},"end":{"line":367,"column":21}},"line":360},"36":{"name":"(anonymous_36)","decl":{"start":{"line":380,"column":28},"end":{"line":380,"column":29}},"loc":{"start":{"line":380,"column":41},"end":{"line":417,"column":21}},"line":380},"37":{"name":"(anonymous_37)","decl":{"start":{"line":389,"column":40},"end":{"line":389,"column":41}},"loc":{"start":{"line":389,"column":53},"end":{"line":396,"column":33}},"line":389},"38":{"name":"(anonymous_38)","decl":{"start":{"line":405,"column":40},"end":{"line":405,"column":41}},"loc":{"start":{"line":405,"column":53},"end":{"line":414,"column":33}},"line":405},"39":{"name":"(anonymous_39)","decl":{"start":{"line":406,"column":121},"end":{"line":406,"column":122}},"loc":{"start":{"line":406,"column":129},"end":{"line":408,"column":37}},"line":406},"40":{"name":"(anonymous_40)","decl":{"start":{"line":451,"column":28},"end":{"line":451,"column":29}},"loc":{"start":{"line":451,"column":42},"end":{"line":475,"column":21}},"line":451},"41":{"name":"(anonymous_41)","decl":{"start":{"line":499,"column":28},"end":{"line":499,"column":29}},"loc":{"start":{"line":499,"column":41},"end":{"line":516,"column":21}},"line":499},"42":{"name":"(anonymous_42)","decl":{"start":{"line":524,"column":4},"end":{"line":524,"column":5}},"loc":{"start":{"line":524,"column":26},"end":{"line":539,"column":5}},"line":524},"43":{"name":"(anonymous_43)","decl":{"start":{"line":531,"column":44},"end":{"line":531,"column":45}},"loc":{"start":{"line":531,"column":55},"end":{"line":533,"column":17}},"line":531},"44":{"name":"(anonymous_44)","decl":{"start":{"line":535,"column":16},"end":{"line":535,"column":17}},"loc":{"start":{"line":535,"column":29},"end":{"line":538,"column":9}},"line":535},"45":{"name":"(anonymous_45)","decl":{"start":{"line":543,"column":4},"end":{"line":543,"column":5}},"loc":{"start":{"line":543,"column":33},"end":{"line":560,"column":5}},"line":543},"46":{"name":"(anonymous_46)","decl":{"start":{"line":546,"column":29},"end":{"line":546,"column":30}},"loc":{"start":{"line":546,"column":48},"end":{"line":553,"column":9}},"line":546},"47":{"name":"(anonymous_47)","decl":{"start":{"line":564,"column":4},"end":{"line":564,"column":5}},"loc":{"start":{"line":564,"column":24},"end":{"line":616,"column":5}},"line":564},"48":{"name":"(anonymous_48)","decl":{"start":{"line":597,"column":16},"end":{"line":597,"column":17}},"loc":{"start":{"line":597,"column":29},"end":{"line":615,"column":9}},"line":597},"49":{"name":"(anonymous_49)","decl":{"start":{"line":621,"column":4},"end":{"line":621,"column":5}},"loc":{"start":{"line":621,"column":20},"end":{"line":623,"column":5}},"line":621},"50":{"name":"(anonymous_50)","decl":{"start":{"line":627,"column":4},"end":{"line":627,"column":5}},"loc":{"start":{"line":627,"column":26},"end":{"line":629,"column":5}},"line":627}},"branchMap":{"0":{"loc":{"start":{"line":52,"column":12},"end":{"line":72,"column":13}},"type":"switch","locations":[{"start":{"line":53,"column":16},"end":{"line":55,"column":26}},{"start":{"line":56,"column":16},"end":{"line":58,"column":26}},{"start":{"line":59,"column":16},"end":{"line":61,"column":26}},{"start":{"line":62,"column":16},"end":{"line":64,"column":26}},{"start":{"line":65,"column":16},"end":{"line":67,"column":26}},{"start":{"line":68,"column":16},"end":{"line":71,"column":26}}],"line":52},"1":{"loc":{"start":{"line":92,"column":12},"end":{"line":94,"column":13}},"type":"if","locations":[{"start":{"line":92,"column":12},"end":{"line":94,"column":13}},{"start":{"line":92,"column":12},"end":{"line":94,"column":13}}],"line":92},"2":{"loc":{"start":{"line":97,"column":16},"end":{"line":102,"column":17}},"type":"if","locations":[{"start":{"line":97,"column":16},"end":{"line":102,"column":17}},{"start":{"line":97,"column":16},"end":{"line":102,"column":17}}],"line":97},"3":{"loc":{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},"type":"if","locations":[{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},{"start":{"line":128,"column":12},"end":{"line":130,"column":13}}],"line":128},"4":{"loc":{"start":{"line":133,"column":16},"end":{"line":138,"column":17}},"type":"if","locations":[{"start":{"line":133,"column":16},"end":{"line":138,"column":17}},{"start":{"line":133,"column":16},"end":{"line":138,"column":17}}],"line":133},"5":{"loc":{"start":{"line":164,"column":12},"end":{"line":166,"column":13}},"type":"if","locations":[{"start":{"line":164,"column":12},"end":{"line":166,"column":13}},{"start":{"line":164,"column":12},"end":{"line":166,"column":13}}],"line":164},"6":{"loc":{"start":{"line":169,"column":16},"end":{"line":174,"column":17}},"type":"if","locations":[{"start":{"line":169,"column":16},"end":{"line":174,"column":17}},{"start":{"line":169,"column":16},"end":{"line":174,"column":17}}],"line":169},"7":{"loc":{"start":{"line":199,"column":12},"end":{"line":201,"column":13}},"type":"if","locations":[{"start":{"line":199,"column":12},"end":{"line":201,"column":13}},{"start":{"line":199,"column":12},"end":{"line":201,"column":13}}],"line":199},"8":{"loc":{"start":{"line":204,"column":16},"end":{"line":209,"column":17}},"type":"if","locations":[{"start":{"line":204,"column":16},"end":{"line":209,"column":17}},{"start":{"line":204,"column":16},"end":{"line":209,"column":17}}],"line":204},"9":{"loc":{"start":{"line":235,"column":12},"end":{"line":237,"column":13}},"type":"if","locations":[{"start":{"line":235,"column":12},"end":{"line":237,"column":13}},{"start":{"line":235,"column":12},"end":{"line":237,"column":13}}],"line":235},"10":{"loc":{"start":{"line":240,"column":16},"end":{"line":245,"column":17}},"type":"if","locations":[{"start":{"line":240,"column":16},"end":{"line":245,"column":17}},{"start":{"line":240,"column":16},"end":{"line":245,"column":17}}],"line":240},"11":{"loc":{"start":{"line":273,"column":12},"end":{"line":286,"column":13}},"type":"switch","locations":[{"start":{"line":274,"column":16},"end":{"line":276,"column":26}},{"start":{"line":277,"column":16},"end":{"line":279,"column":26}},{"start":{"line":280,"column":16},"end":{"line":282,"column":26}},{"start":{"line":283,"column":16},"end":{"line":285,"column":26}}],"line":273},"12":{"loc":{"start":{"line":313,"column":12},"end":{"line":316,"column":13}},"type":"if","locations":[{"start":{"line":313,"column":12},"end":{"line":316,"column":13}},{"start":{"line":313,"column":12},"end":{"line":316,"column":13}}],"line":313},"13":{"loc":{"start":{"line":329,"column":12},"end":{"line":332,"column":13}},"type":"if","locations":[{"start":{"line":329,"column":12},"end":{"line":332,"column":13}},{"start":{"line":329,"column":12},"end":{"line":332,"column":13}}],"line":329},"14":{"loc":{"start":{"line":334,"column":8},"end":{"line":337,"column":9}},"type":"if","locations":[{"start":{"line":334,"column":8},"end":{"line":337,"column":9}},{"start":{"line":334,"column":8},"end":{"line":337,"column":9}}],"line":334},"15":{"loc":{"start":{"line":352,"column":12},"end":{"line":518,"column":13}},"type":"switch","locations":[{"start":{"line":353,"column":16},"end":{"line":368,"column":26}},{"start":{"line":369,"column":16},"end":{"line":418,"column":26}},{"start":{"line":419,"column":16},"end":{"line":476,"column":26}},{"start":{"line":477,"column":16},"end":{"line":517,"column":26}}],"line":352},"16":{"loc":{"start":{"line":381,"column":24},"end":{"line":416,"column":25}},"type":"switch","locations":[{"start":{"line":382,"column":28},"end":{"line":397,"column":38}},{"start":{"line":398,"column":28},"end":{"line":415,"column":38}}],"line":381},"17":{"loc":{"start":{"line":547,"column":12},"end":{"line":552,"column":13}},"type":"if","locations":[{"start":{"line":547,"column":12},"end":{"line":552,"column":13}},{"start":{"line":547,"column":12},"end":{"line":552,"column":13}}],"line":547},"18":{"loc":{"start":{"line":554,"column":8},"end":{"line":559,"column":9}},"type":"if","locations":[{"start":{"line":554,"column":8},"end":{"line":559,"column":9}},{"start":{"line":554,"column":8},"end":{"line":559,"column":9}}],"line":554}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":7,"10":7,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":7,"110":1,"111":1,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":1},"f":{"0":1,"1":1,"2":7,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":7,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1},"b":{"0":[0,0,0,0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0],"12":[1,6],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/gruposCollection.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/gruposCollection.ts"],"names":[],"mappings":"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","sourcesContent":["import * as inquirer from \"inquirer\";\nimport { database } from \"./bd\";\nimport { Grupo } from \"./grupo\";\nimport { ID, fecha, estadistica, estadisticaEntrenamiento, historicoRutas } from \"./types\";\n\n/**\n * Clase que representa una colección de grupos.\n * @class\n */\nexport class GruposCollection {\n  private grupos_: Grupo[];\n\n  /**\n   * Constructor de la clase GruposCollection.\n   */\n  constructor() {\n    this.leerBD();\n  }\n  \n  /**\n   * Método que lee los elementos de la base de datos y los guarda en el array de grupos.\n   */\n  leerBD() {\n    const grupos_aux = database.get(\"grupos\").value();\n    const array_aux: Grupo[] = [];\n    grupos_aux.forEach((group) => {\n      const group_aux: Grupo = new Grupo(group.nombre, group.participantes, group.estadisticasEntrenamiento, group.historicoRutas, group.id);\n      array_aux.push(group_aux);\n    });\n    this.setGrupos = array_aux;  \n  }\n\n  //* INFO\n\n  /**\n   * Método que muestra la información de los grupos.\n   */\n  infoGrupo() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué deseas ver?',\n        choices: [\n          {name:'Mostrar por orden alfabético los grupos', value: 'alfabetico'},\n          {name:'Ordenar por kms semanales', value: 'kms_semanales'},\n          {name:'Ordenar por kms mensuales', value: 'kms_mensuales'},\n          {name:'Ordenar por kms anuales', value:'kms_anuales'},\n          {name:'Ordenar por nº de usuarios', value: 'num_usuarios'},\n          {name:'Salir', value: 'Salir'},\n        ]\n      }\n    ]).then((answers) => {\n      switch (answers.opcion) {\n        case 'alfabetico':\n          this.ordenarGruposPorNombre();\n          break;\n        case 'kms_semanales':\n          this.ordenarPorKmsSemanales();\n          break;\n        case 'kms_mensuales':\n          this.ordenarPorKmsMensuales();\n          break;\n        case 'kms_anuales':\n          this.ordenarPorKmsAnuales();\n          break;\n        case 'num_usuarios':\n          this.ordenarPorNumUsuarios();\n          break;\n        case 'Salir':\n          // cerrar prompt\n          process.exit(0);\n          break;\n      }\n    });\n  }\n  \n  /**\n   * Método que ordena los grupos por nombre.\n   */\n  ordenarGruposPorNombre() {\n    let ascendente = true; // por defecto ascendente\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_grupos = this.grupos_;\n      copia_grupos.sort((a, b) => {\n        if (ascendente) {\n          return a.getNombre.localeCompare(b.getNombre);\n        }\n        else {\n          return b.getNombre.localeCompare(a.getNombre);\n        }\n      });\n      console.log(\"Grupos: \")\n      copia_grupos.forEach((ruta) => {\n        console.log(ruta.getNombre);\n      });\n      this.infoGrupo();\n    });\n  }\n\n  /**\n   * Método que ordena los grupos por kms semanales.\n   */\n  ordenarPorKmsSemanales() {\n    let ascendente = true; // por defecto ascendente\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_grupos = this.grupos_\n      copia_grupos.sort((a, b) => {\n        if (ascendente) {\n          return a.getEstadisticasEntrenamiento.semana.km - b.getEstadisticasEntrenamiento.semana.km;\n        }\n        else {\n          return b.getEstadisticasEntrenamiento.semana.km - a.getEstadisticasEntrenamiento.semana.km;\n        }\n      });\n      // mostrar\n      copia_grupos.forEach((ruta) => {\n        console.log(`Kms semanales: ${ruta.getEstadisticasEntrenamiento.semana.km}`);\n      });\n      this.infoGrupo();\n    });\n  }\n\n  /**\n   * Método que ordena los grupos por kms mensuales.\n   */\n  ordenarPorKmsMensuales() {\n    let ascendente = true; // por defecto ascendente\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_grupos = this.grupos_;\n      copia_grupos.sort((a, b) => {\n        if (ascendente) {\n          return a.getEstadisticasEntrenamiento.mes.km - b.getEstadisticasEntrenamiento.mes.km;\n        }\n        else {\n          return b.getEstadisticasEntrenamiento.mes.km - a.getEstadisticasEntrenamiento.mes.km;\n        }\n      });\n      copia_grupos.forEach((ruta) => {\n        console.log(`Kms mensuales: ${ruta.getEstadisticasEntrenamiento.mes.km}`);\n      });\n      this.infoGrupo();\n    });\n  }\n\n  /**\n   * Método que ordena los grupos por kms anuales.\n   */\n  ordenarPorKmsAnuales() {\n    let ascendente = true; // por defecto ascendente\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_grupos = this.grupos_;\n      copia_grupos.sort((a, b) => {\n        if (ascendente) {\n          return a.getEstadisticasEntrenamiento.año.km - b.getEstadisticasEntrenamiento.año.km;\n        }\n        else {\n          return b.getEstadisticasEntrenamiento.año.km - a.getEstadisticasEntrenamiento.año.km;\n        }\n      });\n      // mostrar\n      copia_grupos.forEach((ruta) => {\n        console.log(`Kms anuales: ${ruta.getEstadisticasEntrenamiento.año.km}`);\n      });\n      this.infoGrupo();\n    });\n  }\n\n  /**\n   * Método que ordena los grupos por número de usuarios.\n   */\n  ordenarPorNumUsuarios() {\n    let ascendente = true; // por defecto ascendente\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_grupos = this.grupos_;\n      copia_grupos.sort((a, b) => {\n        if (ascendente) {\n          return a.getParticipantes.length - b.getParticipantes.length;\n        }\n        else {\n          return b.getParticipantes.length - a.getParticipantes.length;\n        }\n      });\n      // mostrar\n      copia_grupos.forEach((ruta) => {\n        console.log(`Número de usuarios: ${ruta.getParticipantes.length}`);\n      });\n      this.infoGrupo();\n    });\n  }\n\n  //* MANAGE\n\n  /**\n   * Método que gestiona los grupos.\n   */\n  manageGrupos() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué deseas hacer?',\n        choices: [\n          {name:'Añadir grupo', value: 'añadir'},\n          {name:'Eliminar grupo', value: 'eliminar'},\n          {name: 'Modificar', value: 'modificar'},\n          {name:'Salir', value: 'Salir'},\n        ]\n      }\n    ]).then((answers) => {\n      switch (answers.opcion) {\n        case 'añadir':\n          this.promptAñadirGrupo();\n          break;\n        case 'eliminar':\n          this.promptEliminarGrupo();\n          break;\n        case 'modificar':\n          this.promptModificarGrupo();\n          break;\n        case 'Salir':\n          process.exit(0);\n          break;\n      }\n    });\n  }\n\n  \n  /**\n   * Método que impelementa el prompt para modificar un grupo.\n   */\n  promptModificarGrupo() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué grupo deseas modificar?',\n        choices: this.grupos_.map((group) => {\n          return {name: group.getNombre, value: group.getID};\n        }\n        )\n      }\n    ]).then((answers) => {\n      this.modificarGrupo(answers.opcion);    \n    });\n  }\n\n  /**\n   * Metodo para borrar un elemento de la base de datos\n   * @param identificador \n   */\n  borrarElementoBD(identificador: ID): boolean{\n    this.grupos_.forEach((grp, indice) => {\n      if (grp.getID == identificador) {\n        database.get(\"grupos\").splice(indice,1).write();\n        return true;\n      }\n    });\n    return false;\n  }\n\n  /**\n   * Método que modifica un grupo.\n   * @param identificador \n   * @returns \n   */\n  modificarGrupo(identificador: ID) {\n    let id_existe_en_coleccion = false;\n    let indice = -1;\n    this.grupos_.forEach((grp, index) => {\n      if (grp.getID == identificador) {\n        id_existe_en_coleccion = true;\n        indice = index;\n      }\n    }\n    );\n    if (!id_existe_en_coleccion) {\n      console.log('No existe el grupo que se intenta modificar');\n      return;\n    }\n\n    const prompt = inquirer.createPromptModule();\n    prompt([ \n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué quieres modificar?',\n        choices: [\n          {name:'Nombre', value: 'nombre'},\n          {name:'Participantes', value: 'participantes'},\n          {name:'Estadísticas', value: 'estadisticas'},\n          {name:'Historico de rutas', value: 'historico_rutas'},\n        ]\n      }\n    ]).then((answers) => {\n      switch (answers.opcion) {\n        case 'nombre':\n          prompt([\n            {\n              type: 'input',\n              name: 'nombre2',\n              message: 'Introduce el nuevo nombre del usuario',\n            }\n          ]).then((answers) => {\n            this.grupos_[indice].setNombre = answers.nombre2;\n            this.borrarElementoBD(identificador);\n            const grupo_aux = new Grupo(this.grupos_[indice].getNombre, this.grupos_[indice].getParticipantes,this.grupos_[indice].getEstadisticasEntrenamiento, this.grupos_[indice].getHistoricoRutas,  this.grupos_[indice].getID);\n            this.grupos_.push(grupo_aux);\n            this.grupos_.splice(indice, 1);\n            this.manageGrupos();\n          }\n          );\n          break;\n        case 'participantes':\n          prompt([\n            {\n              type: 'list',\n              name: 'opcion',\n              message: '¿Qué deseas hacer?',\n              choices: [\n                {name:'Añadir participante', value: 'añadir'},\n                {name:'Eliminar participante', value: 'eliminar'},\n              ]\n            }\n          ]).then((answers) => {\n            switch (answers.opcion) {\n              case 'añadir':\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'id_participante',\n                    message: 'Introduce el id del participante',\n                  }\n                ]).then((answers) => {\n                  this.grupos_[indice].setParticipantes = this.grupos_[indice].getParticipantes.concat(answers.id_participante); \n                  this.borrarElementoBD(identificador);\n                  const grupo_aux = new Grupo(this.grupos_[indice].getNombre, this.grupos_[indice].getParticipantes,this.grupos_[indice].getEstadisticasEntrenamiento, this.grupos_[indice].getHistoricoRutas,  this.grupos_[indice].getID);\n                  this.grupos_.push(grupo_aux);\n                  this.grupos_.splice(indice, 1);\n                  this.manageGrupos();\n                });\n                break;\n              case 'eliminar':\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'id_participante',\n                    message: 'Introduce el id del participante',\n                  }\n                ]).then((answers) => {\n                  this.grupos_[indice].setParticipantes = this.grupos_[indice].getParticipantes.filter((id) => {\n                    return id != answers.id_participante;\n                  });\n                  this.borrarElementoBD(identificador);\n                  const grupo_aux = new Grupo(this.grupos_[indice].getNombre, this.grupos_[indice].getParticipantes,this.grupos_[indice].getEstadisticasEntrenamiento, this.grupos_[indice].getHistoricoRutas,  this.grupos_[indice].getID);\n                  this.grupos_.push(grupo_aux);\n                  this.grupos_.splice(indice, 1);\n                  this.manageGrupos();\n                });\n              break;\n            }\n          });\n          break;\n        case 'estadisticas':\n          prompt([\n            {\n              type: 'input',\n              name: 'kms_semana',\n              message: 'Introduce los kms de la semana',\n            },\n            {\n              type: 'input',\n              name: 'desnivel_semana',\n              message: 'Introduce el desnivel de la semana',\n            },\n            {\n              type: 'input',\n              name: 'kms_mes',\n              message: 'Introduce los kms del mes',\n            },\n            {\n              type: 'input',\n              name: 'desnivel_mes',\n              message: 'Introduce el desnivel del mes',\n            },\n            {\n              type: 'input',\n              name: 'kms_año',\n              message: 'Introduce los kms del año',\n            },\n            {\n              type: 'input',\n              name: 'desnivel_año',\n              message: 'Introduce el desnivel del año',\n            }\n          ]).then((answers5) => {\n            const new_estadistica_semana: estadistica = {\n              km: answers5.kms_semana,\n              desnivel: answers5.desnivel_semana,\n            }\n            const new_estadistica_mes: estadistica  = {\n              km: answers5.kms_mes,\n              desnivel: answers5.desnivel_mes,\n            }\n            const new_estadistica_año: estadistica  = {\n              km: answers5.kms_año,\n              desnivel: answers5.desnivel_año,\n            }\n            const new_estadisticas: estadisticaEntrenamiento = {\n              semana: new_estadistica_semana,\n              mes: new_estadistica_mes,\n              año: new_estadistica_año,\n            }\n            this.grupos_[indice].setEstadisticasEntrenamiento = new_estadisticas;\n            this.borrarElementoBD(identificador);\n            const grupos_aux = new Grupo(this.grupos_[indice].getNombre, this.grupos_[indice].getParticipantes, this.grupos_[indice].getEstadisticasEntrenamiento, this.grupos_[indice].getHistoricoRutas, this.grupos_[indice].getID);\n            this.grupos_.push(grupos_aux);\n            this.grupos_.splice(indice, 1);\n            this.manageGrupos();\n          });\n          \n          break;\n        case 'historico_rutas':\n          prompt([\n            {\n              type: 'input',\n              name: 'dia',\n              message: 'Introduce el dia de la ruta',\n            },\n            {\n              type: 'input',\n              name: 'mes',\n              message: 'Introduce el mes de la ruta',\n            },\n            {\n              type: 'input',\n              name: 'año',\n              message: 'Introduce el año de la ruta',\n            },\n            {\n              type: 'input',\n              name: 'id',\n              message: 'Introduce el id de la ruta',\n            }\n          ]).then((answers) => {\n            // generar una fecha nueva\n            const new_fecha = {\n              dia: answers.dia,\n              mes: answers.mes,\n              año: answers.año,\n            }\n            const new_historico = {\n              fecha: new_fecha,\n              id: answers.id,\n            }\n            this.grupos_[indice].getHistoricoRutas.push(new_historico);\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Grupo(this.grupos_[indice].getNombre, this.grupos_[indice].getParticipantes, this.grupos_[indice].getEstadisticasEntrenamiento, this.grupos_[indice].getHistoricoRutas, this.grupos_[indice].getID);\n            this.grupos_.push(ruta_aux);\n            this.grupos_.splice(indice, 1);\n            this.manageGrupos();\n          });\n          break;\n      }\n    });\n  }\n\n  /**\n   * Método que permite eliminar un grupo\n   */\n  promptEliminarGrupo() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué grupo deseas eliminar?',\n        choices: this.getGrupos.map((group) => {\n          return {name: group.getNombre, value: group.getID};\n        }\n        )\n      }\n    ]).then((answers) => {\n      this.eliminarGrupo(answers.opcion);\n      this.manageGrupos();\n    });\n  }\n  \n  /**\n   * Método que permite eliminar un grupo\n   */\n  eliminarGrupo(identificador: ID): Grupo | undefined {\n    let control_bool = false;\n    let grupo_aux: Grupo | undefined;\n\n    this.grupos_.forEach((grupo, indice) => {\n      if (grupo.getID == identificador) {\n        grupo_aux = grupo;\n        this.grupos_.splice(indice, 1);\n        control_bool = true;\n        database.get(\"grupos\").splice(indice,1).write();\n      }\n    });\n    if (control_bool) {\n      return grupo_aux;\n    }\n    else {\n      return undefined;\n    }\n    \n  }\n\n  /**\n   * Método que permite añadir un grupo\n   */\n  promptAñadirGrupo() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'input',\n        name: 'nombre',\n        message: 'Introduce el nombre del grupo',\n      },\n      {\n        type: 'input',\n        name: 'participantes',\n        message: 'Introduce los participantes del grupo \"id1,id2,...\"',\n      },\n      {\n        type: 'input',\n        name: 'estadisticas1',\n        message: 'Introduce las estadísticas de la semana: \"km,desnivel\"',\n      },\n      {\n        type: 'input',\n        name: 'estadisticas2',\n        message: 'Introduce las estadísticas del mes: \"km,desnivel\"',\n      },\n      {\n        type: 'input',\n        name: 'estadisticas3',\n        message: 'Introduce las estadísticas del año: \"km,desnivel\"',\n      },\n      {\n        type: 'input',\n        name: 'historico',\n        message: 'Introduce el histórico de rutas del grupo: \"id1,id2,...\"',\n      },\n    ]).then((answers) => {\n      const participantes: ID[] = answers.participantes.split(',');\n      const estadisticas_aux = [];\n      const historico2 = answers.historico.split(',');\n      estadisticas_aux.push(answers.estadisticas1.split(\",\"));\n      estadisticas_aux.push(answers.estadisticas2.split(\",\"));\n      estadisticas_aux.push(answers.estadisticas3.split(\",\"));\n      \n      const est1: estadistica = {km: parseInt(estadisticas_aux[0][0]), desnivel: parseInt(estadisticas_aux[0][1])};\n      const est2: estadistica = {km: parseInt(estadisticas_aux[1][0]), desnivel: parseInt(estadisticas_aux[1][1])};\n      const est3: estadistica = {km: parseInt(estadisticas_aux[2][0]), desnivel: parseInt(estadisticas_aux[2][1])};\n\n      const estadisticas: estadisticaEntrenamiento = {\n        semana: est1,\n        mes: est2,\n        año: est3\n      }\n\n      const grupo_aux = new Grupo(answers.nombre, participantes, estadisticas, historico2);\n      this.grupos_.push(grupo_aux);\n      this.manageGrupos();\n    });\n  }\n\n    \n  //* SETTERs Y GETTERs\n\n  /**\n   * Método que devuelve los grupos\n   */\n  get getGrupos(): Grupo[] {\n    return this.grupos_;\n  }\n\n  /**\n   * Método que modifica los grupos\n   */\n  set setGrupos(grupos: Grupo[]) {\n    this.grupos_ = grupos;\n  }\n\n}\n\n// const semana: estadistica = {\n//   km: 10,\n//   desnivel: 1000\n// }\n\n// const semana2: estadistica = {\n//   km: 20,\n//   desnivel: 200\n// }\n\n// const semana3: estadistica = {\n//   km: 30,\n//   desnivel: 300\n// }\n\n// const mes: estadistica = {\n//   km: 20,\n//   desnivel: 2000\n// }\n\n// const mes2: estadistica = {\n//   km: 30,\n//   desnivel: 3000\n// }\n\n// const mes3: estadistica = {\n//   km: 40,\n//   desnivel: 4000\n// }\n\n// const año: estadistica = {\n//   km: 30,\n//   desnivel: 3000\n// }\n\n// const año2: estadistica = {\n//   km: 40,\n//   desnivel: 4000\n// }\n\n// const año3: estadistica = {\n//   km: 50,\n//   desnivel: 5000\n// }\n\n// const estadisticas: estadisticaEntrenamiento = {\n//   semana: semana,\n//   mes: mes,\n//   año: año\n// }\n\n// const estadisticas2: estadisticaEntrenamiento = {\n//   semana: semana2,\n//   mes: mes2,\n//   año: año2\n// }\n\n// const estadisticas3: estadisticaEntrenamiento = {\n//   semana: semana3,\n//   mes: mes3,\n//   año: año3\n// }\n\n// const fecha1: fecha = {\n//   dia: 1,\n//   mes: 1,\n//   año: 2021\n// }\n\n// const fecha2: fecha = {\n//   dia: 2,\n//   mes: 2,\n//   año: 2021\n// }\n\n// const fecha3: fecha = {\n//   dia: 3,\n//   mes: 3,\n//   año: 2021\n// }\n\n// const fecha4: fecha = {\n//   dia: 4,\n//   mes: 4,\n//   año: 2021\n// }\n\n// const historic1: historicoRutas = {\n//   fecha: fecha1,\n//   id: 1\n// }\n\n// const historic2: historicoRutas = {\n//   fecha: fecha2,\n//   id: 2\n// }\n\n// const historic3: historicoRutas = {\n//   fecha: fecha3,\n//   id: 3\n// }\n\n// const historic4: historicoRutas = {\n//   fecha: fecha4,\n//   id: 1\n// }\n\n// const historic5: historicoRutas = {\n//   fecha: fecha1,\n//   id: 2\n// }\n\n// const historic6: historicoRutas = {\n//   fecha: fecha2,\n//   id: 3\n// }\n\n// const grupo0 = new Grupo('Grupo 0', [0,1,2,3,4,5,6,7,8,9,10], estadisticas, [historic1,historic2]);\n// const grupo1 = new Grupo('Grupo 1', [0,1,2,3,4,5], estadisticas2, [historic3,historic4]);\n// const grupo2 = new Grupo('Grupo 2', [0,6,7,8,9,10], estadisticas3, [historic5,historic6]);\n// const grupo3 = new Grupo('Grupo 3', [0,4,5,6,7,8,9,10], estadisticas, [historic1,historic2]);\n// const grupo4 = new Grupo('Grupo 4', [0,1,2,3,4,5,6,7,8,9,10], estadisticas2, [historic3,historic4]);\n// const grupo5 = new Grupo('Grupo 5', [0,6,7,8,9,10], estadisticas3, [historic5,historic6]);"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8e2e6ff6b281bd7c50b993ea029f57225020ca33","contentHash":"8f5ad0ea9b0472c17ea076d2e296cbed7e6a5b69026779a2e2db451f5232fcb4"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/reto.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/reto.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":28}},"3":{"start":{"line":24,"column":8},"end":{"line":24,"column":30}},"4":{"start":{"line":25,"column":8},"end":{"line":25,"column":28}},"5":{"start":{"line":26,"column":8},"end":{"line":26,"column":46}},"6":{"start":{"line":27,"column":8},"end":{"line":27,"column":44}},"7":{"start":{"line":28,"column":8},"end":{"line":28,"column":34}},"8":{"start":{"line":29,"column":26},"end":{"line":29,"column":74}},"9":{"start":{"line":30,"column":8},"end":{"line":56,"column":9}},"10":{"start":{"line":31,"column":12},"end":{"line":31,"column":92}},"11":{"start":{"line":34,"column":12},"end":{"line":47,"column":13}},"12":{"start":{"line":35,"column":16},"end":{"line":35,"column":30}},"13":{"start":{"line":39,"column":34},"end":{"line":39,"column":78}},"14":{"start":{"line":40,"column":16},"end":{"line":40,"column":48}},"15":{"start":{"line":40,"column":41},"end":{"line":40,"column":46}},"16":{"start":{"line":41,"column":16},"end":{"line":46,"column":17}},"17":{"start":{"line":42,"column":20},"end":{"line":42,"column":33}},"18":{"start":{"line":45,"column":20},"end":{"line":45,"column":67}},"19":{"start":{"line":48,"column":12},"end":{"line":55,"column":23}},"20":{"start":{"line":64,"column":25},"end":{"line":64,"column":26}},"21":{"start":{"line":65,"column":22},"end":{"line":65,"column":56}},"22":{"start":{"line":67,"column":8},"end":{"line":74,"column":9}},"23":{"start":{"line":67,"column":21},"end":{"line":67,"column":22}},"24":{"start":{"line":69,"column":12},"end":{"line":73,"column":15}},"25":{"start":{"line":70,"column":16},"end":{"line":72,"column":17}},"26":{"start":{"line":71,"column":20},"end":{"line":71,"column":52}},"27":{"start":{"line":75,"column":8},"end":{"line":75,"column":26}},"28":{"start":{"line":83,"column":8},"end":{"line":83,"column":24}},"29":{"start":{"line":90,"column":8},"end":{"line":90,"column":28}},"30":{"start":{"line":97,"column":8},"end":{"line":97,"column":27}},"31":{"start":{"line":104,"column":8},"end":{"line":104,"column":36}},"32":{"start":{"line":111,"column":8},"end":{"line":111,"column":32}},"33":{"start":{"line":118,"column":8},"end":{"line":118,"column":30}},"34":{"start":{"line":125,"column":8},"end":{"line":125,"column":33}},"35":{"start":{"line":132,"column":8},"end":{"line":132,"column":30}},"36":{"start":{"line":139,"column":8},"end":{"line":139,"column":28}},"37":{"start":{"line":146,"column":8},"end":{"line":146,"column":46}},"38":{"start":{"line":153,"column":8},"end":{"line":153,"column":38}},"39":{"start":{"line":160,"column":8},"end":{"line":160,"column":34}},"40":{"start":{"line":163,"column":0},"end":{"line":163,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":61},"end":{"line":57,"column":5}},"line":23},"1":{"name":"(anonymous_1)","decl":{"start":{"line":40,"column":31},"end":{"line":40,"column":32}},"loc":{"start":{"line":40,"column":41},"end":{"line":40,"column":46}},"line":40},"2":{"name":"(anonymous_2)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":16},"end":{"line":76,"column":5}},"line":62},"3":{"name":"(anonymous_3)","decl":{"start":{"line":69,"column":32},"end":{"line":69,"column":33}},"loc":{"start":{"line":69,"column":42},"end":{"line":73,"column":13}},"line":69},"4":{"name":"(anonymous_4)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":16},"end":{"line":84,"column":5}},"line":82},"5":{"name":"(anonymous_5)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":20},"end":{"line":91,"column":5}},"line":89},"6":{"name":"(anonymous_6)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":19},"end":{"line":98,"column":5}},"line":96},"7":{"name":"(anonymous_7)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":27},"end":{"line":105,"column":5}},"line":103},"8":{"name":"(anonymous_8)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":23},"end":{"line":112,"column":5}},"line":110},"9":{"name":"(anonymous_9)","decl":{"start":{"line":117,"column":4},"end":{"line":117,"column":5}},"loc":{"start":{"line":117,"column":22},"end":{"line":119,"column":5}},"line":117},"10":{"name":"(anonymous_10)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":29},"end":{"line":126,"column":5}},"line":124},"11":{"name":"(anonymous_11)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":26},"end":{"line":133,"column":5}},"line":131},"12":{"name":"(anonymous_12)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":24},"end":{"line":140,"column":5}},"line":138},"13":{"name":"(anonymous_13)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":41},"end":{"line":147,"column":5}},"line":145},"14":{"name":"(anonymous_14)","decl":{"start":{"line":152,"column":4},"end":{"line":152,"column":5}},"loc":{"start":{"line":152,"column":33},"end":{"line":154,"column":5}},"line":152},"15":{"name":"(anonymous_15)","decl":{"start":{"line":159,"column":4},"end":{"line":159,"column":5}},"loc":{"start":{"line":159,"column":30},"end":{"line":161,"column":5}},"line":159}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":56,"column":9}},{"start":{"line":30,"column":8},"end":{"line":56,"column":9}}],"line":30},"1":{"loc":{"start":{"line":34,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":47,"column":13}},{"start":{"line":34,"column":12},"end":{"line":47,"column":13}}],"line":34},"2":{"loc":{"start":{"line":41,"column":16},"end":{"line":46,"column":17}},"type":"if","locations":[{"start":{"line":41,"column":16},"end":{"line":46,"column":17}},{"start":{"line":41,"column":16},"end":{"line":46,"column":17}}],"line":41},"3":{"loc":{"start":{"line":70,"column":16},"end":{"line":72,"column":17}},"type":"if","locations":[{"start":{"line":70,"column":16},"end":{"line":72,"column":17}},{"start":{"line":70,"column":16},"end":{"line":72,"column":17}}],"line":70}},"s":{"0":1,"1":1,"2":1,"3":5,"4":5,"5":5,"6":5,"7":5,"8":5,"9":5,"10":4,"11":1,"12":0,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":1,"20":5,"21":5,"22":5,"23":5,"24":10,"25":38,"26":9,"27":5,"28":5,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1},"f":{"0":5,"1":1,"2":5,"3":38,"4":5,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"b":{"0":[4,1],"1":[0,1],"2":[0,1],"3":[9,29]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/reto.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/reto.ts"],"names":[],"mappings":"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","sourcesContent":["import { actividad, ID } from \"./types\";\nimport { Usuario } from \"./usuario\";\nimport { Ruta } from \"./ruta\";\n\nimport { database } from \"./bd\";\n\n/**\n * Clase que representa un reto.\n * @class\n */\nexport class Reto {\n  private id_: ID;\n  private nombre_: string;\n  private rutas_: ID[];\n  private tipo_actividad_ : actividad;\n  private km_totales_: number;\n  private usuarios_: ID[];\n\n  /**\n   * Constructor de la clase Reto.\n   * @param nombre \n   * @param rutas \n   * @param tipo_actividad \n   * @param id \n   */\n  constructor(nombre: string, rutas: ID[], tipo_actividad: actividad, usuarios: ID[], id?: ID) {\n    this.nombre_ = nombre;\n    this.rutas_ = rutas;\n    this.tipo_actividad_ = tipo_actividad;\n    this.km_totales_ = this.kmTotales();\n    this.usuarios_ = usuarios;\n\n    const id_global = database.get(\"retos\").map(\"nombre\").value();\n    if (id_global.includes(this.nombre_)) {\n      this.id_ = database.get(\"retos\").find({ nombre: this.nombre_ }).value().id;\n    } else {\n      if (id !== undefined) {\n        this.id_ = id;\n      }\n      else {\n        // buscar el id más alto y sumarle 1\n        const id_global = database.get(\"retos\").map(\"id\").value();\n        id_global.sort((a, b) => a - b);\n        if (id_global.length === 0) {\n          this.id_ = 1;\n        }\n        else {\n          this.id_ = id_global[id_global.length - 1] + 1;\n        }\n      }\n      database.get(\"retos\").push({\n        id: this.id_,\n        nombre: this.nombre_,\n        rutas: this.rutas_,\n        tipo_actividad: this.tipo_actividad_,\n        km_totales: this.km_totales_,\n        usuarios: this.usuarios_\n      }).write();\n    }\n  }\n\n\n  /**\n   * Método que devuelve el número total de km de todas las rutas.\n   * @returns KM totales de todas las rutas\n   */\n  public kmTotales(): number {\n    // calcular los km totales de todas las rutas\n    let km_totales = 0;\n    const rutas = database.get(\"rutas\").value();\n    // recorrer todas las rutas\n    for (let i = 0; i < rutas.length; i++) {\n      // si la ruta está en el reto\n      this.rutas_.forEach((ruta) => {\n        if (ruta === rutas[i].id) {\n          km_totales += rutas[i].longitud;\n        }\n      }\n      );\n    }\n    return km_totales;\n  }\n\n  //* getter y setter\n\n  /**\n   * Método que devuelve el id del reto\n   * @returns -- id del reto\n   */\n  get getId(): ID {\n    return this.id_;\n  }\n\n  /**\n   * Método que devuelve el nombre del reto\n   * @returns -- nombre del reto\n   */\n  get getNombre(): string {\n    return this.nombre_;\n  }\n\n  /**\n   * Método que devuelve las rutas del reto\n   * @returns -- rutas del reto\n   */\n  get getRutas(): ID[] {\n    return this.rutas_;\n  }\n\n  /**\n   * Método que devuelve el tipo de actividad del reto\n   * @returns -- tipo de actividad del reto\n   */\n  get getTipoActividad(): actividad {\n    return this.tipo_actividad_;\n  }\n\n  /**\n   * Método que devuelve los km totales del reto\n   * @returns -- km totales del reto\n   */\n  get getKmTotales(): number {\n    return this.km_totales_;\n  }\n\n  /**\n   * Método que devuelve los usuarios del reto\n   * @returns -- usuarios del reto\n   */\n  get getUsuarios(): ID[] {\n    return this.usuarios_;\n  }\n\n  /**\n   * Método que modifica el nombre del reto\n   * @param nombre -- nuevo nombre del reto\n   */\n  set setId(identificador: ID) {\n    this.id_ = identificador;\n  }\n\n  /**\n   * Método que modifica el nombre del reto\n   * @param nombre -- nuevo nombre del reto\n   */\n  set setNombre(nombre: string) {\n    this.nombre_ = nombre;\n  }\n\n  /**\n   * Método que modifica las rutas del reto\n   * @param rutas -- nuevas rutas del reto\n   */\n  set setRutas(rutas: ID[]) {\n    this.rutas_ = rutas;\n  }\n\n  /**\n   * Método que modifica el tipo de actividad del reto\n   * @param tipo_actividad -- nuevo tipo de actividad del reto\n   */\n  set setTipoActividad(tipo_actividad: actividad) {\n    this.tipo_actividad_ = tipo_actividad;\n  }\n\n  /**\n   * Método que modifica los km totales del reto\n   * @param km_totales -- nuevos km totales del reto\n   */\n  set setKmTotales(km_totales: number) {\n    this.km_totales_ = km_totales;\n  }\n\n  /**\n   * Método que añade un usuario al reto\n   * @param usuario -- usuario a añadir\n   */\n  set setUsuarios(usuarios: ID[]) {\n    this.usuarios_ = usuarios;\n  }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5f368d3ca9eb104504e6de39daaf2fd686789a6f","contentHash":"65f44aa34ffe6f7e663745819317eef8e208bcfabd7b5abeb2bbc62a82d1d11c"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/retoCollection.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/retoCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":28}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":32}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":22}},"6":{"start":{"line":24,"column":26},"end":{"line":24,"column":60}},"7":{"start":{"line":25,"column":26},"end":{"line":25,"column":28}},"8":{"start":{"line":26,"column":8},"end":{"line":29,"column":11}},"9":{"start":{"line":27,"column":30},"end":{"line":27,"column":106}},"10":{"start":{"line":28,"column":12},"end":{"line":28,"column":38}},"11":{"start":{"line":30,"column":8},"end":{"line":30,"column":34}},"12":{"start":{"line":37,"column":23},"end":{"line":37,"column":52}},"13":{"start":{"line":38,"column":8},"end":{"line":66,"column":11}},"14":{"start":{"line":51,"column":12},"end":{"line":65,"column":13}},"15":{"start":{"line":53,"column":20},"end":{"line":53,"column":44}},"16":{"start":{"line":54,"column":20},"end":{"line":54,"column":26}},"17":{"start":{"line":56,"column":20},"end":{"line":56,"column":46}},"18":{"start":{"line":57,"column":20},"end":{"line":57,"column":26}},"19":{"start":{"line":59,"column":20},"end":{"line":59,"column":47}},"20":{"start":{"line":60,"column":20},"end":{"line":60,"column":26}},"21":{"start":{"line":63,"column":20},"end":{"line":63,"column":36}},"22":{"start":{"line":64,"column":20},"end":{"line":64,"column":26}},"23":{"start":{"line":72,"column":23},"end":{"line":72,"column":52}},"24":{"start":{"line":73,"column":8},"end":{"line":104,"column":11}},"25":{"start":{"line":99,"column":26},"end":{"line":99,"column":50}},"26":{"start":{"line":100,"column":29},"end":{"line":100,"column":56}},"27":{"start":{"line":101,"column":29},"end":{"line":101,"column":96}},"28":{"start":{"line":102,"column":12},"end":{"line":102,"column":39}},"29":{"start":{"line":103,"column":12},"end":{"line":103,"column":31}},"30":{"start":{"line":110,"column":23},"end":{"line":110,"column":52}},"31":{"start":{"line":111,"column":8},"end":{"line":123,"column":11}},"32":{"start":{"line":117,"column":20},"end":{"line":117,"column":71}},"33":{"start":{"line":121,"column":12},"end":{"line":121,"column":46}},"34":{"start":{"line":122,"column":12},"end":{"line":122,"column":31}},"35":{"start":{"line":126,"column":27},"end":{"line":126,"column":32}},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":11}},"37":{"start":{"line":129,"column":12},"end":{"line":134,"column":13}},"38":{"start":{"line":130,"column":16},"end":{"line":130,"column":33}},"39":{"start":{"line":131,"column":16},"end":{"line":131,"column":46}},"40":{"start":{"line":132,"column":16},"end":{"line":132,"column":36}},"41":{"start":{"line":133,"column":16},"end":{"line":133,"column":69}},"42":{"start":{"line":136,"column":8},"end":{"line":141,"column":9}},"43":{"start":{"line":137,"column":12},"end":{"line":137,"column":29}},"44":{"start":{"line":140,"column":12},"end":{"line":140,"column":29}},"45":{"start":{"line":147,"column":23},"end":{"line":147,"column":52}},"46":{"start":{"line":148,"column":8},"end":{"line":159,"column":11}},"47":{"start":{"line":154,"column":20},"end":{"line":154,"column":71}},"48":{"start":{"line":158,"column":12},"end":{"line":158,"column":47}},"49":{"start":{"line":162,"column":23},"end":{"line":162,"column":52}},"50":{"start":{"line":163,"column":37},"end":{"line":163,"column":42}},"51":{"start":{"line":164,"column":21},"end":{"line":164,"column":23}},"52":{"start":{"line":165,"column":8},"end":{"line":170,"column":11}},"53":{"start":{"line":166,"column":12},"end":{"line":169,"column":13}},"54":{"start":{"line":167,"column":16},"end":{"line":167,"column":46}},"55":{"start":{"line":168,"column":16},"end":{"line":168,"column":31}},"56":{"start":{"line":171,"column":8},"end":{"line":174,"column":9}},"57":{"start":{"line":172,"column":12},"end":{"line":172,"column":71}},"58":{"start":{"line":173,"column":12},"end":{"line":173,"column":19}},"59":{"start":{"line":175,"column":8},"end":{"line":336,"column":11}},"60":{"start":{"line":188,"column":12},"end":{"line":335,"column":13}},"61":{"start":{"line":190,"column":20},"end":{"line":203,"column":23}},"62":{"start":{"line":197,"column":24},"end":{"line":197,"column":72}},"63":{"start":{"line":198,"column":24},"end":{"line":198,"column":61}},"64":{"start":{"line":199,"column":42},"end":{"line":199,"column":201}},"65":{"start":{"line":200,"column":24},"end":{"line":200,"column":52}},"66":{"start":{"line":201,"column":24},"end":{"line":201,"column":54}},"67":{"start":{"line":202,"column":24},"end":{"line":202,"column":43}},"68":{"start":{"line":204,"column":20},"end":{"line":204,"column":26}},"69":{"start":{"line":206,"column":20},"end":{"line":258,"column":23}},"70":{"start":{"line":217,"column":24},"end":{"line":257,"column":25}},"71":{"start":{"line":219,"column":32},"end":{"line":232,"column":35}},"72":{"start":{"line":226,"column":36},"end":{"line":226,"column":85}},"73":{"start":{"line":227,"column":36},"end":{"line":227,"column":73}},"74":{"start":{"line":228,"column":54},"end":{"line":228,"column":228}},"75":{"start":{"line":229,"column":36},"end":{"line":229,"column":64}},"76":{"start":{"line":230,"column":36},"end":{"line":230,"column":66}},"77":{"start":{"line":231,"column":36},"end":{"line":231,"column":55}},"78":{"start":{"line":233,"column":32},"end":{"line":233,"column":38}},"79":{"start":{"line":235,"column":32},"end":{"line":255,"column":35}},"80":{"start":{"line":241,"column":44},"end":{"line":241,"column":79}},"81":{"start":{"line":245,"column":36},"end":{"line":249,"column":39}},"82":{"start":{"line":246,"column":40},"end":{"line":248,"column":41}},"83":{"start":{"line":247,"column":44},"end":{"line":247,"column":90}},"84":{"start":{"line":250,"column":36},"end":{"line":250,"column":73}},"85":{"start":{"line":251,"column":54},"end":{"line":251,"column":228}},"86":{"start":{"line":252,"column":36},"end":{"line":252,"column":64}},"87":{"start":{"line":253,"column":36},"end":{"line":253,"column":66}},"88":{"start":{"line":254,"column":36},"end":{"line":254,"column":55}},"89":{"start":{"line":256,"column":32},"end":{"line":256,"column":38}},"90":{"start":{"line":259,"column":20},"end":{"line":259,"column":26}},"91":{"start":{"line":261,"column":20},"end":{"line":278,"column":23}},"92":{"start":{"line":272,"column":24},"end":{"line":272,"column":81}},"93":{"start":{"line":273,"column":24},"end":{"line":273,"column":61}},"94":{"start":{"line":274,"column":42},"end":{"line":274,"column":216}},"95":{"start":{"line":275,"column":24},"end":{"line":275,"column":52}},"96":{"start":{"line":276,"column":24},"end":{"line":276,"column":54}},"97":{"start":{"line":277,"column":24},"end":{"line":277,"column":43}},"98":{"start":{"line":279,"column":20},"end":{"line":279,"column":26}},"99":{"start":{"line":281,"column":20},"end":{"line":333,"column":23}},"100":{"start":{"line":292,"column":24},"end":{"line":332,"column":25}},"101":{"start":{"line":294,"column":32},"end":{"line":307,"column":35}},"102":{"start":{"line":301,"column":36},"end":{"line":301,"column":91}},"103":{"start":{"line":302,"column":36},"end":{"line":302,"column":73}},"104":{"start":{"line":303,"column":54},"end":{"line":303,"column":228}},"105":{"start":{"line":304,"column":36},"end":{"line":304,"column":64}},"106":{"start":{"line":305,"column":36},"end":{"line":305,"column":66}},"107":{"start":{"line":306,"column":36},"end":{"line":306,"column":55}},"108":{"start":{"line":308,"column":32},"end":{"line":308,"column":38}},"109":{"start":{"line":310,"column":32},"end":{"line":330,"column":35}},"110":{"start":{"line":316,"column":44},"end":{"line":316,"column":85}},"111":{"start":{"line":320,"column":36},"end":{"line":324,"column":39}},"112":{"start":{"line":321,"column":40},"end":{"line":323,"column":41}},"113":{"start":{"line":322,"column":44},"end":{"line":322,"column":93}},"114":{"start":{"line":325,"column":36},"end":{"line":325,"column":73}},"115":{"start":{"line":326,"column":54},"end":{"line":326,"column":228}},"116":{"start":{"line":327,"column":36},"end":{"line":327,"column":64}},"117":{"start":{"line":328,"column":36},"end":{"line":328,"column":66}},"118":{"start":{"line":329,"column":36},"end":{"line":329,"column":55}},"119":{"start":{"line":331,"column":32},"end":{"line":331,"column":38}},"120":{"start":{"line":334,"column":20},"end":{"line":334,"column":26}},"121":{"start":{"line":343,"column":8},"end":{"line":348,"column":11}},"122":{"start":{"line":344,"column":12},"end":{"line":347,"column":13}},"123":{"start":{"line":345,"column":16},"end":{"line":345,"column":69}},"124":{"start":{"line":346,"column":16},"end":{"line":346,"column":28}},"125":{"start":{"line":349,"column":8},"end":{"line":349,"column":21}},"126":{"start":{"line":356,"column":23},"end":{"line":356,"column":52}},"127":{"start":{"line":357,"column":8},"end":{"line":385,"column":11}},"128":{"start":{"line":370,"column":12},"end":{"line":384,"column":13}},"129":{"start":{"line":372,"column":20},"end":{"line":372,"column":49}},"130":{"start":{"line":373,"column":20},"end":{"line":373,"column":26}},"131":{"start":{"line":375,"column":20},"end":{"line":375,"column":41}},"132":{"start":{"line":376,"column":20},"end":{"line":376,"column":26}},"133":{"start":{"line":378,"column":20},"end":{"line":378,"column":49}},"134":{"start":{"line":379,"column":20},"end":{"line":379,"column":26}},"135":{"start":{"line":382,"column":20},"end":{"line":382,"column":36}},"136":{"start":{"line":383,"column":20},"end":{"line":383,"column":26}},"137":{"start":{"line":391,"column":25},"end":{"line":391,"column":29}},"138":{"start":{"line":392,"column":23},"end":{"line":392,"column":52}},"139":{"start":{"line":393,"column":8},"end":{"line":423,"column":11}},"140":{"start":{"line":404,"column":12},"end":{"line":406,"column":13}},"141":{"start":{"line":405,"column":16},"end":{"line":405,"column":35}},"142":{"start":{"line":408,"column":33},"end":{"line":408,"column":44}},"143":{"start":{"line":410,"column":12},"end":{"line":417,"column":15}},"144":{"start":{"line":411,"column":16},"end":{"line":416,"column":17}},"145":{"start":{"line":412,"column":20},"end":{"line":412,"column":66}},"146":{"start":{"line":415,"column":20},"end":{"line":415,"column":66}},"147":{"start":{"line":419,"column":12},"end":{"line":421,"column":15}},"148":{"start":{"line":420,"column":16},"end":{"line":420,"column":57}},"149":{"start":{"line":422,"column":12},"end":{"line":422,"column":28}},"150":{"start":{"line":429,"column":25},"end":{"line":429,"column":29}},"151":{"start":{"line":430,"column":23},"end":{"line":430,"column":52}},"152":{"start":{"line":431,"column":8},"end":{"line":461,"column":11}},"153":{"start":{"line":442,"column":12},"end":{"line":444,"column":13}},"154":{"start":{"line":443,"column":16},"end":{"line":443,"column":35}},"155":{"start":{"line":446,"column":33},"end":{"line":446,"column":44}},"156":{"start":{"line":448,"column":12},"end":{"line":455,"column":15}},"157":{"start":{"line":449,"column":16},"end":{"line":454,"column":17}},"158":{"start":{"line":450,"column":20},"end":{"line":450,"column":59}},"159":{"start":{"line":453,"column":20},"end":{"line":453,"column":59}},"160":{"start":{"line":457,"column":12},"end":{"line":459,"column":15}},"161":{"start":{"line":458,"column":16},"end":{"line":458,"column":68}},"162":{"start":{"line":460,"column":12},"end":{"line":460,"column":28}},"163":{"start":{"line":467,"column":25},"end":{"line":467,"column":29}},"164":{"start":{"line":468,"column":23},"end":{"line":468,"column":52}},"165":{"start":{"line":469,"column":8},"end":{"line":499,"column":11}},"166":{"start":{"line":480,"column":12},"end":{"line":482,"column":13}},"167":{"start":{"line":481,"column":16},"end":{"line":481,"column":35}},"168":{"start":{"line":484,"column":33},"end":{"line":484,"column":44}},"169":{"start":{"line":486,"column":12},"end":{"line":493,"column":15}},"170":{"start":{"line":487,"column":16},"end":{"line":492,"column":17}},"171":{"start":{"line":488,"column":20},"end":{"line":488,"column":71}},"172":{"start":{"line":491,"column":20},"end":{"line":491,"column":71}},"173":{"start":{"line":495,"column":12},"end":{"line":497,"column":15}},"174":{"start":{"line":496,"column":16},"end":{"line":496,"column":79}},"175":{"start":{"line":498,"column":12},"end":{"line":498,"column":28}},"176":{"start":{"line":507,"column":8},"end":{"line":507,"column":27}},"177":{"start":{"line":514,"column":8},"end":{"line":514,"column":28}},"178":{"start":{"line":517,"column":0},"end":{"line":517,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":18},"end":{"line":19,"column":5}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":13},"end":{"line":31,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":26},"end":{"line":26,"column":27}},"loc":{"start":{"line":26,"column":36},"end":{"line":29,"column":9}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":18},"end":{"line":67,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":50,"column":16},"end":{"line":50,"column":17}},"loc":{"start":{"line":50,"column":29},"end":{"line":66,"column":9}},"line":50},"5":{"name":"(anonymous_5)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":23},"end":{"line":105,"column":5}},"line":71},"6":{"name":"(anonymous_6)","decl":{"start":{"line":98,"column":16},"end":{"line":98,"column":17}},"loc":{"start":{"line":98,"column":29},"end":{"line":104,"column":9}},"line":98},"7":{"name":"(anonymous_7)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":25},"end":{"line":124,"column":5}},"line":109},"8":{"name":"(anonymous_8)","decl":{"start":{"line":116,"column":41},"end":{"line":116,"column":42}},"loc":{"start":{"line":116,"column":51},"end":{"line":118,"column":17}},"line":116},"9":{"name":"(anonymous_9)","decl":{"start":{"line":120,"column":16},"end":{"line":120,"column":17}},"loc":{"start":{"line":120,"column":29},"end":{"line":123,"column":9}},"line":120},"10":{"name":"(anonymous_10)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":32},"end":{"line":142,"column":5}},"line":125},"11":{"name":"(anonymous_11)","decl":{"start":{"line":128,"column":28},"end":{"line":128,"column":29}},"loc":{"start":{"line":128,"column":46},"end":{"line":135,"column":9}},"line":128},"12":{"name":"(anonymous_12)","decl":{"start":{"line":146,"column":4},"end":{"line":146,"column":5}},"loc":{"start":{"line":146,"column":26},"end":{"line":160,"column":5}},"line":146},"13":{"name":"(anonymous_13)","decl":{"start":{"line":153,"column":41},"end":{"line":153,"column":42}},"loc":{"start":{"line":153,"column":51},"end":{"line":155,"column":17}},"line":153},"14":{"name":"(anonymous_14)","decl":{"start":{"line":157,"column":16},"end":{"line":157,"column":17}},"loc":{"start":{"line":157,"column":29},"end":{"line":159,"column":9}},"line":157},"15":{"name":"(anonymous_15)","decl":{"start":{"line":161,"column":4},"end":{"line":161,"column":5}},"loc":{"start":{"line":161,"column":33},"end":{"line":337,"column":5}},"line":161},"16":{"name":"(anonymous_16)","decl":{"start":{"line":165,"column":28},"end":{"line":165,"column":29}},"loc":{"start":{"line":165,"column":45},"end":{"line":170,"column":9}},"line":165},"17":{"name":"(anonymous_17)","decl":{"start":{"line":187,"column":16},"end":{"line":187,"column":17}},"loc":{"start":{"line":187,"column":29},"end":{"line":336,"column":9}},"line":187},"18":{"name":"(anonymous_18)","decl":{"start":{"line":196,"column":28},"end":{"line":196,"column":29}},"loc":{"start":{"line":196,"column":41},"end":{"line":203,"column":21}},"line":196},"19":{"name":"(anonymous_19)","decl":{"start":{"line":216,"column":28},"end":{"line":216,"column":29}},"loc":{"start":{"line":216,"column":41},"end":{"line":258,"column":21}},"line":216},"20":{"name":"(anonymous_20)","decl":{"start":{"line":225,"column":40},"end":{"line":225,"column":41}},"loc":{"start":{"line":225,"column":53},"end":{"line":232,"column":33}},"line":225},"21":{"name":"(anonymous_21)","decl":{"start":{"line":240,"column":82},"end":{"line":240,"column":83}},"loc":{"start":{"line":240,"column":92},"end":{"line":242,"column":41}},"line":240},"22":{"name":"(anonymous_22)","decl":{"start":{"line":244,"column":40},"end":{"line":244,"column":41}},"loc":{"start":{"line":244,"column":53},"end":{"line":255,"column":33}},"line":244},"23":{"name":"(anonymous_23)","decl":{"start":{"line":245,"column":73},"end":{"line":245,"column":74}},"loc":{"start":{"line":245,"column":90},"end":{"line":249,"column":37}},"line":245},"24":{"name":"(anonymous_24)","decl":{"start":{"line":271,"column":28},"end":{"line":271,"column":29}},"loc":{"start":{"line":271,"column":41},"end":{"line":278,"column":21}},"line":271},"25":{"name":"(anonymous_25)","decl":{"start":{"line":291,"column":28},"end":{"line":291,"column":29}},"loc":{"start":{"line":291,"column":41},"end":{"line":333,"column":21}},"line":291},"26":{"name":"(anonymous_26)","decl":{"start":{"line":300,"column":40},"end":{"line":300,"column":41}},"loc":{"start":{"line":300,"column":53},"end":{"line":307,"column":33}},"line":300},"27":{"name":"(anonymous_27)","decl":{"start":{"line":315,"column":85},"end":{"line":315,"column":86}},"loc":{"start":{"line":315,"column":98},"end":{"line":317,"column":41}},"line":315},"28":{"name":"(anonymous_28)","decl":{"start":{"line":319,"column":40},"end":{"line":319,"column":41}},"loc":{"start":{"line":319,"column":53},"end":{"line":330,"column":33}},"line":319},"29":{"name":"(anonymous_29)","decl":{"start":{"line":320,"column":76},"end":{"line":320,"column":77}},"loc":{"start":{"line":320,"column":96},"end":{"line":324,"column":37}},"line":320},"30":{"name":"(anonymous_30)","decl":{"start":{"line":342,"column":4},"end":{"line":342,"column":5}},"loc":{"start":{"line":342,"column":36},"end":{"line":350,"column":5}},"line":342},"31":{"name":"(anonymous_31)","decl":{"start":{"line":343,"column":28},"end":{"line":343,"column":29}},"loc":{"start":{"line":343,"column":46},"end":{"line":348,"column":9}},"line":343},"32":{"name":"(anonymous_32)","decl":{"start":{"line":355,"column":4},"end":{"line":355,"column":5}},"loc":{"start":{"line":355,"column":15},"end":{"line":386,"column":5}},"line":355},"33":{"name":"(anonymous_33)","decl":{"start":{"line":369,"column":16},"end":{"line":369,"column":17}},"loc":{"start":{"line":369,"column":29},"end":{"line":385,"column":9}},"line":369},"34":{"name":"(anonymous_34)","decl":{"start":{"line":390,"column":4},"end":{"line":390,"column":5}},"loc":{"start":{"line":390,"column":28},"end":{"line":424,"column":5}},"line":390},"35":{"name":"(anonymous_35)","decl":{"start":{"line":403,"column":16},"end":{"line":403,"column":17}},"loc":{"start":{"line":403,"column":29},"end":{"line":423,"column":9}},"line":403},"36":{"name":"(anonymous_36)","decl":{"start":{"line":410,"column":30},"end":{"line":410,"column":31}},"loc":{"start":{"line":410,"column":40},"end":{"line":417,"column":13}},"line":410},"37":{"name":"(anonymous_37)","decl":{"start":{"line":419,"column":33},"end":{"line":419,"column":34}},"loc":{"start":{"line":419,"column":43},"end":{"line":421,"column":13}},"line":419},"38":{"name":"(anonymous_38)","decl":{"start":{"line":428,"column":4},"end":{"line":428,"column":5}},"loc":{"start":{"line":428,"column":20},"end":{"line":462,"column":5}},"line":428},"39":{"name":"(anonymous_39)","decl":{"start":{"line":441,"column":16},"end":{"line":441,"column":17}},"loc":{"start":{"line":441,"column":29},"end":{"line":461,"column":9}},"line":441},"40":{"name":"(anonymous_40)","decl":{"start":{"line":448,"column":30},"end":{"line":448,"column":31}},"loc":{"start":{"line":448,"column":40},"end":{"line":455,"column":13}},"line":448},"41":{"name":"(anonymous_41)","decl":{"start":{"line":457,"column":33},"end":{"line":457,"column":34}},"loc":{"start":{"line":457,"column":44},"end":{"line":459,"column":13}},"line":457},"42":{"name":"(anonymous_42)","decl":{"start":{"line":466,"column":4},"end":{"line":466,"column":5}},"loc":{"start":{"line":466,"column":28},"end":{"line":500,"column":5}},"line":466},"43":{"name":"(anonymous_43)","decl":{"start":{"line":479,"column":16},"end":{"line":479,"column":17}},"loc":{"start":{"line":479,"column":29},"end":{"line":499,"column":9}},"line":479},"44":{"name":"(anonymous_44)","decl":{"start":{"line":486,"column":30},"end":{"line":486,"column":31}},"loc":{"start":{"line":486,"column":40},"end":{"line":493,"column":13}},"line":486},"45":{"name":"(anonymous_45)","decl":{"start":{"line":495,"column":33},"end":{"line":495,"column":34}},"loc":{"start":{"line":495,"column":44},"end":{"line":497,"column":13}},"line":495},"46":{"name":"(anonymous_46)","decl":{"start":{"line":506,"column":4},"end":{"line":506,"column":5}},"loc":{"start":{"line":506,"column":19},"end":{"line":508,"column":5}},"line":506},"47":{"name":"(anonymous_47)","decl":{"start":{"line":513,"column":4},"end":{"line":513,"column":5}},"loc":{"start":{"line":513,"column":24},"end":{"line":515,"column":5}},"line":513}},"branchMap":{"0":{"loc":{"start":{"line":51,"column":12},"end":{"line":65,"column":13}},"type":"switch","locations":[{"start":{"line":52,"column":16},"end":{"line":54,"column":26}},{"start":{"line":55,"column":16},"end":{"line":57,"column":26}},{"start":{"line":58,"column":16},"end":{"line":60,"column":26}},{"start":{"line":61,"column":16},"end":{"line":64,"column":26}}],"line":51},"1":{"loc":{"start":{"line":129,"column":12},"end":{"line":134,"column":13}},"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":134,"column":13}},{"start":{"line":129,"column":12},"end":{"line":134,"column":13}}],"line":129},"2":{"loc":{"start":{"line":136,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":141,"column":9}},{"start":{"line":136,"column":8},"end":{"line":141,"column":9}}],"line":136},"3":{"loc":{"start":{"line":166,"column":12},"end":{"line":169,"column":13}},"type":"if","locations":[{"start":{"line":166,"column":12},"end":{"line":169,"column":13}},{"start":{"line":166,"column":12},"end":{"line":169,"column":13}}],"line":166},"4":{"loc":{"start":{"line":171,"column":8},"end":{"line":174,"column":9}},"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":174,"column":9}},{"start":{"line":171,"column":8},"end":{"line":174,"column":9}}],"line":171},"5":{"loc":{"start":{"line":188,"column":12},"end":{"line":335,"column":13}},"type":"switch","locations":[{"start":{"line":189,"column":16},"end":{"line":204,"column":26}},{"start":{"line":205,"column":16},"end":{"line":259,"column":26}},{"start":{"line":260,"column":16},"end":{"line":279,"column":26}},{"start":{"line":280,"column":16},"end":{"line":334,"column":26}}],"line":188},"6":{"loc":{"start":{"line":217,"column":24},"end":{"line":257,"column":25}},"type":"switch","locations":[{"start":{"line":218,"column":28},"end":{"line":233,"column":38}},{"start":{"line":234,"column":28},"end":{"line":256,"column":38}}],"line":217},"7":{"loc":{"start":{"line":246,"column":40},"end":{"line":248,"column":41}},"type":"if","locations":[{"start":{"line":246,"column":40},"end":{"line":248,"column":41}},{"start":{"line":246,"column":40},"end":{"line":248,"column":41}}],"line":246},"8":{"loc":{"start":{"line":292,"column":24},"end":{"line":332,"column":25}},"type":"switch","locations":[{"start":{"line":293,"column":28},"end":{"line":308,"column":38}},{"start":{"line":309,"column":28},"end":{"line":331,"column":38}}],"line":292},"9":{"loc":{"start":{"line":321,"column":40},"end":{"line":323,"column":41}},"type":"if","locations":[{"start":{"line":321,"column":40},"end":{"line":323,"column":41}},{"start":{"line":321,"column":40},"end":{"line":323,"column":41}}],"line":321},"10":{"loc":{"start":{"line":344,"column":12},"end":{"line":347,"column":13}},"type":"if","locations":[{"start":{"line":344,"column":12},"end":{"line":347,"column":13}},{"start":{"line":344,"column":12},"end":{"line":347,"column":13}}],"line":344},"11":{"loc":{"start":{"line":370,"column":12},"end":{"line":384,"column":13}},"type":"switch","locations":[{"start":{"line":371,"column":16},"end":{"line":373,"column":26}},{"start":{"line":374,"column":16},"end":{"line":376,"column":26}},{"start":{"line":377,"column":16},"end":{"line":379,"column":26}},{"start":{"line":380,"column":16},"end":{"line":383,"column":26}}],"line":370},"12":{"loc":{"start":{"line":404,"column":12},"end":{"line":406,"column":13}},"type":"if","locations":[{"start":{"line":404,"column":12},"end":{"line":406,"column":13}},{"start":{"line":404,"column":12},"end":{"line":406,"column":13}}],"line":404},"13":{"loc":{"start":{"line":411,"column":16},"end":{"line":416,"column":17}},"type":"if","locations":[{"start":{"line":411,"column":16},"end":{"line":416,"column":17}},{"start":{"line":411,"column":16},"end":{"line":416,"column":17}}],"line":411},"14":{"loc":{"start":{"line":442,"column":12},"end":{"line":444,"column":13}},"type":"if","locations":[{"start":{"line":442,"column":12},"end":{"line":444,"column":13}},{"start":{"line":442,"column":12},"end":{"line":444,"column":13}}],"line":442},"15":{"loc":{"start":{"line":449,"column":16},"end":{"line":454,"column":17}},"type":"if","locations":[{"start":{"line":449,"column":16},"end":{"line":454,"column":17}},{"start":{"line":449,"column":16},"end":{"line":454,"column":17}}],"line":449},"16":{"loc":{"start":{"line":480,"column":12},"end":{"line":482,"column":13}},"type":"if","locations":[{"start":{"line":480,"column":12},"end":{"line":482,"column":13}},{"start":{"line":480,"column":12},"end":{"line":482,"column":13}}],"line":480},"17":{"loc":{"start":{"line":487,"column":16},"end":{"line":492,"column":17}},"type":"if","locations":[{"start":{"line":487,"column":16},"end":{"line":492,"column":17}},{"start":{"line":487,"column":16},"end":{"line":492,"column":17}}],"line":487}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":3,"123":1,"124":1,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":1},"f":{"0":1,"1":1,"2":3,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":3,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1},"b":{"0":[0,0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[1,2],"11":[0,0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/retoCollection.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/retoCollection.ts"],"names":[],"mappings":"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","sourcesContent":["import * as inquirer from \"inquirer\";\nimport { database } from \"./bd\";\nimport { Reto } from \"./reto\";\nimport { ID } from \"./types\";\n\n/**\n * Clase que representa una colección de retos.\n * @class\n */\nexport class RetoCollection {\n  private retos_: Reto[];\n\n  /**\n   * Constructor de la clase RetoCollection.\n   * @constructor\n   */\n  constructor() {\n    this.leerBD();\n  }\n\n  /**\n   * Método que lee los elementos de la base de datos y los guarda en el array de retos.\n   */\n  leerBD() {\n    const retos_aux = database.get(\"retos\").value();\n    const array_aux: Reto[] = [];\n    retos_aux.forEach((reto) => {\n      const group_aux: Reto = new Reto(reto.nombre, reto.rutas, reto.tipo_actividad, reto.usuarios);\n      array_aux.push(group_aux);\n    });\n    this.setRetos = array_aux;  \n  }\n\n  //* MANAGE\n\n  /**\n   * Método que gestiona los retos.\n   */\n  manageRetos() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué deseas hacer?',\n        choices: [\n          {name:'Añadir reto', value: 'añadir'},\n          {name:'Eliminar retos', value: 'eliminar'}, // reto*\n          {name: 'Modificar', value: 'modificar'},\n          {name:'Salir', value: 'Salir'},\n        ]\n      }\n    ]).then((answers) => {\n      switch (answers.opcion) {\n        case 'añadir':\n          this.promptAñadirReto();\n          break;\n        case 'eliminar':\n          this.promptEliminarReto();\n          break;\n        case 'modificar':\n          this.promptModificarReto();\n          break;\n        case 'Salir':\n          // cerrar prompt\n          process.exit(0);\n          break;\n      }\n    });\n  }  \n\n  /**\n   * Método que muestra un prompt para añadir un reto.\n   */\n  promptAñadirReto(){\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'input',\n        name: 'nombre',\n        message: '¿Cuál es el nombre del reto?'\n      },\n      {\n        type: 'input',\n        name: 'rutas',\n        message: '¿Cuáles son las rutas que lo componen?, introducir id1,id2,id3...'\n      },\n      {\n        type: 'list',\n        name: 'actividad',\n        message: '¿Qué actividad realiza?',\n        choices: [\n          {name:'Ciclismo', value: 'Ciclismo'},\n          {name:'Running', value: 'Running'},\n        ]\n      },\n      {\n        type: 'input',\n        name: 'usuarios',\n        message: '¿Cuáles son los usuarios que participan?, introduzca los ids separados por comas'\n      }\n    ]).then((answers) => {\n      const rutas: ID[] = answers.rutas.split(\",\"); \n      const usuarios: ID[] = answers.usuarios.split(\",\");\n      const reto_aux = new Reto(answers.nombre, rutas, answers.actividad, usuarios)\n      this.retos_.push(reto_aux);\n      this.manageRetos();\n    });\n  }\n\n  /**\n   * Método que muestra un prompt para eliminar un reto.\n   */\n  promptEliminarReto(){\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: 'Elige un reto a eliminar',\n        choices: this.retos_.map((reto) => {\n          return {name: reto.getNombre, value: reto.getId};\n        }\n        )\n      }\n    ]).then((answers) => {\n      this.eliminarReto(answers.opcion);\n      this.manageRetos();\n    });\n  }\n\n  eliminarReto(identificador: ID): Reto | undefined{\n    let control_bool = false;\n    let grupo_aux: Reto | undefined;\n\n    this.retos_.forEach((reto, indice) => {\n      if (reto.getId == identificador) {\n        grupo_aux = reto;\n        this.retos_.splice(indice, 1);\n        control_bool = true;\n        database.get(\"retos\").splice(indice,1).write();\n      }\n    });\n    if (control_bool) {\n      return grupo_aux;\n    }\n    else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Método que muestra un prompt para modificar un reto.\n   */\n  promptModificarReto(){\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué reto deseas modificar?',\n        choices: this.retos_.map((reto) => {\n          return {name: reto.getNombre, value: reto.getId};\n        }\n        )\n      }\n    ]).then((answers) => {\n      this.modificarReto(answers.opcion);\n    });\n\n  }\n\n  modificarReto(identificador: ID) {\n    const prompt = inquirer.createPromptModule();\n\n    let id_existe_en_coleccion = false;\n    let indice = -1;\n    this.retos_.forEach((reto, index) => {\n      if (reto.getId == identificador) {\n        id_existe_en_coleccion = true;\n        indice = index;\n      }\n    }\n    );\n    if (!id_existe_en_coleccion) {\n      console.log('No existe el grupo que se intenta modificar');\n      return;\n    }\n\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué deseas modificar?',\n        choices: [\n          {name:'Nombre', value: 'nombre'},\n          {name:'Rutas', value: 'rutas'},\n          {name:'Tipo de Actividad', value: 'actividad'},\n          {name:'Usuarios', value: 'usuarios'},\n        ]\n      }\n    ]).then((answers) => {\n      switch (answers.opcion) {\n        case 'nombre':\n          prompt([\n            {\n              type: 'input',\n              name: 'nombre',\n              message: '¿Cuál es el nuevo nombre del reto?'\n            }\n          ]).then((answers) => {\n            this.retos_[indice].setNombre = answers.nombre2;\n            this.borrarElementoBD(identificador);\n            const grupo_aux = new Reto(answers.nombre, this.retos_[indice].getRutas, this.retos_[indice].getTipoActividad, this.retos_[indice].getUsuarios, this.retos_[indice].getId);\n            this.retos_.push(grupo_aux);\n            this.retos_.splice(indice, 1);\n            this.manageRetos();\n          });\n          break;\n        case 'rutas':\n          prompt([\n            {\n              type: 'list',\n              name: 'rutas',\n              message: '¿Insertar o Borrar?',\n              choices: [\n                {name:'Insertar', value: 'insertar'},\n                {name:'Borrar', value: 'borrar'},\n              ]\n            },\n          ]).then((answers) => {\n            switch(answers.rutas){\n              case 'insertar':\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'rutas',\n                    message: 'Introduce un nuevo ID de ruta'\n                  }\n                ]).then((answers) => {\n                  this.retos_[indice].getRutas.push(answers.rutas);\n                  this.borrarElementoBD(identificador);\n                  const grupo_aux = new Reto(this.retos_[indice].getNombre, this.retos_[indice].getRutas, this.retos_[indice].getTipoActividad, this.retos_[indice].getUsuarios, this.retos_[indice].getId);\n                  this.retos_.push(grupo_aux);\n                  this.retos_.splice(indice, 1);\n                  this.manageRetos();\n                });\n              break;\n\n              case 'borrar':\n                prompt([  \n                  {\n                    type: 'list',\n                    name: 'rutas',\n                    message: '¿Qué ruta deseas borrar?',\n                    choices: this.retos_[indice].getRutas.map((ruta) => {\n                      return {name: ruta, value: ruta};\n                    })\n                  }\n                ]).then((answers) => {\n                  this.retos_[indice].getRutas.forEach((ruta, index) => {\n                    if (ruta == answers.rutas) {\n                      this.retos_[indice].getRutas.splice(index, 1);\n                    }\n                  });\n                  this.borrarElementoBD(identificador);\n                  const grupo_aux = new Reto(this.retos_[indice].getNombre, this.retos_[indice].getRutas, this.retos_[indice].getTipoActividad, this.retos_[indice].getUsuarios, this.retos_[indice].getId);\n                  this.retos_.push(grupo_aux);\n                  this.retos_.splice(indice, 1);\n                  this.manageRetos();\n                });\n              break;\n            }\n          });\n          break;\n        case 'actividad':\n          prompt([\n            {\n              type: 'list',\n              name: 'actividad',\n              message: '¿Cuál es el nuevo tipo de actividad?',\n              choices: [\n                {name:'Bicicleta', value: 'bicicleta'},\n                {name:'Correr', value: 'correr'},\n              ]\n            },\n          ]).then((answers) => {\n            this.retos_[indice].setTipoActividad = answers.actividad;\n            this.borrarElementoBD(identificador);\n            const grupo_aux = new Reto(this.retos_[indice].getNombre, this.retos_[indice].getRutas, this.retos_[indice].getTipoActividad, this.retos_[indice].getUsuarios, this.retos_[indice].getId);\n            this.retos_.push(grupo_aux);\n            this.retos_.splice(indice, 1);\n            this.manageRetos();\n          });\n          break;\n        case 'usuarios':\n          prompt([\n            {\n              type: 'list',\n              name: 'usuarios',\n              message: '¿Insertar o Borrar?',\n              choices: [\n                {name:'Insertar', value: 'insertar'},\n                {name:'Borrar', value: 'borrar'},\n              ]\n            },\n          ]).then((answers) => {\n            switch(answers.usuarios){\n              case 'insertar':\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'usuarios',\n                    message: 'Introduce un nuevo ID de usuario'\n                  }\n                ]).then((answers) => {\n                  this.retos_[indice].getUsuarios.push(answers.usuarios);\n                  this.borrarElementoBD(identificador);\n                  const grupo_aux = new Reto(this.retos_[indice].getNombre, this.retos_[indice].getRutas, this.retos_[indice].getTipoActividad, this.retos_[indice].getUsuarios, this.retos_[indice].getId);\n                  this.retos_.push(grupo_aux);\n                  this.retos_.splice(indice, 1);\n                  this.manageRetos();\n                });\n                break;\n              case 'borrar':\n                prompt([\n                  {\n                    type: 'list',\n                    name: 'usuarios',\n                    message: '¿Qué usuario deseas borrar?',\n                    choices: this.retos_[indice].getUsuarios.map((usuario) => {\n                      return {name: usuario, value: usuario};\n                    })\n                  }\n                ]).then((answers) => {\n                  this.retos_[indice].getUsuarios.forEach((usuario, index) => {\n                    if (usuario == answers.usuarios) {\n                      this.retos_[indice].getUsuarios.splice(index, 1);\n                    }\n                  });\n                  this.borrarElementoBD(identificador);\n                  const grupo_aux = new Reto(this.retos_[indice].getNombre, this.retos_[indice].getRutas, this.retos_[indice].getTipoActividad, this.retos_[indice].getUsuarios, this.retos_[indice].getId);  \n                  this.retos_.push(grupo_aux);\n                  this.retos_.splice(indice, 1);\n                  this.manageRetos();\n                });\n              break;\n            }\n          });\n        break;\n      }\n    });\n  }\n\n  /**\n   * Metodo para borrar un elemento de la base de datos\n   * @param identificador \n   */\n    borrarElementoBD(identificador: ID): boolean{\n      this.retos_.forEach((reto, indice) => {\n        if (reto.getId == identificador) {\n          database.get(\"retos\").splice(indice,1).write();\n          return true;\n        }\n      });\n      return false;\n    }\n\n  //* INFO\n\n  /**\n  * Método que muestra la información de los retos.\n  */\n  infoReto() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué deseas ver?',\n        choices: [\n          {name:'Mostrar por orden alfabético los retos', value: 'alfabetico'},\n          {name:'Ordenar por kms', value: 'kms'},\n          {name:'Ordenar por nº de usuarios', value: 'num_usuarios'},\n          {name:'Salir', value: 'Salir'},\n        ]\n      }\n    ]).then((answers) => {\n      switch (answers.opcion) {\n        case 'alfabetico':\n          this.ordenarRetosPorNombre();\n          break;\n        case 'kms':\n          this.ordenarPorKms();\n          break;\n        case 'num_usuarios':\n          this.ordenarPorNumUsuarios();\n          break;\n        case 'Salir':\n          // cerrar prompt\n          process.exit(0);\n          break;\n      }\n    });\n  }\n\n  /**\n   * Metodo para ordenar los retos por orden alfabetico.\n   */\n  ordenarRetosPorNombre() {\n    let ascendente = true; // por defecto ascendente\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      // ordenar\n      const retos_grupos = this.retos_;\n      // ordenar de forma ascendete o descendente según el valor de la variable ascendente\n      retos_grupos.sort((a, b) => {\n        if (ascendente) {\n          return a.getNombre.localeCompare(b.getNombre);\n        }\n        else {\n          return b.getNombre.localeCompare(a.getNombre);\n        }\n      });\n      // mostrar\n      retos_grupos.forEach((ruta) => {\n        console.log(`Nombre: ${ruta.getNombre}`);\n      });\n      this.infoReto();\n    });\n  }\n\n  /**\n   * Metodo para ordenar los retos por kms.\n   */\n  ordenarPorKms() {\n    let ascendente = true; // por defecto ascendente\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      // ordenar\n      const retos_grupos = this.retos_;\n      // ordenar de forma ascendete o descendente según el valor de la variable ascendente\n      retos_grupos.sort((a, b) => {\n        if (ascendente) {\n          return a.getKmTotales - b.getKmTotales;\n        }\n        else {\n          return b.getKmTotales - a.getKmTotales;\n        }\n      });\n      // mostrar\n      retos_grupos.forEach((retos) => {\n        console.log(`Kms semanales: ${retos.getKmTotales}`);\n      });\n      this.infoReto();\n    });\n  } \n\n  /**\n   * Metodo para ordenar los retos por numero de usuarios.\n   */\n  ordenarPorNumUsuarios() {\n    let ascendente = true; // por defecto ascendente\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      // ordenar\n      const retos_grupos = this.retos_;\n      // ordenar de forma ascendete o descendente según el valor de la variable ascendente\n      retos_grupos.sort((a, b) => {\n        if (ascendente) {\n          return a.getUsuarios.length - b.getUsuarios.length;\n        }\n        else {\n          return b.getUsuarios.length - a.getUsuarios.length;\n        }\n      });\n      // mostrar\n      retos_grupos.forEach((retos) => {\n        console.log(`Número de usuarios: ${retos.getUsuarios.length}`);\n      });\n      this.infoReto();\n    });\n  }\n\n  //* GETTER Y SETTER\n\n  /**\n   * Método que devuelve el array de retos.\n   * @returns Array de retos\n   */\n  get getRetos(): Reto[] {\n    return this.retos_;\n  }\n\n  /**\n   * Método que modifica el array de retos.\n   * @param retos Array de retos\n   */\n  set setRetos(retos: Reto[]) {\n    this.retos_ = retos;\n  }\n}\n// nombre: string, rutas: ID[], tipo_actividad: actividad, km_totales: number, usuarios: ID[]\n// const reto0 = new Reto('Maraton', [1,2,3,4,5], \"correr\",200, [1,2]);\n// const reto1 = new Reto('Triatlon', [2,3,4,5,6], \"bicicleta\",300, [3,4,5,6,7,8,9,10,11,12,13]);\n// const reto2 = new Reto('Iron man', [9,8,7], \"correr\",50, [14,15,16,17,18,19]);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5f9c47850c2f24c70437e70196f3eca838a2c1aa","contentHash":"e783fc9eab02256843d2eaa13461391e1d0b76d1a586be8ca324a3b59ce88c94"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/ruta.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/ruta.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":28}},"3":{"start":{"line":33,"column":8},"end":{"line":33,"column":30}},"4":{"start":{"line":34,"column":8},"end":{"line":34,"column":62}},"5":{"start":{"line":35,"column":8},"end":{"line":35,"column":56}},"6":{"start":{"line":36,"column":8},"end":{"line":36,"column":34}},"7":{"start":{"line":37,"column":8},"end":{"line":37,"column":34}},"8":{"start":{"line":38,"column":8},"end":{"line":38,"column":33}},"9":{"start":{"line":39,"column":8},"end":{"line":39,"column":46}},"10":{"start":{"line":40,"column":8},"end":{"line":40,"column":42}},"11":{"start":{"line":41,"column":26},"end":{"line":41,"column":74}},"12":{"start":{"line":42,"column":8},"end":{"line":73,"column":9}},"13":{"start":{"line":43,"column":12},"end":{"line":43,"column":92}},"14":{"start":{"line":46,"column":12},"end":{"line":61,"column":13}},"15":{"start":{"line":47,"column":16},"end":{"line":47,"column":30}},"16":{"start":{"line":53,"column":34},"end":{"line":53,"column":78}},"17":{"start":{"line":54,"column":16},"end":{"line":54,"column":48}},"18":{"start":{"line":54,"column":41},"end":{"line":54,"column":46}},"19":{"start":{"line":55,"column":16},"end":{"line":60,"column":17}},"20":{"start":{"line":56,"column":20},"end":{"line":56,"column":33}},"21":{"start":{"line":59,"column":20},"end":{"line":59,"column":67}},"22":{"start":{"line":62,"column":12},"end":{"line":72,"column":23}},"23":{"start":{"line":81,"column":8},"end":{"line":81,"column":24}},"24":{"start":{"line":88,"column":8},"end":{"line":88,"column":28}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":44}},"26":{"start":{"line":102,"column":8},"end":{"line":102,"column":41}},"27":{"start":{"line":109,"column":8},"end":{"line":109,"column":30}},"28":{"start":{"line":116,"column":8},"end":{"line":116,"column":30}},"29":{"start":{"line":123,"column":8},"end":{"line":123,"column":30}},"30":{"start":{"line":130,"column":8},"end":{"line":130,"column":36}},"31":{"start":{"line":137,"column":8},"end":{"line":137,"column":34}},"32":{"start":{"line":145,"column":8},"end":{"line":145,"column":22}},"33":{"start":{"line":152,"column":8},"end":{"line":152,"column":30}},"34":{"start":{"line":159,"column":8},"end":{"line":159,"column":62}},"35":{"start":{"line":166,"column":8},"end":{"line":166,"column":56}},"36":{"start":{"line":173,"column":8},"end":{"line":173,"column":34}},"37":{"start":{"line":180,"column":8},"end":{"line":180,"column":34}},"38":{"start":{"line":187,"column":8},"end":{"line":187,"column":34}},"39":{"start":{"line":194,"column":8},"end":{"line":194,"column":46}},"40":{"start":{"line":201,"column":8},"end":{"line":201,"column":42}},"41":{"start":{"line":204,"column":0},"end":{"line":204,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":132},"end":{"line":74,"column":5}},"line":32},"1":{"name":"(anonymous_1)","decl":{"start":{"line":54,"column":31},"end":{"line":54,"column":32}},"loc":{"start":{"line":54,"column":41},"end":{"line":54,"column":46}},"line":54},"2":{"name":"(anonymous_2)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":16},"end":{"line":82,"column":5}},"line":80},"3":{"name":"(anonymous_3)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":20},"end":{"line":89,"column":5}},"line":87},"4":{"name":"(anonymous_4)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":35},"end":{"line":96,"column":5}},"line":94},"5":{"name":"(anonymous_5)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":32},"end":{"line":103,"column":5}},"line":101},"6":{"name":"(anonymous_6)","decl":{"start":{"line":108,"column":4},"end":{"line":108,"column":5}},"loc":{"start":{"line":108,"column":22},"end":{"line":110,"column":5}},"line":108},"7":{"name":"(anonymous_7)","decl":{"start":{"line":115,"column":4},"end":{"line":115,"column":5}},"loc":{"start":{"line":115,"column":22},"end":{"line":117,"column":5}},"line":115},"8":{"name":"(anonymous_8)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":22},"end":{"line":124,"column":5}},"line":122},"9":{"name":"(anonymous_9)","decl":{"start":{"line":129,"column":4},"end":{"line":129,"column":5}},"loc":{"start":{"line":129,"column":27},"end":{"line":131,"column":5}},"line":129},"10":{"name":"(anonymous_10)","decl":{"start":{"line":136,"column":4},"end":{"line":136,"column":5}},"loc":{"start":{"line":136,"column":26},"end":{"line":138,"column":5}},"line":136},"11":{"name":"(anonymous_11)","decl":{"start":{"line":144,"column":4},"end":{"line":144,"column":5}},"loc":{"start":{"line":144,"column":18},"end":{"line":146,"column":5}},"line":144},"12":{"name":"(anonymous_12)","decl":{"start":{"line":151,"column":4},"end":{"line":151,"column":5}},"loc":{"start":{"line":151,"column":26},"end":{"line":153,"column":5}},"line":151},"13":{"name":"(anonymous_13)","decl":{"start":{"line":158,"column":4},"end":{"line":158,"column":5}},"loc":{"start":{"line":158,"column":57},"end":{"line":160,"column":5}},"line":158},"14":{"name":"(anonymous_14)","decl":{"start":{"line":165,"column":4},"end":{"line":165,"column":5}},"loc":{"start":{"line":165,"column":51},"end":{"line":167,"column":5}},"line":165},"15":{"name":"(anonymous_15)","decl":{"start":{"line":172,"column":4},"end":{"line":172,"column":5}},"loc":{"start":{"line":172,"column":30},"end":{"line":174,"column":5}},"line":172},"16":{"name":"(anonymous_16)","decl":{"start":{"line":179,"column":4},"end":{"line":179,"column":5}},"loc":{"start":{"line":179,"column":30},"end":{"line":181,"column":5}},"line":179},"17":{"name":"(anonymous_17)","decl":{"start":{"line":186,"column":4},"end":{"line":186,"column":5}},"loc":{"start":{"line":186,"column":30},"end":{"line":188,"column":5}},"line":186},"18":{"name":"(anonymous_18)","decl":{"start":{"line":193,"column":4},"end":{"line":193,"column":5}},"loc":{"start":{"line":193,"column":41},"end":{"line":195,"column":5}},"line":193},"19":{"name":"(anonymous_19)","decl":{"start":{"line":200,"column":4},"end":{"line":200,"column":5}},"loc":{"start":{"line":200,"column":38},"end":{"line":202,"column":5}},"line":200}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":73,"column":9}},{"start":{"line":42,"column":8},"end":{"line":73,"column":9}}],"line":42},"1":{"loc":{"start":{"line":46,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":61,"column":13}},{"start":{"line":46,"column":12},"end":{"line":61,"column":13}}],"line":46},"2":{"loc":{"start":{"line":55,"column":16},"end":{"line":60,"column":17}},"type":"if","locations":[{"start":{"line":55,"column":16},"end":{"line":60,"column":17}},{"start":{"line":55,"column":16},"end":{"line":60,"column":17}}],"line":55}},"s":{"0":1,"1":1,"2":1,"3":5,"4":5,"5":5,"6":5,"7":5,"8":5,"9":5,"10":5,"11":5,"12":5,"13":4,"14":1,"15":0,"16":1,"17":1,"18":1,"19":1,"20":0,"21":1,"22":1,"23":8,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1},"f":{"0":5,"1":1,"2":8,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"b":{"0":[4,1],"1":[0,1],"2":[0,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/ruta.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/ruta.ts"],"names":[],"mappings":"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","sourcesContent":["import { coordenadas, actividad, ID } from \"./types\";\n\nimport { database } from \"./bd\";\n\n/**\n * @class Ruta\n * @description Clase que representa una ruta\n */\nexport class Ruta {\n  private id_: ID;\n  private nombre_: string;\n  private geolocalizacion_inicio_: coordenadas[];\n  private geolocalizacion_fin_: coordenadas[];\n  private longitud_: number;\n  private desnivel_: number;\n  private usuarios_: ID[];\n  private tipo_actividad_: actividad;\n  private calificacion_: number;\n\n  /** \n   * @constructor\n   * @param nombre Nombre de la ruta\n   * @param geolocalizacion_inicio Geolocalización de inicio de la ruta\n   * @param geolocalizacion_fin Geolocalización de fin de la ruta\n   * @param longitud Longitud de la ruta\n   * @param desnivel Desnivel de la ruta\n   * @param usuarios Usuarios que han realizado la ruta\n   * @param tipo_actividad Tipo de actividad de la ruta\n   * @param calificacion Calificacion de la ruta\n   * @param id ID de la ruta (Parámetro opcional)\n   * @description Constructor de la clase Ruta\n  */\n  constructor(nombre: string, geolocalizacion_inicio: coordenadas[], geolocalizacion_fin: coordenadas[], longitud: number, desnivel: number, usuario: ID[], tipo_actividad: actividad, calificacion: number, id?: ID) {\n    this.nombre_ = nombre;\n    this.geolocalizacion_inicio_ = geolocalizacion_inicio;\n    this.geolocalizacion_fin_ = geolocalizacion_fin;\n    this.longitud_ = longitud;\n    this.desnivel_ = desnivel;\n    this.usuarios_ = usuario;\n    this.tipo_actividad_ = tipo_actividad;\n    this.calificacion_ = calificacion;\n    \n    const id_global = database.get(\"rutas\").map(\"nombre\").value();\n    if (id_global.includes(this.nombre_)) {\n      this.id_ = database.get(\"rutas\").find({ nombre: this.nombre_ }).value().id;\n\n    } else {\n      if (id !== undefined) {\n        this.id_ = id;\n      }\n      else {\n        /**\n         * Buscar el id más alto y sumarle 1\n         */\n        const id_global = database.get(\"rutas\").map(\"id\").value();\n        id_global.sort((a, b) => a - b);\n        if (id_global.length === 0) {\n          this.id_ = 1;\n        }\n        else {\n          this.id_ = id_global[id_global.length - 1] + 1;\n        }\n      }\n      database.get(\"rutas\").push({\n        id: this.id_,\n        nombre: this.nombre_,\n        geolocalizacion_inicio: this.geolocalizacion_inicio_,\n        geolocalizacion_fin: this.geolocalizacion_fin_,\n        longitud: this.longitud_,\n        desnivel: this.desnivel_,\n        usuarios: this.usuarios_,\n        tipo_actividad: this.tipo_actividad_,\n        calificacion: this.calificacion_\n      }).write();\n    }\n  } \n\n  // Getters\n\n  /**\n   * Método que devuelve el id de la ruta\n   * @returns Id de la ruta\n   */\n  get getId(): ID {\n    return this.id_;\n  }\n\n  /**\n   * Método que devuelve el nombre de la ruta\n   * @returns Nombre de la ruta\n   */\n  get getNombre(): string {\n    return this.nombre_;\n  }\n\n  /**\n   * Método que devuelve la geolocalización de inicio de la ruta\n   * @returns Geolocalización de inicio de la ruta\n   */\n  get getGeolocalizacionInicio(): coordenadas[] {\n    return this.geolocalizacion_inicio_;\n  }\n\n  /**\n   * Método que devuelve la geolocalización de fin de la ruta\n   * @returns Geolocalización de fin de la ruta\n   */\n  get getGeolocalizacionFin(): coordenadas[] {\n    return this.geolocalizacion_fin_;\n  }\n  \n  /**\n   * Método que devuelve la longitud de la ruta\n   * @returns Longitud de la ruta\n   */\n  get getLongitud(): number {\n    return this.longitud_;\n  }\n\n  /**\n   * Método que devuelve el desnivel de la ruta\n   * @returns Desnivel de la ruta\n   */\n  get getDesnivel(): number {\n    return this.desnivel_;\n  }\n\n  /**\n   * Método que devuelve los usuarios de la ruta\n   * @returns Usuarios de la ruta\n   */\n  get getUsuarios(): ID[] {\n    return this.usuarios_;\n  }\n\n  /**\n   * Método que devuelve el tipo de actividad de la ruta\n   * @returns Actividad de la ruta\n   */\n  get getTipoActividad(): actividad {\n    return this.tipo_actividad_;\n  }\n\n  /**\n   * Método que devuelve la calificación de la ruta\n   * @returns Calificación de la ruta\n   */\n  get getCalificacion(): number {\n    return this.calificacion_;\n  }\n\n  // Setters\n\n  /**\n   * Método que asigna el id de la ruta\n   * @param id Id de la ruta\n   */\n  set setId(id: ID) {\n    this.id_ = id;\n  }\n\n  /**\n   * Método que asigna el nombre de la ruta\n   * @param nombre Nombre de la ruta\n   */\n  set setNombre(nombre: string) {\n    this.nombre_ = nombre;\n  }\n\n  /**\n   * Método que asigna la geolocalización de inicio de la ruta\n   * @param geolocalizacion_inicio Geolocalización de inicio de la ruta\n   */\n  set setGeolocalizacionInicio(geolocalizacion_inicio: coordenadas[]) {\n    this.geolocalizacion_inicio_ = geolocalizacion_inicio;\n  }\n\n  /**\n   * Méotodo que asigna la geolocalización de fin de la ruta\n   * @param geolocalizacion_fin geolocalización de fin de la ruta\n   */\n  set setGeolocalizacionFin(geolocalizacion_fin: coordenadas[]) {\n    this.geolocalizacion_fin_ = geolocalizacion_fin;\n  }\n\n  /**\n   * Método que asigna la longitud de la ruta\n   * @param longitud Longitud de la ruta\n   */\n  set setLongitud(longitud: number) {\n    this.longitud_ = longitud;\n  }\n\n  /**\n   * Método que asigna el desnivel de la ruta\n   * @param desnivel Desnivel de la ruta\n   */\n  set setDesnivel(desnivel: number) {\n    this.desnivel_ = desnivel;\n  }\n\n  /**\n   * Método que asigna los usuarios de la ruta\n   * @param usuarios Usuarios de la ruta\n   */\n  set setUsuarios(usuarios: ID[]) {\n    this.usuarios_ = usuarios;\n  }\n\n  /**\n   * Método que asigna el tipo de actividad de la ruta\n   * @param tipo_actividad Tipo de actividad de la ruta\n   */\n  set setTipoActividad(tipo_actividad: actividad) {\n    this.tipo_actividad_ = tipo_actividad;\n  }\n\n  /**\n   * Método que asigna la calificación de la ruta\n   * @param calificacion Calificación de la ruta\n   */\n  set setCalificacion(calificacion: number) {\n    this.calificacion_ = calificacion;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d31ace3112a867a0d978f92441caec72118beaba","contentHash":"60ea0bb2b94f604d795b4dcb23660cebcba9afba2ac15b7d95551a6c46059874"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/rutaCollection.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/rutaCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":28}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":22}},"6":{"start":{"line":25,"column":8},"end":{"line":25,"column":37}},"7":{"start":{"line":32,"column":8},"end":{"line":32,"column":48}},"8":{"start":{"line":39,"column":22},"end":{"line":39,"column":56}},"9":{"start":{"line":40,"column":26},"end":{"line":40,"column":28}},"10":{"start":{"line":41,"column":8},"end":{"line":44,"column":11}},"11":{"start":{"line":42,"column":29},"end":{"line":42,"column":197}},"12":{"start":{"line":43,"column":12},"end":{"line":43,"column":37}},"13":{"start":{"line":45,"column":8},"end":{"line":45,"column":34}},"14":{"start":{"line":46,"column":27},"end":{"line":46,"column":29}},"15":{"start":{"line":47,"column":8},"end":{"line":49,"column":11}},"16":{"start":{"line":48,"column":12},"end":{"line":48,"column":40}},"17":{"start":{"line":50,"column":8},"end":{"line":50,"column":26}},"18":{"start":{"line":57,"column":8},"end":{"line":62,"column":11}},"19":{"start":{"line":58,"column":12},"end":{"line":61,"column":13}},"20":{"start":{"line":59,"column":16},"end":{"line":59,"column":69}},"21":{"start":{"line":60,"column":16},"end":{"line":60,"column":28}},"22":{"start":{"line":63,"column":8},"end":{"line":63,"column":21}},"23":{"start":{"line":71,"column":27},"end":{"line":71,"column":32}},"24":{"start":{"line":73,"column":8},"end":{"line":80,"column":11}},"25":{"start":{"line":74,"column":12},"end":{"line":79,"column":13}},"26":{"start":{"line":75,"column":16},"end":{"line":75,"column":32}},"27":{"start":{"line":76,"column":16},"end":{"line":76,"column":56}},"28":{"start":{"line":77,"column":16},"end":{"line":77,"column":36}},"29":{"start":{"line":78,"column":16},"end":{"line":78,"column":69}},"30":{"start":{"line":81,"column":8},"end":{"line":86,"column":9}},"31":{"start":{"line":82,"column":12},"end":{"line":82,"column":28}},"32":{"start":{"line":85,"column":12},"end":{"line":85,"column":29}},"33":{"start":{"line":92,"column":23},"end":{"line":92,"column":52}},"34":{"start":{"line":93,"column":8},"end":{"line":111,"column":11}},"35":{"start":{"line":99,"column":20},"end":{"line":99,"column":71}},"36":{"start":{"line":103,"column":29},"end":{"line":103,"column":56}},"37":{"start":{"line":104,"column":12},"end":{"line":109,"column":13}},"38":{"start":{"line":105,"column":16},"end":{"line":105,"column":63}},"39":{"start":{"line":108,"column":16},"end":{"line":108,"column":49}},"40":{"start":{"line":110,"column":12},"end":{"line":110,"column":31}},"41":{"start":{"line":117,"column":23},"end":{"line":117,"column":52}},"42":{"start":{"line":118,"column":8},"end":{"line":129,"column":11}},"43":{"start":{"line":124,"column":20},"end":{"line":124,"column":71}},"44":{"start":{"line":128,"column":12},"end":{"line":128,"column":43}},"45":{"start":{"line":136,"column":37},"end":{"line":136,"column":42}},"46":{"start":{"line":137,"column":21},"end":{"line":137,"column":23}},"47":{"start":{"line":138,"column":8},"end":{"line":143,"column":11}},"48":{"start":{"line":139,"column":12},"end":{"line":142,"column":13}},"49":{"start":{"line":140,"column":16},"end":{"line":140,"column":46}},"50":{"start":{"line":141,"column":16},"end":{"line":141,"column":31}},"51":{"start":{"line":144,"column":8},"end":{"line":147,"column":9}},"52":{"start":{"line":145,"column":12},"end":{"line":145,"column":70}},"53":{"start":{"line":146,"column":12},"end":{"line":146,"column":19}},"54":{"start":{"line":148,"column":23},"end":{"line":148,"column":52}},"55":{"start":{"line":149,"column":8},"end":{"line":401,"column":11}},"56":{"start":{"line":166,"column":27},"end":{"line":166,"column":56}},"57":{"start":{"line":167,"column":32},"end":{"line":170,"column":13}},"58":{"start":{"line":171,"column":32},"end":{"line":174,"column":13}},"59":{"start":{"line":175,"column":32},"end":{"line":178,"column":13}},"60":{"start":{"line":179,"column":12},"end":{"line":400,"column":13}},"61":{"start":{"line":181,"column":20},"end":{"line":194,"column":23}},"62":{"start":{"line":188,"column":24},"end":{"line":188,"column":82}},"63":{"start":{"line":189,"column":24},"end":{"line":189,"column":61}},"64":{"start":{"line":190,"column":41},"end":{"line":190,"column":467}},"65":{"start":{"line":191,"column":24},"end":{"line":191,"column":61}},"66":{"start":{"line":192,"column":24},"end":{"line":192,"column":64}},"67":{"start":{"line":193,"column":24},"end":{"line":193,"column":43}},"68":{"start":{"line":195,"column":20},"end":{"line":195,"column":26}},"69":{"start":{"line":197,"column":20},"end":{"line":223,"column":23}},"70":{"start":{"line":214,"column":24},"end":{"line":214,"column":71}},"71":{"start":{"line":215,"column":24},"end":{"line":215,"column":71}},"72":{"start":{"line":216,"column":24},"end":{"line":216,"column":71}},"73":{"start":{"line":217,"column":24},"end":{"line":217,"column":121}},"74":{"start":{"line":218,"column":24},"end":{"line":218,"column":61}},"75":{"start":{"line":219,"column":41},"end":{"line":219,"column":467}},"76":{"start":{"line":220,"column":24},"end":{"line":220,"column":61}},"77":{"start":{"line":221,"column":24},"end":{"line":221,"column":64}},"78":{"start":{"line":222,"column":24},"end":{"line":222,"column":43}},"79":{"start":{"line":224,"column":20},"end":{"line":224,"column":26}},"80":{"start":{"line":226,"column":20},"end":{"line":252,"column":23}},"81":{"start":{"line":243,"column":24},"end":{"line":243,"column":71}},"82":{"start":{"line":244,"column":24},"end":{"line":244,"column":71}},"83":{"start":{"line":245,"column":24},"end":{"line":245,"column":71}},"84":{"start":{"line":246,"column":24},"end":{"line":246,"column":118}},"85":{"start":{"line":247,"column":24},"end":{"line":247,"column":61}},"86":{"start":{"line":248,"column":41},"end":{"line":248,"column":467}},"87":{"start":{"line":249,"column":24},"end":{"line":249,"column":61}},"88":{"start":{"line":250,"column":24},"end":{"line":250,"column":64}},"89":{"start":{"line":251,"column":24},"end":{"line":251,"column":43}},"90":{"start":{"line":253,"column":20},"end":{"line":253,"column":26}},"91":{"start":{"line":255,"column":20},"end":{"line":268,"column":23}},"92":{"start":{"line":262,"column":24},"end":{"line":262,"column":86}},"93":{"start":{"line":263,"column":24},"end":{"line":263,"column":61}},"94":{"start":{"line":264,"column":41},"end":{"line":264,"column":467}},"95":{"start":{"line":265,"column":24},"end":{"line":265,"column":61}},"96":{"start":{"line":266,"column":24},"end":{"line":266,"column":64}},"97":{"start":{"line":267,"column":24},"end":{"line":267,"column":43}},"98":{"start":{"line":269,"column":20},"end":{"line":269,"column":26}},"99":{"start":{"line":271,"column":20},"end":{"line":284,"column":23}},"100":{"start":{"line":278,"column":24},"end":{"line":278,"column":86}},"101":{"start":{"line":279,"column":24},"end":{"line":279,"column":61}},"102":{"start":{"line":280,"column":41},"end":{"line":280,"column":467}},"103":{"start":{"line":281,"column":24},"end":{"line":281,"column":61}},"104":{"start":{"line":282,"column":24},"end":{"line":282,"column":64}},"105":{"start":{"line":283,"column":24},"end":{"line":283,"column":43}},"106":{"start":{"line":285,"column":20},"end":{"line":285,"column":26}},"107":{"start":{"line":287,"column":20},"end":{"line":362,"column":23}},"108":{"start":{"line":299,"column":24},"end":{"line":361,"column":25}},"109":{"start":{"line":301,"column":32},"end":{"line":314,"column":35}},"110":{"start":{"line":308,"column":36},"end":{"line":308,"column":107}},"111":{"start":{"line":309,"column":36},"end":{"line":309,"column":73}},"112":{"start":{"line":310,"column":53},"end":{"line":310,"column":479}},"113":{"start":{"line":311,"column":36},"end":{"line":311,"column":73}},"114":{"start":{"line":312,"column":36},"end":{"line":312,"column":76}},"115":{"start":{"line":313,"column":36},"end":{"line":313,"column":55}},"116":{"start":{"line":315,"column":32},"end":{"line":315,"column":38}},"117":{"start":{"line":317,"column":32},"end":{"line":317,"column":113}},"118":{"start":{"line":318,"column":32},"end":{"line":334,"column":35}},"119":{"start":{"line":325,"column":53},"end":{"line":325,"column":94}},"120":{"start":{"line":326,"column":59},"end":{"line":326,"column":92}},"121":{"start":{"line":327,"column":36},"end":{"line":327,"column":71}},"122":{"start":{"line":328,"column":36},"end":{"line":328,"column":89}},"123":{"start":{"line":329,"column":36},"end":{"line":329,"column":73}},"124":{"start":{"line":330,"column":53},"end":{"line":330,"column":479}},"125":{"start":{"line":331,"column":36},"end":{"line":331,"column":73}},"126":{"start":{"line":332,"column":36},"end":{"line":332,"column":76}},"127":{"start":{"line":333,"column":36},"end":{"line":333,"column":55}},"128":{"start":{"line":335,"column":32},"end":{"line":335,"column":38}},"129":{"start":{"line":337,"column":32},"end":{"line":337,"column":113}},"130":{"start":{"line":338,"column":32},"end":{"line":359,"column":35}},"131":{"start":{"line":345,"column":53},"end":{"line":345,"column":94}},"132":{"start":{"line":346,"column":36},"end":{"line":358,"column":37}},"133":{"start":{"line":347,"column":40},"end":{"line":347,"column":86}},"134":{"start":{"line":348,"column":40},"end":{"line":348,"column":59}},"135":{"start":{"line":351,"column":40},"end":{"line":351,"column":71}},"136":{"start":{"line":352,"column":40},"end":{"line":352,"column":93}},"137":{"start":{"line":353,"column":40},"end":{"line":353,"column":77}},"138":{"start":{"line":354,"column":57},"end":{"line":354,"column":483}},"139":{"start":{"line":355,"column":40},"end":{"line":355,"column":77}},"140":{"start":{"line":356,"column":40},"end":{"line":356,"column":80}},"141":{"start":{"line":357,"column":40},"end":{"line":357,"column":59}},"142":{"start":{"line":360,"column":32},"end":{"line":360,"column":38}},"143":{"start":{"line":363,"column":20},"end":{"line":363,"column":26}},"144":{"start":{"line":365,"column":20},"end":{"line":382,"column":23}},"145":{"start":{"line":376,"column":24},"end":{"line":376,"column":97}},"146":{"start":{"line":377,"column":24},"end":{"line":377,"column":61}},"147":{"start":{"line":378,"column":41},"end":{"line":378,"column":467}},"148":{"start":{"line":379,"column":24},"end":{"line":379,"column":61}},"149":{"start":{"line":380,"column":24},"end":{"line":380,"column":64}},"150":{"start":{"line":381,"column":24},"end":{"line":381,"column":43}},"151":{"start":{"line":383,"column":20},"end":{"line":383,"column":26}},"152":{"start":{"line":385,"column":20},"end":{"line":398,"column":23}},"153":{"start":{"line":392,"column":24},"end":{"line":392,"column":94}},"154":{"start":{"line":393,"column":24},"end":{"line":393,"column":61}},"155":{"start":{"line":394,"column":41},"end":{"line":394,"column":467}},"156":{"start":{"line":395,"column":24},"end":{"line":395,"column":61}},"157":{"start":{"line":396,"column":24},"end":{"line":396,"column":64}},"158":{"start":{"line":397,"column":24},"end":{"line":397,"column":43}},"159":{"start":{"line":399,"column":20},"end":{"line":399,"column":26}},"160":{"start":{"line":407,"column":23},"end":{"line":407,"column":52}},"161":{"start":{"line":408,"column":33},"end":{"line":408,"column":35}},"162":{"start":{"line":409,"column":30},"end":{"line":409,"column":32}},"163":{"start":{"line":410,"column":8},"end":{"line":482,"column":11}},"164":{"start":{"line":476,"column":12},"end":{"line":476,"column":133}},"165":{"start":{"line":477,"column":12},"end":{"line":477,"column":121}},"166":{"start":{"line":478,"column":35},"end":{"line":478,"column":61}},"167":{"start":{"line":479,"column":31},"end":{"line":479,"column":197}},"168":{"start":{"line":480,"column":12},"end":{"line":480,"column":51}},"169":{"start":{"line":481,"column":12},"end":{"line":481,"column":31}},"170":{"start":{"line":488,"column":23},"end":{"line":488,"column":52}},"171":{"start":{"line":489,"column":8},"end":{"line":514,"column":11}},"172":{"start":{"line":502,"column":12},"end":{"line":513,"column":13}},"173":{"start":{"line":503,"column":16},"end":{"line":503,"column":37}},"174":{"start":{"line":505,"column":17},"end":{"line":513,"column":13}},"175":{"start":{"line":506,"column":16},"end":{"line":506,"column":40}},"176":{"start":{"line":508,"column":17},"end":{"line":513,"column":13}},"177":{"start":{"line":509,"column":16},"end":{"line":509,"column":43}},"178":{"start":{"line":511,"column":17},"end":{"line":513,"column":13}},"179":{"start":{"line":512,"column":16},"end":{"line":512,"column":32}},"180":{"start":{"line":520,"column":23},"end":{"line":520,"column":52}},"181":{"start":{"line":521,"column":8},"end":{"line":556,"column":11}},"182":{"start":{"line":536,"column":12},"end":{"line":555,"column":13}},"183":{"start":{"line":538,"column":20},"end":{"line":538,"column":49}},"184":{"start":{"line":539,"column":20},"end":{"line":539,"column":26}},"185":{"start":{"line":541,"column":20},"end":{"line":541,"column":59}},"186":{"start":{"line":542,"column":20},"end":{"line":542,"column":26}},"187":{"start":{"line":544,"column":20},"end":{"line":544,"column":51}},"188":{"start":{"line":545,"column":20},"end":{"line":545,"column":26}},"189":{"start":{"line":547,"column":20},"end":{"line":547,"column":55}},"190":{"start":{"line":548,"column":20},"end":{"line":548,"column":26}},"191":{"start":{"line":550,"column":20},"end":{"line":550,"column":52}},"192":{"start":{"line":551,"column":20},"end":{"line":551,"column":26}},"193":{"start":{"line":553,"column":20},"end":{"line":553,"column":36}},"194":{"start":{"line":554,"column":20},"end":{"line":554,"column":26}},"195":{"start":{"line":562,"column":25},"end":{"line":562,"column":29}},"196":{"start":{"line":563,"column":23},"end":{"line":563,"column":52}},"197":{"start":{"line":564,"column":8},"end":{"line":591,"column":11}},"198":{"start":{"line":575,"column":12},"end":{"line":577,"column":13}},"199":{"start":{"line":576,"column":16},"end":{"line":576,"column":35}},"200":{"start":{"line":578,"column":32},"end":{"line":578,"column":53}},"201":{"start":{"line":579,"column":12},"end":{"line":586,"column":15}},"202":{"start":{"line":580,"column":16},"end":{"line":585,"column":17}},"203":{"start":{"line":581,"column":20},"end":{"line":581,"column":66}},"204":{"start":{"line":584,"column":20},"end":{"line":584,"column":66}},"205":{"start":{"line":587,"column":12},"end":{"line":589,"column":15}},"206":{"start":{"line":588,"column":16},"end":{"line":588,"column":57}},"207":{"start":{"line":590,"column":12},"end":{"line":590,"column":29}},"208":{"start":{"line":597,"column":25},"end":{"line":597,"column":29}},"209":{"start":{"line":598,"column":23},"end":{"line":598,"column":52}},"210":{"start":{"line":599,"column":8},"end":{"line":626,"column":11}},"211":{"start":{"line":610,"column":12},"end":{"line":612,"column":13}},"212":{"start":{"line":611,"column":16},"end":{"line":611,"column":35}},"213":{"start":{"line":613,"column":32},"end":{"line":613,"column":53}},"214":{"start":{"line":614,"column":12},"end":{"line":621,"column":15}},"215":{"start":{"line":615,"column":16},"end":{"line":620,"column":17}},"216":{"start":{"line":616,"column":20},"end":{"line":616,"column":71}},"217":{"start":{"line":619,"column":20},"end":{"line":619,"column":71}},"218":{"start":{"line":622,"column":12},"end":{"line":624,"column":15}},"219":{"start":{"line":623,"column":16},"end":{"line":623,"column":107}},"220":{"start":{"line":625,"column":12},"end":{"line":625,"column":29}},"221":{"start":{"line":632,"column":25},"end":{"line":632,"column":29}},"222":{"start":{"line":633,"column":23},"end":{"line":633,"column":52}},"223":{"start":{"line":634,"column":8},"end":{"line":661,"column":11}},"224":{"start":{"line":645,"column":12},"end":{"line":647,"column":13}},"225":{"start":{"line":646,"column":16},"end":{"line":646,"column":35}},"226":{"start":{"line":648,"column":32},"end":{"line":648,"column":53}},"227":{"start":{"line":649,"column":12},"end":{"line":656,"column":15}},"228":{"start":{"line":650,"column":16},"end":{"line":655,"column":17}},"229":{"start":{"line":651,"column":20},"end":{"line":651,"column":57}},"230":{"start":{"line":654,"column":20},"end":{"line":654,"column":57}},"231":{"start":{"line":657,"column":12},"end":{"line":659,"column":15}},"232":{"start":{"line":658,"column":16},"end":{"line":658,"column":88}},"233":{"start":{"line":660,"column":12},"end":{"line":660,"column":29}},"234":{"start":{"line":667,"column":25},"end":{"line":667,"column":29}},"235":{"start":{"line":668,"column":23},"end":{"line":668,"column":52}},"236":{"start":{"line":669,"column":8},"end":{"line":696,"column":11}},"237":{"start":{"line":680,"column":12},"end":{"line":682,"column":13}},"238":{"start":{"line":681,"column":16},"end":{"line":681,"column":35}},"239":{"start":{"line":683,"column":32},"end":{"line":683,"column":53}},"240":{"start":{"line":684,"column":12},"end":{"line":691,"column":15}},"241":{"start":{"line":685,"column":16},"end":{"line":690,"column":17}},"242":{"start":{"line":686,"column":20},"end":{"line":686,"column":65}},"243":{"start":{"line":689,"column":20},"end":{"line":689,"column":65}},"244":{"start":{"line":692,"column":12},"end":{"line":694,"column":15}},"245":{"start":{"line":693,"column":16},"end":{"line":693,"column":96}},"246":{"start":{"line":695,"column":12},"end":{"line":695,"column":29}},"247":{"start":{"line":702,"column":25},"end":{"line":702,"column":29}},"248":{"start":{"line":703,"column":23},"end":{"line":703,"column":52}},"249":{"start":{"line":704,"column":8},"end":{"line":731,"column":11}},"250":{"start":{"line":715,"column":12},"end":{"line":717,"column":13}},"251":{"start":{"line":716,"column":16},"end":{"line":716,"column":35}},"252":{"start":{"line":718,"column":32},"end":{"line":718,"column":53}},"253":{"start":{"line":719,"column":12},"end":{"line":726,"column":15}},"254":{"start":{"line":720,"column":16},"end":{"line":725,"column":17}},"255":{"start":{"line":721,"column":20},"end":{"line":721,"column":80}},"256":{"start":{"line":724,"column":20},"end":{"line":724,"column":80}},"257":{"start":{"line":727,"column":12},"end":{"line":729,"column":15}},"258":{"start":{"line":728,"column":16},"end":{"line":728,"column":94}},"259":{"start":{"line":730,"column":12},"end":{"line":730,"column":29}},"260":{"start":{"line":734,"column":0},"end":{"line":734,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":18},"end":{"line":19,"column":5}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":19},"end":{"line":26,"column":5}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":34},"end":{"line":33,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":13},"end":{"line":51,"column":5}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":22},"end":{"line":41,"column":23}},"loc":{"start":{"line":41,"column":32},"end":{"line":44,"column":9}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":47,"column":26},"end":{"line":47,"column":27}},"loc":{"start":{"line":47,"column":36},"end":{"line":49,"column":9}},"line":47},"6":{"name":"(anonymous_6)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":36},"end":{"line":64,"column":5}},"line":56},"7":{"name":"(anonymous_7)","decl":{"start":{"line":57,"column":38},"end":{"line":57,"column":39}},"loc":{"start":{"line":57,"column":56},"end":{"line":62,"column":9}},"line":57},"8":{"name":"(anonymous_8)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":30},"end":{"line":87,"column":5}},"line":70},"9":{"name":"(anonymous_9)","decl":{"start":{"line":73,"column":38},"end":{"line":73,"column":39}},"loc":{"start":{"line":73,"column":56},"end":{"line":80,"column":9}},"line":73},"10":{"name":"(anonymous_10)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":23},"end":{"line":112,"column":5}},"line":91},"11":{"name":"(anonymous_11)","decl":{"start":{"line":98,"column":43},"end":{"line":98,"column":44}},"loc":{"start":{"line":98,"column":53},"end":{"line":100,"column":17}},"line":98},"12":{"name":"(anonymous_12)","decl":{"start":{"line":102,"column":16},"end":{"line":102,"column":17}},"loc":{"start":{"line":102,"column":29},"end":{"line":111,"column":9}},"line":102},"13":{"name":"(anonymous_13)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":26},"end":{"line":130,"column":5}},"line":116},"14":{"name":"(anonymous_14)","decl":{"start":{"line":123,"column":43},"end":{"line":123,"column":44}},"loc":{"start":{"line":123,"column":53},"end":{"line":125,"column":17}},"line":123},"15":{"name":"(anonymous_15)","decl":{"start":{"line":127,"column":16},"end":{"line":127,"column":17}},"loc":{"start":{"line":127,"column":29},"end":{"line":129,"column":9}},"line":127},"16":{"name":"(anonymous_16)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":33},"end":{"line":402,"column":5}},"line":135},"17":{"name":"(anonymous_17)","decl":{"start":{"line":138,"column":38},"end":{"line":138,"column":39}},"loc":{"start":{"line":138,"column":55},"end":{"line":143,"column":9}},"line":138},"18":{"name":"(anonymous_18)","decl":{"start":{"line":165,"column":16},"end":{"line":165,"column":17}},"loc":{"start":{"line":165,"column":29},"end":{"line":401,"column":9}},"line":165},"19":{"name":"(anonymous_19)","decl":{"start":{"line":187,"column":28},"end":{"line":187,"column":29}},"loc":{"start":{"line":187,"column":41},"end":{"line":194,"column":21}},"line":187},"20":{"name":"(anonymous_20)","decl":{"start":{"line":213,"column":28},"end":{"line":213,"column":29}},"loc":{"start":{"line":213,"column":41},"end":{"line":223,"column":21}},"line":213},"21":{"name":"(anonymous_21)","decl":{"start":{"line":242,"column":28},"end":{"line":242,"column":29}},"loc":{"start":{"line":242,"column":41},"end":{"line":252,"column":21}},"line":242},"22":{"name":"(anonymous_22)","decl":{"start":{"line":261,"column":28},"end":{"line":261,"column":29}},"loc":{"start":{"line":261,"column":41},"end":{"line":268,"column":21}},"line":261},"23":{"name":"(anonymous_23)","decl":{"start":{"line":277,"column":28},"end":{"line":277,"column":29}},"loc":{"start":{"line":277,"column":41},"end":{"line":284,"column":21}},"line":277},"24":{"name":"(anonymous_24)","decl":{"start":{"line":298,"column":28},"end":{"line":298,"column":29}},"loc":{"start":{"line":298,"column":41},"end":{"line":362,"column":21}},"line":298},"25":{"name":"(anonymous_25)","decl":{"start":{"line":307,"column":40},"end":{"line":307,"column":41}},"loc":{"start":{"line":307,"column":53},"end":{"line":314,"column":33}},"line":307},"26":{"name":"(anonymous_26)","decl":{"start":{"line":324,"column":40},"end":{"line":324,"column":41}},"loc":{"start":{"line":324,"column":53},"end":{"line":334,"column":33}},"line":324},"27":{"name":"(anonymous_27)","decl":{"start":{"line":344,"column":40},"end":{"line":344,"column":41}},"loc":{"start":{"line":344,"column":53},"end":{"line":359,"column":33}},"line":344},"28":{"name":"(anonymous_28)","decl":{"start":{"line":375,"column":28},"end":{"line":375,"column":29}},"loc":{"start":{"line":375,"column":41},"end":{"line":382,"column":21}},"line":375},"29":{"name":"(anonymous_29)","decl":{"start":{"line":391,"column":28},"end":{"line":391,"column":29}},"loc":{"start":{"line":391,"column":41},"end":{"line":398,"column":21}},"line":391},"30":{"name":"(anonymous_30)","decl":{"start":{"line":406,"column":4},"end":{"line":406,"column":5}},"loc":{"start":{"line":406,"column":20},"end":{"line":483,"column":5}},"line":406},"31":{"name":"(anonymous_31)","decl":{"start":{"line":475,"column":16},"end":{"line":475,"column":17}},"loc":{"start":{"line":475,"column":29},"end":{"line":482,"column":9}},"line":475},"32":{"name":"(anonymous_32)","decl":{"start":{"line":487,"column":4},"end":{"line":487,"column":5}},"loc":{"start":{"line":487,"column":18},"end":{"line":515,"column":5}},"line":487},"33":{"name":"(anonymous_33)","decl":{"start":{"line":501,"column":16},"end":{"line":501,"column":17}},"loc":{"start":{"line":501,"column":29},"end":{"line":514,"column":9}},"line":501},"34":{"name":"(anonymous_34)","decl":{"start":{"line":519,"column":4},"end":{"line":519,"column":5}},"loc":{"start":{"line":519,"column":16},"end":{"line":557,"column":5}},"line":519},"35":{"name":"(anonymous_35)","decl":{"start":{"line":535,"column":16},"end":{"line":535,"column":17}},"loc":{"start":{"line":535,"column":29},"end":{"line":556,"column":9}},"line":535},"36":{"name":"(anonymous_36)","decl":{"start":{"line":561,"column":4},"end":{"line":561,"column":5}},"loc":{"start":{"line":561,"column":28},"end":{"line":592,"column":5}},"line":561},"37":{"name":"(anonymous_37)","decl":{"start":{"line":574,"column":16},"end":{"line":574,"column":17}},"loc":{"start":{"line":574,"column":29},"end":{"line":591,"column":9}},"line":574},"38":{"name":"(anonymous_38)","decl":{"start":{"line":579,"column":29},"end":{"line":579,"column":30}},"loc":{"start":{"line":579,"column":39},"end":{"line":586,"column":13}},"line":579},"39":{"name":"(anonymous_39)","decl":{"start":{"line":587,"column":32},"end":{"line":587,"column":33}},"loc":{"start":{"line":587,"column":42},"end":{"line":589,"column":13}},"line":587},"40":{"name":"(anonymous_40)","decl":{"start":{"line":596,"column":4},"end":{"line":596,"column":5}},"loc":{"start":{"line":596,"column":38},"end":{"line":627,"column":5}},"line":596},"41":{"name":"(anonymous_41)","decl":{"start":{"line":609,"column":16},"end":{"line":609,"column":17}},"loc":{"start":{"line":609,"column":29},"end":{"line":626,"column":9}},"line":609},"42":{"name":"(anonymous_42)","decl":{"start":{"line":614,"column":29},"end":{"line":614,"column":30}},"loc":{"start":{"line":614,"column":39},"end":{"line":621,"column":13}},"line":614},"43":{"name":"(anonymous_43)","decl":{"start":{"line":622,"column":32},"end":{"line":622,"column":33}},"loc":{"start":{"line":622,"column":42},"end":{"line":624,"column":13}},"line":622},"44":{"name":"(anonymous_44)","decl":{"start":{"line":631,"column":4},"end":{"line":631,"column":5}},"loc":{"start":{"line":631,"column":30},"end":{"line":662,"column":5}},"line":631},"45":{"name":"(anonymous_45)","decl":{"start":{"line":644,"column":16},"end":{"line":644,"column":17}},"loc":{"start":{"line":644,"column":29},"end":{"line":661,"column":9}},"line":644},"46":{"name":"(anonymous_46)","decl":{"start":{"line":649,"column":29},"end":{"line":649,"column":30}},"loc":{"start":{"line":649,"column":39},"end":{"line":656,"column":13}},"line":649},"47":{"name":"(anonymous_47)","decl":{"start":{"line":657,"column":32},"end":{"line":657,"column":33}},"loc":{"start":{"line":657,"column":42},"end":{"line":659,"column":13}},"line":657},"48":{"name":"(anonymous_48)","decl":{"start":{"line":666,"column":4},"end":{"line":666,"column":5}},"loc":{"start":{"line":666,"column":34},"end":{"line":697,"column":5}},"line":666},"49":{"name":"(anonymous_49)","decl":{"start":{"line":679,"column":16},"end":{"line":679,"column":17}},"loc":{"start":{"line":679,"column":29},"end":{"line":696,"column":9}},"line":679},"50":{"name":"(anonymous_50)","decl":{"start":{"line":684,"column":29},"end":{"line":684,"column":30}},"loc":{"start":{"line":684,"column":39},"end":{"line":691,"column":13}},"line":684},"51":{"name":"(anonymous_51)","decl":{"start":{"line":692,"column":32},"end":{"line":692,"column":33}},"loc":{"start":{"line":692,"column":42},"end":{"line":694,"column":13}},"line":692},"52":{"name":"(anonymous_52)","decl":{"start":{"line":701,"column":4},"end":{"line":701,"column":5}},"loc":{"start":{"line":701,"column":31},"end":{"line":732,"column":5}},"line":701},"53":{"name":"(anonymous_53)","decl":{"start":{"line":714,"column":16},"end":{"line":714,"column":17}},"loc":{"start":{"line":714,"column":29},"end":{"line":731,"column":9}},"line":714},"54":{"name":"(anonymous_54)","decl":{"start":{"line":719,"column":29},"end":{"line":719,"column":30}},"loc":{"start":{"line":719,"column":39},"end":{"line":726,"column":13}},"line":719},"55":{"name":"(anonymous_55)","decl":{"start":{"line":727,"column":32},"end":{"line":727,"column":33}},"loc":{"start":{"line":727,"column":42},"end":{"line":729,"column":13}},"line":727}},"branchMap":{"0":{"loc":{"start":{"line":58,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":61,"column":13}},{"start":{"line":58,"column":12},"end":{"line":61,"column":13}}],"line":58},"1":{"loc":{"start":{"line":74,"column":12},"end":{"line":79,"column":13}},"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":79,"column":13}},{"start":{"line":74,"column":12},"end":{"line":79,"column":13}}],"line":74},"2":{"loc":{"start":{"line":81,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":86,"column":9}},{"start":{"line":81,"column":8},"end":{"line":86,"column":9}}],"line":81},"3":{"loc":{"start":{"line":104,"column":12},"end":{"line":109,"column":13}},"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":109,"column":13}},{"start":{"line":104,"column":12},"end":{"line":109,"column":13}}],"line":104},"4":{"loc":{"start":{"line":139,"column":12},"end":{"line":142,"column":13}},"type":"if","locations":[{"start":{"line":139,"column":12},"end":{"line":142,"column":13}},{"start":{"line":139,"column":12},"end":{"line":142,"column":13}}],"line":139},"5":{"loc":{"start":{"line":144,"column":8},"end":{"line":147,"column":9}},"type":"if","locations":[{"start":{"line":144,"column":8},"end":{"line":147,"column":9}},{"start":{"line":144,"column":8},"end":{"line":147,"column":9}}],"line":144},"6":{"loc":{"start":{"line":179,"column":12},"end":{"line":400,"column":13}},"type":"switch","locations":[{"start":{"line":180,"column":16},"end":{"line":195,"column":26}},{"start":{"line":196,"column":16},"end":{"line":224,"column":26}},{"start":{"line":225,"column":16},"end":{"line":253,"column":26}},{"start":{"line":254,"column":16},"end":{"line":269,"column":26}},{"start":{"line":270,"column":16},"end":{"line":285,"column":26}},{"start":{"line":286,"column":16},"end":{"line":363,"column":26}},{"start":{"line":364,"column":16},"end":{"line":383,"column":26}},{"start":{"line":384,"column":16},"end":{"line":399,"column":26}}],"line":179},"7":{"loc":{"start":{"line":299,"column":24},"end":{"line":361,"column":25}},"type":"switch","locations":[{"start":{"line":300,"column":28},"end":{"line":315,"column":38}},{"start":{"line":316,"column":28},"end":{"line":335,"column":38}},{"start":{"line":336,"column":28},"end":{"line":360,"column":38}}],"line":299},"8":{"loc":{"start":{"line":346,"column":36},"end":{"line":358,"column":37}},"type":"if","locations":[{"start":{"line":346,"column":36},"end":{"line":358,"column":37}},{"start":{"line":346,"column":36},"end":{"line":358,"column":37}}],"line":346},"9":{"loc":{"start":{"line":502,"column":12},"end":{"line":513,"column":13}},"type":"if","locations":[{"start":{"line":502,"column":12},"end":{"line":513,"column":13}},{"start":{"line":502,"column":12},"end":{"line":513,"column":13}}],"line":502},"10":{"loc":{"start":{"line":505,"column":17},"end":{"line":513,"column":13}},"type":"if","locations":[{"start":{"line":505,"column":17},"end":{"line":513,"column":13}},{"start":{"line":505,"column":17},"end":{"line":513,"column":13}}],"line":505},"11":{"loc":{"start":{"line":508,"column":17},"end":{"line":513,"column":13}},"type":"if","locations":[{"start":{"line":508,"column":17},"end":{"line":513,"column":13}},{"start":{"line":508,"column":17},"end":{"line":513,"column":13}}],"line":508},"12":{"loc":{"start":{"line":511,"column":17},"end":{"line":513,"column":13}},"type":"if","locations":[{"start":{"line":511,"column":17},"end":{"line":513,"column":13}},{"start":{"line":511,"column":17},"end":{"line":513,"column":13}}],"line":511},"13":{"loc":{"start":{"line":536,"column":12},"end":{"line":555,"column":13}},"type":"switch","locations":[{"start":{"line":537,"column":16},"end":{"line":539,"column":26}},{"start":{"line":540,"column":16},"end":{"line":542,"column":26}},{"start":{"line":543,"column":16},"end":{"line":545,"column":26}},{"start":{"line":546,"column":16},"end":{"line":548,"column":26}},{"start":{"line":549,"column":16},"end":{"line":551,"column":26}},{"start":{"line":552,"column":16},"end":{"line":554,"column":26}}],"line":536},"14":{"loc":{"start":{"line":575,"column":12},"end":{"line":577,"column":13}},"type":"if","locations":[{"start":{"line":575,"column":12},"end":{"line":577,"column":13}},{"start":{"line":575,"column":12},"end":{"line":577,"column":13}}],"line":575},"15":{"loc":{"start":{"line":580,"column":16},"end":{"line":585,"column":17}},"type":"if","locations":[{"start":{"line":580,"column":16},"end":{"line":585,"column":17}},{"start":{"line":580,"column":16},"end":{"line":585,"column":17}}],"line":580},"16":{"loc":{"start":{"line":610,"column":12},"end":{"line":612,"column":13}},"type":"if","locations":[{"start":{"line":610,"column":12},"end":{"line":612,"column":13}},{"start":{"line":610,"column":12},"end":{"line":612,"column":13}}],"line":610},"17":{"loc":{"start":{"line":615,"column":16},"end":{"line":620,"column":17}},"type":"if","locations":[{"start":{"line":615,"column":16},"end":{"line":620,"column":17}},{"start":{"line":615,"column":16},"end":{"line":620,"column":17}}],"line":615},"18":{"loc":{"start":{"line":645,"column":12},"end":{"line":647,"column":13}},"type":"if","locations":[{"start":{"line":645,"column":12},"end":{"line":647,"column":13}},{"start":{"line":645,"column":12},"end":{"line":647,"column":13}}],"line":645},"19":{"loc":{"start":{"line":650,"column":16},"end":{"line":655,"column":17}},"type":"if","locations":[{"start":{"line":650,"column":16},"end":{"line":655,"column":17}},{"start":{"line":650,"column":16},"end":{"line":655,"column":17}}],"line":650},"20":{"loc":{"start":{"line":680,"column":12},"end":{"line":682,"column":13}},"type":"if","locations":[{"start":{"line":680,"column":12},"end":{"line":682,"column":13}},{"start":{"line":680,"column":12},"end":{"line":682,"column":13}}],"line":680},"21":{"loc":{"start":{"line":685,"column":16},"end":{"line":690,"column":17}},"type":"if","locations":[{"start":{"line":685,"column":16},"end":{"line":690,"column":17}},{"start":{"line":685,"column":16},"end":{"line":690,"column":17}}],"line":685},"22":{"loc":{"start":{"line":715,"column":12},"end":{"line":717,"column":13}},"type":"if","locations":[{"start":{"line":715,"column":12},"end":{"line":717,"column":13}},{"start":{"line":715,"column":12},"end":{"line":717,"column":13}}],"line":715},"23":{"loc":{"start":{"line":720,"column":16},"end":{"line":725,"column":17}},"type":"if","locations":[{"start":{"line":720,"column":16},"end":{"line":725,"column":17}},{"start":{"line":720,"column":16},"end":{"line":725,"column":17}}],"line":720}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":1,"10":1,"11":3,"12":3,"13":1,"14":1,"15":1,"16":3,"17":1,"18":1,"19":3,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":1},"f":{"0":1,"1":0,"2":1,"3":1,"4":3,"5":3,"6":1,"7":3,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},"b":{"0":[1,2],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0,0,0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/rutaCollection.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/rutaCollection.ts"],"names":[],"mappings":"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","sourcesContent":["import {Ruta} from \"./ruta\";\nimport {ID, coordenadas} from \"./types\";\nimport * as inquirer from \"inquirer\";\n\nimport { database } from \"./bd\";\n\n/**\n * Clase rutaCollection\n * @description Clase que representa una colección de rutas\n */\nexport class rutaCollection {\n  private coleccion_rutas_: Ruta[];\n  /**\n   * Constructor por defecto\n   * @param coleccion_rutas_ Array de rutas\n   */\n  constructor() {\n    this.leerBD();\n  }\n\n  /**\n   * Método que devuelve la colección de rutas\n   * @returns Colección de rutas\n   */\n  get getRutas(): Ruta[] {\n    return this.coleccion_rutas_;\n  } \n\n  /**\n   * Método que asigna la colección de rutas\n   * @param coleccion_rutas Colección de rutas\n   */\n  set setRutas(coleccion_rutas: Ruta[]) {\n    this.coleccion_rutas_ = coleccion_rutas;\n  }\n\n  /**\n   * Método que lee de la base de datos y actualiza el array de rutas\n   * @returns Array de ids de las rutas para las pruebas\n   */\n  leerBD(): ID[] {\n    const rutas = database.get(\"rutas\").value();\n    const array_aux: Ruta[] = [];\n    rutas.forEach((ruta) => {\n      const ruta_aux: Ruta = new Ruta(ruta.nombre, ruta.geolocalizacion_inicio, ruta.geolocalizacion_fin, ruta.longitud, ruta.desnivel, ruta.usuarios , ruta.tipo_actividad, ruta.calificacion);\n      array_aux.push(ruta_aux);\n    });\n    this.setRutas = array_aux;\n    const array_aux2: ID[] = [];\n    array_aux.forEach((ruta) => {\n      array_aux2.push(ruta.getId);\n    });\n    return array_aux2;\n  }\n\n  /**\n   * Metodo para borrar un elemento de la base de datos\n   * @param identificador Identificador del elemento a borrar\n   */\n  borrarElementoBD(identificador: ID): boolean{\n    this.coleccion_rutas_.forEach((ruta, indice) => {\n      if (ruta.getId == identificador) {\n        database.get(\"rutas\").splice(indice,1).write();\n        return true;\n      }\n    });\n    return false;\n  }\n\n  /**\n   * Método que borra una ruta de la colección de rutas y de la base de datos\n   * @param identificador Identificador de la ruta a borrar\n   * @returns Ruta eliminada o undefined en caso de que no existiera\n   */\n  borrarRuta(identificador: ID): Ruta | undefined {\n    let control_bool = false;\n    let ruta_aux: Ruta | undefined;\n\n    this.coleccion_rutas_.forEach((ruta, indice) => {\n\n      if (ruta.getId == identificador) {\n        ruta_aux = ruta;\n        this.coleccion_rutas_.splice(indice, 1);\n        control_bool = true;\n        database.get(\"rutas\").splice(indice,1).write();\n      }\n    });\n    if (control_bool) {\n      return ruta_aux;\n    }\n    else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Metodo para ejecutar el menú de rutas para borrar rutas de la base de datos\n   */\n  promptBorrarRuta(): void {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'id',\n        message: 'Elige la ruta a borrar',\n        choices: this.getRutas.map((ruta) => {\n          return {name: ruta.getNombre, value: ruta.getId};\n        }\n        )\n      }\n    ]).then((answers) => {\n      const ruta_aux: Ruta | undefined = this.borrarRuta(answers.id);\n      if (typeof ruta_aux != 'undefined') {\n        console.log('Ruta borrada: ' + ruta_aux.getId);\n      }\n      else { \n        console.log('La ruta no existe');\n      }\n      this.manageRutas();\n    });\n  }\n\n  /**\n   * Metodo para ejecutar el menú de rutas para modificar rutas de la base de datos\n   */\n  promptModificarRuta():void {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'id',\n        message: 'Elige la ruta a modificar',\n        choices: this.getRutas.map((ruta) => {\n          return {name: ruta.getNombre, value: ruta.getId};\n        })\n      }\n    ]).then((answers) => {\n      this.modificarRuta(answers.id);\n    });\n  }\n\n  /**\n   * Metodo para modificar una ruta\n   * @param identificador Id de la ruta a modificar\n   */\n  modificarRuta(identificador: ID): void {\n    let id_existe_en_coleccion = false;\n    let indice = -1;\n    this.coleccion_rutas_.forEach((ruta, index) => {\n      if (ruta.getId == identificador) {\n        id_existe_en_coleccion = true;\n        indice = index;\n      }\n    }\n    );\n    if (!id_existe_en_coleccion) {\n      console.log('No existe la ruta que se intenta modificar');\n      return;\n    }\n\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué quieres modificar?',\n        choices: [\n          {name:'Nombre', value: 'nombre'},\n          {name:'Geolocalización inicio', value: 'geolocalizacion_inicio'},\n          {name:'Geolocalización fin', value: 'geolocalizacion_fin'},\n          {name:'Longitud', value: 'longitud'},\n          {name:'Desnivel', value: 'desnivel'},\n          {name:'Usuario', value: 'usuario'},\n          {name:'Tipo de actividad', value: 'tipo_actividad'},\n          {name:'Calificacion', value: 'calificacion'}\n        ]\n      } \n    ]).then((answers) => {\n      const prompt = inquirer.createPromptModule();\n      const coordenadaX: coordenadas = {\n        letra: 'X',\n        coordenada: 0\n      }\n      const coordenadaY: coordenadas = {\n        letra: 'Y',\n        coordenada: 0\n      }\n      const coordenadaZ: coordenadas = {\n        letra: 'Z',\n        coordenada: 0\n      }\n      switch (answers.opcion) {\n        case 'nombre':\n          prompt([\n            {\n              type: 'input',\n              name: 'nombre2',\n              message: 'Introduce el nuevo nombre de la ruta',\n            }\n          ]).then((answers) => {\n            this.coleccion_rutas_[indice].setNombre = answers.nombre2;\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Ruta(this.coleccion_rutas_[indice].getNombre, this.coleccion_rutas_[indice].getGeolocalizacionInicio, this.coleccion_rutas_[indice].getGeolocalizacionFin, this.coleccion_rutas_[indice].getLongitud, this.coleccion_rutas_[indice].getDesnivel, this.coleccion_rutas_[indice].getUsuarios, this.coleccion_rutas_[indice].getTipoActividad, this.coleccion_rutas_[indice].getCalificacion, this.coleccion_rutas_[indice].getId);\n            this.coleccion_rutas_.push(ruta_aux);\n            this.coleccion_rutas_.splice(indice, 1);\n            this.manageRutas();\n          }\n          );\n          break;\n        case 'geolocalizacion_inicio':\n          prompt([\n            {\n              type: 'input',\n              name: 'x',\n              message: 'Introduce la coordenada x de la geolocalización de inicio',\n            },\n            {\n              type: 'input',\n              name: 'y',\n              message: 'Introduce la coordenada y de la geolocalización de inicio',\n            },\n            {\n              type: 'input',\n              name: 'z',\n              message: 'Introduce la coordenada z de la geolocalización de inicio',\n            }\n          ]).then((answers) => {\n            coordenadaX.coordenada = parseFloat(answers.x);\n            coordenadaY.coordenada = parseFloat(answers.y);\n            coordenadaZ.coordenada = parseFloat(answers.z);\n\n            this.coleccion_rutas_[indice].setGeolocalizacionInicio = [coordenadaX, coordenadaY, coordenadaZ];\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Ruta(this.coleccion_rutas_[indice].getNombre, this.coleccion_rutas_[indice].getGeolocalizacionInicio, this.coleccion_rutas_[indice].getGeolocalizacionFin, this.coleccion_rutas_[indice].getLongitud, this.coleccion_rutas_[indice].getDesnivel, this.coleccion_rutas_[indice].getUsuarios, this.coleccion_rutas_[indice].getTipoActividad, this.coleccion_rutas_[indice].getCalificacion, this.coleccion_rutas_[indice].getId);\n            this.coleccion_rutas_.push(ruta_aux);\n            this.coleccion_rutas_.splice(indice, 1);\n\n            this.manageRutas();\n          }\n          );\n          break;\n        case 'geolocalizacion_fin':\n          prompt([\n            {\n              type: 'input',\n              name: 'x',\n              message: 'Introduce la coordenada x de la geolocalización de fin',\n            },\n            {\n              type: 'input',\n              name: 'y',\n              message: 'Introduce la coordenada y de la geolocalización de fin',\n            },\n            {\n              type: 'input',\n              name: 'z',\n              message: 'Introduce la coordenada z de la geolocalización de fin',\n            }\n          ]).then((answers) => {\n            coordenadaX.coordenada = parseFloat(answers.x);\n            coordenadaY.coordenada = parseFloat(answers.y);\n            coordenadaZ.coordenada = parseFloat(answers.z);\n\n            this.coleccion_rutas_[indice].setGeolocalizacionFin = [coordenadaX, coordenadaY, coordenadaZ];\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Ruta(this.coleccion_rutas_[indice].getNombre, this.coleccion_rutas_[indice].getGeolocalizacionInicio, this.coleccion_rutas_[indice].getGeolocalizacionFin, this.coleccion_rutas_[indice].getLongitud, this.coleccion_rutas_[indice].getDesnivel, this.coleccion_rutas_[indice].getUsuarios, this.coleccion_rutas_[indice].getTipoActividad, this.coleccion_rutas_[indice].getCalificacion, this.coleccion_rutas_[indice].getId);\n            this.coleccion_rutas_.push(ruta_aux);\n            this.coleccion_rutas_.splice(indice, 1);\n            this.manageRutas();\n          }\n          );\n          break;\n        case 'longitud':\n          prompt([  \n            {\n              type: 'input',\n              name: 'longitud2',\n              message: 'Introduce la nueva longitud de la ruta',\n            }\n          ]).then((answers) => {\n            this.coleccion_rutas_[indice].setLongitud = answers.longitud2;\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Ruta(this.coleccion_rutas_[indice].getNombre, this.coleccion_rutas_[indice].getGeolocalizacionInicio, this.coleccion_rutas_[indice].getGeolocalizacionFin, this.coleccion_rutas_[indice].getLongitud, this.coleccion_rutas_[indice].getDesnivel, this.coleccion_rutas_[indice].getUsuarios, this.coleccion_rutas_[indice].getTipoActividad, this.coleccion_rutas_[indice].getCalificacion, this.coleccion_rutas_[indice].getId);\n            this.coleccion_rutas_.push(ruta_aux);\n            this.coleccion_rutas_.splice(indice, 1);\n            this.manageRutas();\n          }\n          );\n          break;\n        case 'desnivel':\n          prompt([\n            {\n              type: 'input',\n              name: 'desnivel2',\n              message: 'Introduce el nuevo desnivel de la ruta',\n            }\n          ]).then((answers) => {\n            this.coleccion_rutas_[indice].setDesnivel = answers.desnivel2;\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Ruta(this.coleccion_rutas_[indice].getNombre, this.coleccion_rutas_[indice].getGeolocalizacionInicio, this.coleccion_rutas_[indice].getGeolocalizacionFin, this.coleccion_rutas_[indice].getLongitud, this.coleccion_rutas_[indice].getDesnivel, this.coleccion_rutas_[indice].getUsuarios, this.coleccion_rutas_[indice].getTipoActividad, this.coleccion_rutas_[indice].getCalificacion, this.coleccion_rutas_[indice].getId);\n            this.coleccion_rutas_.push(ruta_aux);\n            this.coleccion_rutas_.splice(indice, 1);\n            this.manageRutas();\n          }\n          );\n          break;\n\n        case 'usuario':\n          prompt([\n            {\n              type: 'list',\n              name: 'usuarios',\n              message: '¿Qué quieres hacer con los usuarios?',\n              choices: [\n                'Añadir una nueva lista de usuarios',\n                'Eliminar un usuario',\n                'Añadir un nuevo usuario'\n              ]\n            }\n          ]).then((answers) => {\n            switch (answers.usuarios) {\n              case 'Añadir una nueva lista de usuarios':\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'usuario',\n                    message: 'Introduce los usuarios de la ruta separados por comas',\n                  }\n                ]).then((answers) => {\n                  this.coleccion_rutas_[indice].setUsuarios = answers.usuario.split(',');\n                  this.borrarElementoBD(identificador);\n                  const ruta_aux = new Ruta(this.coleccion_rutas_[indice].getNombre, this.coleccion_rutas_[indice].getGeolocalizacionInicio, this.coleccion_rutas_[indice].getGeolocalizacionFin, this.coleccion_rutas_[indice].getLongitud, this.coleccion_rutas_[indice].getDesnivel, this.coleccion_rutas_[indice].getUsuarios, this.coleccion_rutas_[indice].getTipoActividad, this.coleccion_rutas_[indice].getCalificacion, this.coleccion_rutas_[indice].getId);\n                  this.coleccion_rutas_.push(ruta_aux);\n                  this.coleccion_rutas_.splice(indice, 1);\n                  this.manageRutas();\n                });\n              break;\n\n              case 'Eliminar un usuario':\n                console.log(\"Usuarios de la ruta: \" + this.coleccion_rutas_[indice].getUsuarios);\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'usuario',\n                    message: 'Introduce el usuario que quieres eliminar',\n                  }\n                ]).then((answers) => {\n                  const usuarios = this.coleccion_rutas_[indice].getUsuarios;\n                  const indice_usuario = usuarios.indexOf(answers.usuario);\n                  usuarios.splice(indice_usuario, 1);\n                  this.coleccion_rutas_[indice].setUsuarios = usuarios;\n                  this.borrarElementoBD(identificador);\n                  const ruta_aux = new Ruta(this.coleccion_rutas_[indice].getNombre, this.coleccion_rutas_[indice].getGeolocalizacionInicio, this.coleccion_rutas_[indice].getGeolocalizacionFin, this.coleccion_rutas_[indice].getLongitud, this.coleccion_rutas_[indice].getDesnivel, this.coleccion_rutas_[indice].getUsuarios, this.coleccion_rutas_[indice].getTipoActividad, this.coleccion_rutas_[indice].getCalificacion, this.coleccion_rutas_[indice].getId);\n                  this.coleccion_rutas_.push(ruta_aux);\n                  this.coleccion_rutas_.splice(indice, 1);\n                  this.manageRutas();\n                });\n              break;\n\n              case 'Añadir un nuevo usuario':\n                console.log(\"Usuarios de la ruta: \" + this.coleccion_rutas_[indice].getUsuarios);\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'usuario',\n                    message: 'Introduce el usuario que quieres añadir',\n                  }\n                ]).then((answers) => {\n                  const usuarios = this.coleccion_rutas_[indice].getUsuarios;\n                  if (usuarios.indexOf(answers.usuario) != -1) {\n                    console.log(\"El usuario ya está en la lista\");\n                    this.manageRutas();\n                  }\n                  else  {\n                    usuarios.push(answers.usuario);\n                    this.coleccion_rutas_[indice].setUsuarios = usuarios;\n                    this.borrarElementoBD(identificador);\n                    const ruta_aux = new Ruta(this.coleccion_rutas_[indice].getNombre, this.coleccion_rutas_[indice].getGeolocalizacionInicio, this.coleccion_rutas_[indice].getGeolocalizacionFin, this.coleccion_rutas_[indice].getLongitud, this.coleccion_rutas_[indice].getDesnivel, this.coleccion_rutas_[indice].getUsuarios, this.coleccion_rutas_[indice].getTipoActividad, this.coleccion_rutas_[indice].getCalificacion, this.coleccion_rutas_[indice].getId);\n                    this.coleccion_rutas_.push(ruta_aux);\n                    this.coleccion_rutas_.splice(indice, 1);\n                    this.manageRutas();\n                  }\n                });\n              break;\n            }\n          });\n          break;\n\n        case 'tipo_actividad':\n          prompt([\n            {\n              type: 'list',\n              name: 'tipo_actividad2',\n              message: 'Introduce el nuevo tipo de actividad de la ruta',\n              choices: [\n                {name:'Correr', value: 'correr'},\n                {name:'Bicicleta', value: 'bicicleta'}\n              ]\n            }\n          ]).then((answers) => {\n            this.coleccion_rutas_[indice].setTipoActividad = answers.tipo_actividad2;\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Ruta(this.coleccion_rutas_[indice].getNombre, this.coleccion_rutas_[indice].getGeolocalizacionInicio, this.coleccion_rutas_[indice].getGeolocalizacionFin, this.coleccion_rutas_[indice].getLongitud, this.coleccion_rutas_[indice].getDesnivel, this.coleccion_rutas_[indice].getUsuarios, this.coleccion_rutas_[indice].getTipoActividad, this.coleccion_rutas_[indice].getCalificacion, this.coleccion_rutas_[indice].getId);\n            this.coleccion_rutas_.push(ruta_aux);\n            this.coleccion_rutas_.splice(indice, 1);\n            this.manageRutas();\n          });\n          break;\n        case 'calificacion':\n          prompt([\n            {\n              type: 'input',\n              name: 'calificacion2',\n              message: 'Introduce la nueva calificacion de la ruta',\n            }\n          ]).then((answers) => {\n            this.coleccion_rutas_[indice].setCalificacion = answers.calificacion2;\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Ruta(this.coleccion_rutas_[indice].getNombre, this.coleccion_rutas_[indice].getGeolocalizacionInicio, this.coleccion_rutas_[indice].getGeolocalizacionFin, this.coleccion_rutas_[indice].getLongitud, this.coleccion_rutas_[indice].getDesnivel, this.coleccion_rutas_[indice].getUsuarios, this.coleccion_rutas_[indice].getTipoActividad, this.coleccion_rutas_[indice].getCalificacion, this.coleccion_rutas_[indice].getId);\n            this.coleccion_rutas_.push(ruta_aux);\n            this.coleccion_rutas_.splice(indice, 1);\n            this.manageRutas();\n          }\n          );\n          break;\n      }\n    });\n  }\n\n  /**\n   * Método que maneja el menú para añadir una nueva ruta\n   */\n  promptAddRuta() {\n    const prompt = inquirer.createPromptModule();\n    let coordenadas_inicio = [];\n    let coordenadas_fin = [];\n    prompt([\n      {\n        type: 'input',\n        name: 'nombre',\n        message: 'Introduce el nombre de la nueva ruta',\n      },\n      {\n        type: 'input',\n        name: 'geolocalizacion_inicioX',\n        message: 'Introduce la geolocalización de inicio, X: ',\n      },\n      {\n        type: 'input',\n        name: 'geolocalizacion_inicioY',\n        message: 'Introduce la geolocalización de inicio, Y: ',\n      },\n      {\n        type: 'input',\n        name: 'geolocalizacion_inicioZ',\n        message: 'Introduce la geolocalización de inicio, Z: ',\n      },\n      {\n        type: 'input',\n        name: 'geolocalizacion_finX',\n        message: 'Introduce la geolocalización de fin, X: ',\n      },\n      {\n        type: 'input',\n        name: 'geolocalizacion_finY',\n        message: 'Introduce la geolocalización de fin, Y: ',\n      },\n      {\n        type: 'input',\n        name: 'geolocalizacion_finZ',\n        message: 'Introduce la geolocalización de fin, Z: ',\n      },\n      { \n        type: 'input',\n        name: 'longitud',\n        message: 'Introduce la longitud de la nueva ruta',\n      },\n      {\n        type: 'input',\n        name: 'desnivel',\n        message: 'Introduce el desnivel de la nueva ruta',\n      },\n      {\n        type: 'input',\n        name: 'usuario',\n        message: 'Introduce el usuario de la nueva ruta (de la forma \"id1,id2,...\"  las comas)',\n      },\n      {\n        type: 'list',\n        name: 'tipo_actividad',\n        message: 'Introduce el tipo de actividad de la nueva ruta',\n        choices: [\n          {name:'Correr', value: 'correr'},\n          {name:'Bicicleta', value: 'bicicleta'}\n        ]\n      },\n      {\n        type: 'input',\n        name: 'calificacion',\n        message: 'Introduce la calificacion de la nueva ruta',\n      }\n    ]).then((answers) => {\n      coordenadas_inicio = [answers.geolocalizacion_inicioX, answers.geolocalizacion_inicioY, answers.geolocalizacion_inicioZ];\n      coordenadas_fin = [answers.geolocalizacion_finX, answers.geolocalizacion_finY, answers.geolocalizacion_finZ];\n      const array_usuarios: ID[] = answers.usuario.split(',');\n      const nueva_ruta = new Ruta(answers.nombre, coordenadas_inicio, coordenadas_fin, answers.longitud, answers.desnivel, array_usuarios, answers.tipo_actividad, answers.calificacion);\n      this.coleccion_rutas_.push(nueva_ruta);\n      this.manageRutas();\n    });\n  }\n\n  /**\n   * Metodo que gestiona el prompt de la clase Ruta\n   */\n  manageRutas(): void {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: 'Manejo de Rutas, ¿qué quieres hacer?',\n        choices: [\n          {name:'Añadir ruta', value: 'add'},\n          {name:'Borrar ruta', value: 'remove'},\n          {name:'Modificar ruta', value: 'modify'},\n          {name:'Salir', value: 'Salir'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'add') {\n        this.promptAddRuta();\n      }\n      else if (answers.opcion === 'remove') {\n        this.promptBorrarRuta(); \n      }\n      else if (answers.opcion === 'modify') {\n        this.promptModificarRuta();\n      }\n      else if (answers.opcion === 'Salir') {\n        process.exit(0);\n      }\n    });\n  }\n\n  /**\n   * Método que muestra las rutas ordenadas por el criterio que se le pase\n   */\n  infoRutas(): void {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué deseas ver?',\n        choices: [\n          {name:'Mostrar por orden alfabético las rutas', value: 'alfabetico'},\n          {name:'Mostrar por cantidad de usuarios que realizan las rutas', value: 'cantidad_usuarios'},\n          {name:'Mostrar por longitud de la ruta', value: 'longitud'},\n          {name:'Mostrar por la calificación media de la ruta', value: 'calificacion'},\n          {name:'Mostrar por actividad (Correr o Bicicleta)', value: 'actividad'},\n          {name:'Salir', value: 'Salir'},\n        ]\n      }\n    ]).then((answers) => {\n      switch (answers.opcion) {\n        case 'alfabetico':\n          this.ordenarRutasPorNombre();\n          break;\n        case 'cantidad_usuarios':\n          this.ordenarRutasPorCantidadUsuarios();\n          break;\n        case 'longitud':\n          this.ordenarRutasPorLongitud();\n          break;\n        case 'calificacion':\n          this.ordenarRutasPorCalificacion();\n          break;\n        case 'actividad':\n          this.ordenarRutasPorActividad();\n          break;\n        case 'Salir':\n          process.exit(0);\n          break;\n      }\n    });\n  }\n\n  /**\n   * Método que ordena las rutas por nombre\n   */\n  ordenarRutasPorNombre() {\n    let ascendente = true;\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_rutas = this.coleccion_rutas_;\n      copia_rutas.sort((a, b) => {\n        if (ascendente) {\n          return a.getNombre.localeCompare(b.getNombre);\n        }\n        else {\n          return b.getNombre.localeCompare(a.getNombre);\n        }\n      });\n      copia_rutas.forEach((ruta) => {\n        console.log(`Nombre: ${ruta.getNombre}`);\n      });\n      this.infoRutas();\n    });\n  }\n\n  /**\n   * Método que ordena las rutas por cantidad de usuarios\n   */\n  ordenarRutasPorCantidadUsuarios(){\n    let ascendente = true;\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_rutas = this.coleccion_rutas_;\n      copia_rutas.sort((a, b) => {\n        if (ascendente) {\n          return a.getUsuarios.length - b.getUsuarios.length;\n        }\n        else {\n          return b.getUsuarios.length - a.getUsuarios.length;\n        }\n      }\n      );\n      copia_rutas.forEach((ruta) => {\n        console.log(`Nombre: ${ruta.getNombre}, Cantidad de usuarios: ${ruta.getUsuarios.length}`);\n      }\n      );\n      this.infoRutas();\n    });\n  }\n\n  /**\n   * Método que ordena las rutas por longitud\n   */\n  ordenarRutasPorLongitud(){\n    let ascendente = true;\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_rutas = this.coleccion_rutas_;\n      copia_rutas.sort((a, b) => {\n        if (ascendente) {\n          return a.getLongitud - b.getLongitud;\n        }\n        else {\n          return b.getLongitud - a.getLongitud;\n        }\n      });\n      copia_rutas.forEach((ruta) => {\n        console.log(`Nombre: ${ruta.getNombre}, Longitud: ${ruta.getLongitud}`);\n      });\n      this.infoRutas();\n    });\n  }\n\n  /**\n   * Método que ordena las rutas por calificación\n   */\n  ordenarRutasPorCalificacion(){\n    let ascendente = true;\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_rutas = this.coleccion_rutas_;\n      copia_rutas.sort((a, b) => {\n        if (ascendente) {\n          return a.getCalificacion - b.getCalificacion;\n        }\n        else {\n          return b.getCalificacion - a.getCalificacion;\n        }\n      });\n      copia_rutas.forEach((ruta) => {\n        console.log(`Nombre: ${ruta.getNombre}, Calificación: ${ruta.getCalificacion}`);\n      });\n      this.infoRutas();\n    });\n  }\n\n  /**\n   * Método que ordena las rutas por actividad\n   */\n  ordenarRutasPorActividad(){\n    let ascendente = true;\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_rutas = this.coleccion_rutas_;\n      copia_rutas.sort((a, b) => {\n        if (ascendente) {\n          return a.getTipoActividad.localeCompare(b.getTipoActividad);\n        }\n        else {\n          return b.getTipoActividad.localeCompare(a.getTipoActividad);\n        }\n      });\n      copia_rutas.forEach((ruta) => {\n        console.log(`Nombre: ${ruta.getNombre}, Actividad: ${ruta.getTipoActividad}`);\n      });\n      this.infoRutas();\n    });\n  }\n}\n\n// const eje_x0:coordenadas = {\n//   letra : \"X\",\n//   coordenada : 10\n// }\n// const eje_y0: coordenadas = {\n//   letra : \"Y\",\n//   coordenada : 20\n// }\n// const eje_z0: coordenadas = {\n//   letra : \"Z\",\n//   coordenada : 30\n// }\n\n\n// const eje_x1:coordenadas = {\n//   letra : \"X\",\n//   coordenada : 12435\n// }\n// const eje_y1: coordenadas = {\n//   letra : \"Y\",\n//   coordenada : 1234325436\n// }\n// const eje_z1: coordenadas = {\n//   letra : \"Z\",\n//   coordenada : 1232\n// }\n\n\n// const eje_x2:coordenadas = {\n//   letra : \"X\",\n//   coordenada : 214\n// }\n// const eje_y2: coordenadas = {\n//   letra : \"Y\",\n//   coordenada : 20213\n// }\n// const eje_z2: coordenadas = {\n//   letra : \"Z\",\n//   coordenada : 3023\n// }\n\n// const eje_x3:coordenadas = {\n//   letra : \"X\",\n//   coordenada : 10\n// }\n// const eje_y3: coordenadas = {\n//   letra : \"Y\",\n//   coordenada : 20\n// }\n// const eje_z3: coordenadas = {\n//   letra : \"Z\",\n//   coordenada : 30\n// }\n\n\n// const eje_x4:coordenadas = {\n//   letra : \"X\",\n//   coordenada : 1010\n// }\n// const eje_y4: coordenadas = {\n//   letra : \"Y\",\n//   coordenada : 2020\n// }\n// const eje_z4: coordenadas = {\n//   letra : \"Z\",\n//   coordenada : 3030\n// }\n\n\n// const eje_x5:coordenadas = {\n//   letra : \"X\",\n//   coordenada : 1001\n// }\n// const eje_y5: coordenadas = {\n//   letra : \"Y\",\n//   coordenada : 2002\n// }\n// const eje_z5: coordenadas = {\n//   letra : \"Z\",\n//   coordenada : 3003\n// }\n\n// const eje_x6:coordenadas = {\n//   letra : \"X\",\n//   coordenada : 101010\n// }\n// const eje_y6: coordenadas = {\n//   letra : \"Y\",\n//   coordenada : 202020\n// }\n// const eje_z6: coordenadas = {\n//   letra : \"Z\",\n//   coordenada : 3030330\n// }\n\n\n// const eje_x7:coordenadas = {\n//   letra : \"X\",\n//   coordenada : 1001010110\n// }\n// const eje_y7: coordenadas = {\n//   letra : \"Y\",\n//   coordenada : 2020202020\n// }\n// const eje_z7: coordenadas = {\n//   letra : \"Z\",\n//   coordenada : 303403030\n// }\n\n\n// const eje_x8:coordenadas = {\n//   letra : \"X\",\n//   coordenada : 101231\n// }\n// const eje_y8: coordenadas = {\n//   letra : \"Y\",\n//   coordenada : 2021314\n// }\n// const eje_z8: coordenadas = {\n//   letra : \"Z\",\n//   coordenada : 301324\n// }\n\n\n// const eje_x9:coordenadas = {\n//   letra : \"X\",\n//   coordenada : 10000001\n// }\n// const eje_y9: coordenadas = {\n//   letra : \"Y\",\n//   coordenada : 202020202\n// }\n// const eje_z9: coordenadas = {\n//   letra : \"Z\",\n//   coordenada : 30000003\n// }\n\n// const ruta0 = new Ruta('San Vicente', [eje_x0, eje_y0, eje_z0], [eje_x1, eje_y1, eje_z1], 1000, 200, [1,2,3], \"correr\", 9);\n// const ruta1 = new Ruta('Plaza el charco', [eje_x2, eje_y2, eje_z2], [eje_x3, eje_y3, eje_z3], 2000, 200, [2,3 ,4 ], \"bicicleta\", 8);\n// const ruta2 = new Ruta('Adventour', [eje_x4, eje_y4, eje_z4], [eje_x5, eje_y5, eje_z5], 300, 200, [6,7,8], \"correr\", 8);\n// const ruta3 = new Ruta('Hop-On Hop-off', [eje_x6, eje_y6, eje_z6], [eje_x7, eje_y7, eje_z7], 400, 200, [9,10,11], \"bicicleta\", 5);\n// const ruta4 = new Ruta('Mind the Gap', [eje_x8, eje_y8, eje_z8], [eje_x9, eje_y9, eje_z9], 5000, 200, [12,13,14], \"correr\", 6);\n// const ruta5 = new Ruta('City Sightseeing', [eje_x0, eje_y0, eje_z0], [eje_x9, eje_y9, eje_z9], 6100, 200, [15,16,17], \"bicicleta\", 7);\n// const ruta6 = new Ruta('La ruta real', [eje_x2, eje_y2, eje_z2], [eje_x7, eje_y7, eje_z7], 1200, 200, [18,19], \"correr\", 5);\n// const ruta7 = new Ruta('Keep Calm and travel On', [eje_x4, eje_y4, eje_z4], [eje_x1, eje_y1, eje_z1], 3100, 200, [1,2,3], \"bicicleta\", 1);\n// const ruta8 = new Ruta('Wander Rush', [eje_x6, eje_y6, eje_z6], [eje_x3, eje_y3, eje_z3], 1040, 200, [5,6,7], \"correr\", 9);\n// const ruta9 = new Ruta('My BigFat City Tour', [eje_x8, eje_y8, eje_z8], [eje_x5, eje_y5, eje_z5], 1000, 200, [8,7,6], \"bicicleta\", 10);"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4a8d5f81629d3354980e45bfd47c33cdc5d529c6","contentHash":"0e40d2df974d605fafc3edb4362ebabc0f49bae041a0c3e25c0fdc19df50604b"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuario.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuario.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":28}},"3":{"start":{"line":32,"column":8},"end":{"line":32,"column":30}},"4":{"start":{"line":33,"column":8},"end":{"line":33,"column":36}},"5":{"start":{"line":34,"column":8},"end":{"line":34,"column":30}},"6":{"start":{"line":35,"column":8},"end":{"line":35,"column":45}},"7":{"start":{"line":36,"column":8},"end":{"line":36,"column":28}},"8":{"start":{"line":37,"column":8},"end":{"line":37,"column":47}},"9":{"start":{"line":38,"column":8},"end":{"line":38,"column":37}},"10":{"start":{"line":39,"column":8},"end":{"line":39,"column":42}},"11":{"start":{"line":40,"column":26},"end":{"line":40,"column":77}},"12":{"start":{"line":41,"column":8},"end":{"line":69,"column":9}},"13":{"start":{"line":42,"column":12},"end":{"line":42,"column":95}},"14":{"start":{"line":45,"column":12},"end":{"line":57,"column":13}},"15":{"start":{"line":46,"column":16},"end":{"line":46,"column":30}},"16":{"start":{"line":49,"column":34},"end":{"line":49,"column":81}},"17":{"start":{"line":50,"column":16},"end":{"line":50,"column":48}},"18":{"start":{"line":50,"column":41},"end":{"line":50,"column":46}},"19":{"start":{"line":51,"column":16},"end":{"line":56,"column":17}},"20":{"start":{"line":52,"column":20},"end":{"line":52,"column":33}},"21":{"start":{"line":55,"column":20},"end":{"line":55,"column":67}},"22":{"start":{"line":58,"column":12},"end":{"line":68,"column":23}},"23":{"start":{"line":77,"column":8},"end":{"line":77,"column":24}},"24":{"start":{"line":84,"column":8},"end":{"line":84,"column":28}},"25":{"start":{"line":91,"column":8},"end":{"line":91,"column":31}},"26":{"start":{"line":98,"column":8},"end":{"line":98,"column":28}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":37}},"28":{"start":{"line":112,"column":8},"end":{"line":112,"column":34}},"29":{"start":{"line":119,"column":8},"end":{"line":119,"column":36}},"30":{"start":{"line":126,"column":8},"end":{"line":126,"column":27}},"31":{"start":{"line":133,"column":8},"end":{"line":133,"column":36}},"32":{"start":{"line":141,"column":8},"end":{"line":141,"column":22}},"33":{"start":{"line":148,"column":8},"end":{"line":148,"column":30}},"34":{"start":{"line":155,"column":8},"end":{"line":155,"column":36}},"35":{"start":{"line":162,"column":8},"end":{"line":162,"column":30}},"36":{"start":{"line":169,"column":8},"end":{"line":169,"column":38}},"37":{"start":{"line":176,"column":8},"end":{"line":176,"column":42}},"38":{"start":{"line":183,"column":8},"end":{"line":183,"column":46}},"39":{"start":{"line":190,"column":8},"end":{"line":190,"column":28}},"40":{"start":{"line":197,"column":8},"end":{"line":197,"column":46}},"41":{"start":{"line":203,"column":26},"end":{"line":203,"column":46}},"42":{"start":{"line":204,"column":25},"end":{"line":204,"column":27}},"43":{"start":{"line":205,"column":22},"end":{"line":205,"column":24}},"44":{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},"45":{"start":{"line":206,"column":21},"end":{"line":206,"column":22}},"46":{"start":{"line":207,"column":12},"end":{"line":207,"column":40}},"47":{"start":{"line":209,"column":8},"end":{"line":209,"column":36}},"48":{"start":{"line":209,"column":29},"end":{"line":209,"column":34}},"49":{"start":{"line":210,"column":19},"end":{"line":210,"column":20}},"50":{"start":{"line":211,"column":8},"end":{"line":221,"column":9}},"51":{"start":{"line":211,"column":21},"end":{"line":211,"column":22}},"52":{"start":{"line":212,"column":12},"end":{"line":220,"column":13}},"53":{"start":{"line":213,"column":16},"end":{"line":213,"column":23}},"54":{"start":{"line":216,"column":16},"end":{"line":218,"column":17}},"55":{"start":{"line":217,"column":20},"end":{"line":217,"column":44}},"56":{"start":{"line":219,"column":16},"end":{"line":219,"column":25}},"57":{"start":{"line":222,"column":8},"end":{"line":222,"column":42}},"58":{"start":{"line":229,"column":26},"end":{"line":229,"column":46}},"59":{"start":{"line":230,"column":24},"end":{"line":230,"column":25}},"60":{"start":{"line":231,"column":8},"end":{"line":234,"column":9}},"61":{"start":{"line":231,"column":21},"end":{"line":231,"column":22}},"62":{"start":{"line":232,"column":25},"end":{"line":232,"column":89}},"63":{"start":{"line":233,"column":12},"end":{"line":233,"column":39}},"64":{"start":{"line":235,"column":8},"end":{"line":235,"column":25}},"65":{"start":{"line":238,"column":0},"end":{"line":238,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":99},"end":{"line":70,"column":5}},"line":31},"1":{"name":"(anonymous_1)","decl":{"start":{"line":50,"column":31},"end":{"line":50,"column":32}},"loc":{"start":{"line":50,"column":41},"end":{"line":50,"column":46}},"line":50},"2":{"name":"(anonymous_2)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":16},"end":{"line":78,"column":5}},"line":76},"3":{"name":"(anonymous_3)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":20},"end":{"line":85,"column":5}},"line":83},"4":{"name":"(anonymous_4)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":23},"end":{"line":92,"column":5}},"line":90},"5":{"name":"(anonymous_5)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":20},"end":{"line":99,"column":5}},"line":97},"6":{"name":"(anonymous_6)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":25},"end":{"line":106,"column":5}},"line":104},"7":{"name":"(anonymous_7)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":26},"end":{"line":113,"column":5}},"line":111},"8":{"name":"(anonymous_8)","decl":{"start":{"line":118,"column":4},"end":{"line":118,"column":5}},"loc":{"start":{"line":118,"column":28},"end":{"line":120,"column":5}},"line":118},"9":{"name":"(anonymous_9)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":19},"end":{"line":127,"column":5}},"line":125},"10":{"name":"(anonymous_10)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":28},"end":{"line":134,"column":5}},"line":132},"11":{"name":"(anonymous_11)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":18},"end":{"line":142,"column":5}},"line":140},"12":{"name":"(anonymous_12)","decl":{"start":{"line":147,"column":4},"end":{"line":147,"column":5}},"loc":{"start":{"line":147,"column":26},"end":{"line":149,"column":5}},"line":147},"13":{"name":"(anonymous_13)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":32},"end":{"line":156,"column":5}},"line":154},"14":{"name":"(anonymous_14)","decl":{"start":{"line":161,"column":4},"end":{"line":161,"column":5}},"loc":{"start":{"line":161,"column":26},"end":{"line":163,"column":5}},"line":161},"15":{"name":"(anonymous_15)","decl":{"start":{"line":168,"column":4},"end":{"line":168,"column":5}},"loc":{"start":{"line":168,"column":30},"end":{"line":170,"column":5}},"line":168},"16":{"name":"(anonymous_16)","decl":{"start":{"line":175,"column":4},"end":{"line":175,"column":5}},"loc":{"start":{"line":175,"column":38},"end":{"line":177,"column":5}},"line":175},"17":{"name":"(anonymous_17)","decl":{"start":{"line":182,"column":4},"end":{"line":182,"column":5}},"loc":{"start":{"line":182,"column":42},"end":{"line":184,"column":5}},"line":182},"18":{"name":"(anonymous_18)","decl":{"start":{"line":189,"column":4},"end":{"line":189,"column":5}},"loc":{"start":{"line":189,"column":24},"end":{"line":191,"column":5}},"line":189},"19":{"name":"(anonymous_19)","decl":{"start":{"line":196,"column":4},"end":{"line":196,"column":5}},"loc":{"start":{"line":196,"column":42},"end":{"line":198,"column":5}},"line":196},"20":{"name":"(anonymous_20)","decl":{"start":{"line":202,"column":4},"end":{"line":202,"column":5}},"loc":{"start":{"line":202,"column":28},"end":{"line":223,"column":5}},"line":202},"21":{"name":"(anonymous_21)","decl":{"start":{"line":209,"column":19},"end":{"line":209,"column":20}},"loc":{"start":{"line":209,"column":29},"end":{"line":209,"column":34}},"line":209},"22":{"name":"(anonymous_22)","decl":{"start":{"line":228,"column":4},"end":{"line":228,"column":5}},"loc":{"start":{"line":228,"column":19},"end":{"line":236,"column":5}},"line":228}},"branchMap":{"0":{"loc":{"start":{"line":41,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":69,"column":9}},{"start":{"line":41,"column":8},"end":{"line":69,"column":9}}],"line":41},"1":{"loc":{"start":{"line":45,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":57,"column":13}},{"start":{"line":45,"column":12},"end":{"line":57,"column":13}}],"line":45},"2":{"loc":{"start":{"line":51,"column":16},"end":{"line":56,"column":17}},"type":"if","locations":[{"start":{"line":51,"column":16},"end":{"line":56,"column":17}},{"start":{"line":51,"column":16},"end":{"line":56,"column":17}}],"line":51},"3":{"loc":{"start":{"line":212,"column":12},"end":{"line":220,"column":13}},"type":"if","locations":[{"start":{"line":212,"column":12},"end":{"line":220,"column":13}},{"start":{"line":212,"column":12},"end":{"line":220,"column":13}}],"line":212},"4":{"loc":{"start":{"line":216,"column":16},"end":{"line":218,"column":17}},"type":"if","locations":[{"start":{"line":216,"column":16},"end":{"line":218,"column":17}},{"start":{"line":216,"column":16},"end":{"line":218,"column":17}}],"line":216}},"s":{"0":1,"1":1,"2":1,"3":13,"4":13,"5":13,"6":13,"7":13,"8":13,"9":13,"10":13,"11":13,"12":13,"13":12,"14":1,"15":0,"16":1,"17":1,"18":18,"19":1,"20":0,"21":1,"22":1,"23":13,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":14,"39":1,"40":1,"41":13,"42":13,"43":13,"44":13,"45":13,"46":45,"47":13,"48":23,"49":13,"50":13,"51":13,"52":45,"53":11,"54":34,"55":0,"56":34,"57":13,"58":1,"59":1,"60":1,"61":1,"62":2,"63":2,"64":1,"65":1},"f":{"0":13,"1":18,"2":13,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":14,"18":1,"19":1,"20":13,"21":23,"22":1},"b":{"0":[12,1],"1":[0,1],"2":[0,1],"3":[11,34],"4":[0,34]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuario.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuario.ts"],"names":[],"mappings":"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","sourcesContent":["import { actividad, ID, estadisticaEntrenamiento, historicoRutas } from \"./types\";\n\nimport { database } from \"./bd\";\n\n/**\n * @class Usuario\n * @description Clase que representa un usuario\n */\nexport class Usuario {\n  private id_: ID;\n  private nombre_: string;\n  private actividad_: actividad;\n  private amigos_: ID[];\n  private grupo_de_amigos_: ID[][];\n  private estadisticas_: estadisticaEntrenamiento;\n  private rutasFavoritas_: ID[];\n  private retos_: ID[];\n  private historicoRutas_: historicoRutas[];\n\n  /**\n   * @constructor\n   * @param nombre Nombre del usuario \n   * @param actividad Actividad del usuario\n   * @param amigos Amigos del usuario\n   * @param grupo_amigos Grupo de amigos del usuario\n   * @param estadisticas Estadisticas del usuario\n   * @param historico_rutas Histórico de rutas del usuario\n   * @param retos Retos del usuario\n   * @param id Id del usuario\n   * @description Constructor de la clase Usuario\n   */\n  constructor(nombre: string, actividad: actividad, amigos: ID[], grupo_amigos: ID[][], estadisticas: estadisticaEntrenamiento ,historico_rutas: historicoRutas[], retos: ID[], id?: ID) {\n    this.nombre_ = nombre;\n    this.actividad_ = actividad;\n    this.amigos_ = amigos;\n    this.grupo_de_amigos_ = grupo_amigos;\n    this.retos_ = retos;\n    this.historicoRutas_ = historico_rutas;\n    this.obtenerRutasFavoritas();\n    this.estadisticas_ = estadisticas;\n\n    const id_global = database.get(\"usuarios\").map(\"nombre\").value();\n    if (id_global.includes(this.nombre_)) {\n      this.id_ = database.get(\"usuarios\").find({ nombre: this.nombre_ }).value().id;\n    }\n    else {\n      if (id !== undefined) {\n        this.id_ = id;\n      }\n      else {\n        const id_global = database.get(\"usuarios\").map(\"id\").value();\n        id_global.sort((a, b) => a - b);\n        if (id_global.length === 0) {\n          this.id_ = 1;\n        }\n        else {\n          this.id_ = id_global[id_global.length - 1] + 1;\n        }\n      }\n      database.get(\"usuarios\").push(\n        {\n          id: this.id_,\n          nombre: this.nombre_,\n          actividad: this.actividad_,\n          amigos: this.amigos_,\n          grupo_de_amigos: this.grupo_de_amigos_,\n          estadisticas: this.estadisticas_,\n          rutasFavoritas: this.rutasFavoritas_,\n          retos: this.retos_,\n          historicoRutas: this.historicoRutas_\n        }\n      ).write();\n    }\n  }\n\n  // Getters\n\n  /**\n   * Método que devuelve el id del usuario\n   * @returns Id del usuario\n   */\n  get getID(): ID {\n    return this.id_;\n  }\n\n  /**\n   * Método que devuelve el nombre del usuario\n   * @returns Nombre del usuario\n   */\n  get getNombre(): string {\n    return this.nombre_;\n  }\n\n  /**\n   * Método que devuelve la actividad del usuario\n   * @returns Actividad del usuario\n   */\n  get getActividad(): actividad {\n    return this.actividad_;\n  }\n\n  /**\n   * Método que devuelve los amigos del usuario\n   * @returns Amigos del usuario\n   */\n  get getAmigos(): ID[] {\n    return this.amigos_;\n  }\n\n  /**\n   * Método que devuelve el grupo de amigos del usuario\n   * @returns Grupo de amigos del usuario\n   */\n  get getGrupoAmigos(): ID[][] {\n    return this.grupo_de_amigos_;\n  }\n\n  /**\n   * Método que devuelve las estadísticas del usuario\n   * @returns Estadísticas del usuario\n   */\n  get getEstadisticas(): estadisticaEntrenamiento {\n    return this.estadisticas_;\n  }\n\n  /**\n   * Método que devuelve las rutas favoritas del usuario\n   * @returns Rutas favoritas del usuario\n   */\n  get getRutasFavoritas(): ID[] {\n    return this.rutasFavoritas_;\n  }\n\n  /**\n   * Método que devuelve los retos del usuario\n   * @returns Retos del usuario\n   */\n  get getRetos(): ID[] {\n    return this.retos_;\n  }\n\n  /**\n   * Método que devuelve el historico de rutas del usuario\n   * @returns -- historico de rutas del usuario\n   */\n  get getHistoricoRutas(): historicoRutas[] {\n    return this.historicoRutas_;\n  }\n\n  // Setters\n\n  /**\n   * Método que modifica el id del usuario\n   * @param id -- nuevo id del usuario\n   */\n    set setID(id: ID) {\n      this.id_ = id;\n    }\n\n  /**\n   * Método que modifica el nombre del usuario\n   * @param nombre -- nuevo nombre del usuario\n   */\n  set setNombre(nombre: string) {\n    this.nombre_ = nombre;\n  }\n\n  /**\n   * Método que modifica la actividad del usuario\n   * @param actividad -- nueva actividad del usuario\n   */\n  set setActividad(actividad: actividad) {\n    this.actividad_ = actividad;\n  }\n\n  /**\n   * Método que modifica los amigos del usuario\n   * @param amigos -- nuevos amigos del usuario\n   */\n  set setAmigos(amigos: ID[]) {\n    this.amigos_ = amigos;\n  }\n\n  /**\n   * Método que modifica el grupo de amigos del usuario\n   * @param grupo -- nuevo grupo de amigos del usuario\n   */\n  set setGrupoAmigos(grupo: ID[][]) {\n    this.grupo_de_amigos_ = grupo;\n  }\n\n  /**\n   * Método que modifica las estadísticas del usuario\n   * @param estadisticas -- nuevas estadísticas del usuario\n   */\n  set setEstadisticas(estadisticas: estadisticaEntrenamiento) {\n    this.estadisticas_ = estadisticas;\n  }\n\n  /**\n   * Método que modifica las rutas favoritas del usuario\n   * @param rutasFavoritas -- nuevas rutas favoritas del usuario\n   */\n  set setRutasFavoritas(rutasFavoritas: ID[]) {\n    this.rutasFavoritas_ = rutasFavoritas;\n  }\n\n  /**\n   * Método que modifica los retos del usuario\n   * @param retos -- nuevos retos del usuario\n   */\n  set setRetos(retos: ID[]) {\n    this.retos_ = retos;\n  }\n\n  /**\n   * Método que modifica el historico de rutas del usuario\n   * @param historicoRutas -- nuevo historico de rutas del usuario\n   */\n  set setHistoricoRutas(historicoRutas: historicoRutas[]) {\n    this.historicoRutas_ = historicoRutas;\n  }\n\n  /**\n   * Método que calcula las rutas favoritas del usuario\n   */\n  obtenerRutasFavoritas(): void {\n    const historico = this.historicoRutas_;\n    const rutasFav = [];\n    const rutas = [];\n    for (let i = 0; i < historico.length; i++) {\n      rutas.push(historico[i].id);\n    } \n    rutas.sort((a, b) => a - b);\n    let cont = 1;\n    for (let i = 0; i < rutas.length; i++) {\n      if (rutas[i] == rutas[i + 1]) {\n        cont++;\n      } \n      else {\n        if (cont > 2) {\n          rutasFav.push(rutas[i]);\n        }\n        cont = 1;\n      }\n    }\n    this.setRutasFavoritas = rutasFav;\n  }\n\n  /**\n   * Método que devuelve el número de km totales recorridos por el usuario\n   * @returns número de km totales recorridos por el usuario\n   */\n  getKMTotales(): number {\n    const historico = this.historicoRutas_;\n    let kmTotales = 0;\n    for (let i = 0; i < historico.length; i++) {\n      const ruta = database.get('rutas').find({ id: historico[i].id }).value();\n      kmTotales += ruta.longitud;\n    }\n    return kmTotales;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"832d9b72ea17857a8d3a645ad9ae14a18ce703f0","contentHash":"371496ad6a58e87badfb466a81aaf09ad6c37d25c8395d19b9fdc367870f9078"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuarioCollection.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuarioCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":36}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":28}},"5":{"start":{"line":13,"column":15},"end":{"line":13,"column":17}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":22}},"7":{"start":{"line":24,"column":29},"end":{"line":24,"column":66}},"8":{"start":{"line":25,"column":26},"end":{"line":25,"column":28}},"9":{"start":{"line":26,"column":8},"end":{"line":29,"column":11}},"10":{"start":{"line":27,"column":29},"end":{"line":27,"column":175}},"11":{"start":{"line":28,"column":12},"end":{"line":28,"column":37}},"12":{"start":{"line":30,"column":8},"end":{"line":30,"column":37}},"13":{"start":{"line":36,"column":23},"end":{"line":36,"column":52}},"14":{"start":{"line":37,"column":8},"end":{"line":63,"column":11}},"15":{"start":{"line":50,"column":12},"end":{"line":62,"column":13}},"16":{"start":{"line":51,"column":16},"end":{"line":51,"column":37}},"17":{"start":{"line":53,"column":17},"end":{"line":62,"column":13}},"18":{"start":{"line":54,"column":16},"end":{"line":54,"column":40}},"19":{"start":{"line":56,"column":17},"end":{"line":62,"column":13}},"20":{"start":{"line":57,"column":16},"end":{"line":57,"column":43}},"21":{"start":{"line":59,"column":17},"end":{"line":62,"column":13}},"22":{"start":{"line":61,"column":16},"end":{"line":61,"column":32}},"23":{"start":{"line":69,"column":23},"end":{"line":69,"column":52}},"24":{"start":{"line":70,"column":8},"end":{"line":82,"column":11}},"25":{"start":{"line":76,"column":20},"end":{"line":76,"column":71}},"26":{"start":{"line":80,"column":12},"end":{"line":80,"column":47}},"27":{"start":{"line":81,"column":12},"end":{"line":81,"column":34}},"28":{"start":{"line":89,"column":27},"end":{"line":89,"column":32}},"29":{"start":{"line":90,"column":8},"end":{"line":96,"column":11}},"30":{"start":{"line":91,"column":12},"end":{"line":95,"column":13}},"31":{"start":{"line":92,"column":16},"end":{"line":92,"column":48}},"32":{"start":{"line":93,"column":16},"end":{"line":93,"column":36}},"33":{"start":{"line":94,"column":16},"end":{"line":94,"column":72}},"34":{"start":{"line":97,"column":8},"end":{"line":102,"column":9}},"35":{"start":{"line":98,"column":12},"end":{"line":98,"column":43}},"36":{"start":{"line":101,"column":12},"end":{"line":101,"column":58}},"37":{"start":{"line":108,"column":23},"end":{"line":108,"column":52}},"38":{"start":{"line":109,"column":8},"end":{"line":179,"column":11}},"39":{"start":{"line":160,"column":31},"end":{"line":160,"column":56}},"40":{"start":{"line":161,"column":39},"end":{"line":161,"column":72}},"41":{"start":{"line":162,"column":30},"end":{"line":162,"column":54}},"42":{"start":{"line":163,"column":31},"end":{"line":163,"column":65}},"43":{"start":{"line":164,"column":37},"end":{"line":164,"column":39}},"44":{"start":{"line":165,"column":12},"end":{"line":165,"column":68}},"45":{"start":{"line":166,"column":12},"end":{"line":166,"column":68}},"46":{"start":{"line":167,"column":12},"end":{"line":167,"column":68}},"47":{"start":{"line":168,"column":25},"end":{"line":168,"column":109}},"48":{"start":{"line":169,"column":25},"end":{"line":169,"column":109}},"49":{"start":{"line":170,"column":25},"end":{"line":170,"column":109}},"50":{"start":{"line":171,"column":33},"end":{"line":175,"column":13}},"51":{"start":{"line":176,"column":29},"end":{"line":176,"column":154}},"52":{"start":{"line":177,"column":12},"end":{"line":177,"column":41}},"53":{"start":{"line":178,"column":12},"end":{"line":178,"column":34}},"54":{"start":{"line":185,"column":23},"end":{"line":185,"column":52}},"55":{"start":{"line":186,"column":8},"end":{"line":197,"column":11}},"56":{"start":{"line":192,"column":20},"end":{"line":192,"column":71}},"57":{"start":{"line":196,"column":12},"end":{"line":196,"column":50}},"58":{"start":{"line":204,"column":8},"end":{"line":209,"column":11}},"59":{"start":{"line":205,"column":12},"end":{"line":208,"column":13}},"60":{"start":{"line":206,"column":16},"end":{"line":206,"column":72}},"61":{"start":{"line":207,"column":16},"end":{"line":207,"column":28}},"62":{"start":{"line":210,"column":8},"end":{"line":210,"column":21}},"63":{"start":{"line":218,"column":37},"end":{"line":218,"column":42}},"64":{"start":{"line":219,"column":21},"end":{"line":219,"column":23}},"65":{"start":{"line":220,"column":8},"end":{"line":225,"column":11}},"66":{"start":{"line":221,"column":12},"end":{"line":224,"column":13}},"67":{"start":{"line":222,"column":16},"end":{"line":222,"column":46}},"68":{"start":{"line":223,"column":16},"end":{"line":223,"column":31}},"69":{"start":{"line":226,"column":8},"end":{"line":229,"column":9}},"70":{"start":{"line":227,"column":12},"end":{"line":227,"column":70}},"71":{"start":{"line":228,"column":12},"end":{"line":228,"column":19}},"72":{"start":{"line":230,"column":23},"end":{"line":230,"column":52}},"73":{"start":{"line":231,"column":8},"end":{"line":563,"column":11}},"74":{"start":{"line":247,"column":12},"end":{"line":562,"column":13}},"75":{"start":{"line":249,"column":20},"end":{"line":262,"column":23}},"76":{"start":{"line":256,"column":24},"end":{"line":256,"column":74}},"77":{"start":{"line":257,"column":24},"end":{"line":257,"column":61}},"78":{"start":{"line":258,"column":41},"end":{"line":258,"column":343}},"79":{"start":{"line":259,"column":24},"end":{"line":259,"column":53}},"80":{"start":{"line":260,"column":24},"end":{"line":260,"column":56}},"81":{"start":{"line":261,"column":24},"end":{"line":261,"column":46}},"82":{"start":{"line":263,"column":20},"end":{"line":263,"column":26}},"83":{"start":{"line":265,"column":20},"end":{"line":282,"column":23}},"84":{"start":{"line":276,"column":24},"end":{"line":276,"column":79}},"85":{"start":{"line":277,"column":24},"end":{"line":277,"column":61}},"86":{"start":{"line":278,"column":41},"end":{"line":278,"column":343}},"87":{"start":{"line":279,"column":24},"end":{"line":279,"column":53}},"88":{"start":{"line":280,"column":24},"end":{"line":280,"column":56}},"89":{"start":{"line":281,"column":24},"end":{"line":281,"column":46}},"90":{"start":{"line":283,"column":20},"end":{"line":283,"column":26}},"91":{"start":{"line":285,"column":20},"end":{"line":352,"column":23}},"92":{"start":{"line":297,"column":24},"end":{"line":351,"column":25}},"93":{"start":{"line":299,"column":32},"end":{"line":312,"column":35}},"94":{"start":{"line":306,"column":36},"end":{"line":306,"column":124}},"95":{"start":{"line":307,"column":36},"end":{"line":307,"column":73}},"96":{"start":{"line":308,"column":53},"end":{"line":308,"column":355}},"97":{"start":{"line":309,"column":36},"end":{"line":309,"column":65}},"98":{"start":{"line":310,"column":36},"end":{"line":310,"column":68}},"99":{"start":{"line":311,"column":36},"end":{"line":311,"column":58}},"100":{"start":{"line":313,"column":32},"end":{"line":313,"column":38}},"101":{"start":{"line":315,"column":32},"end":{"line":333,"column":35}},"102":{"start":{"line":321,"column":44},"end":{"line":321,"column":81}},"103":{"start":{"line":325,"column":36},"end":{"line":327,"column":39}},"104":{"start":{"line":326,"column":40},"end":{"line":326,"column":67}},"105":{"start":{"line":328,"column":36},"end":{"line":328,"column":73}},"106":{"start":{"line":329,"column":53},"end":{"line":329,"column":355}},"107":{"start":{"line":330,"column":36},"end":{"line":330,"column":65}},"108":{"start":{"line":331,"column":36},"end":{"line":331,"column":68}},"109":{"start":{"line":332,"column":36},"end":{"line":332,"column":58}},"110":{"start":{"line":334,"column":32},"end":{"line":334,"column":38}},"111":{"start":{"line":336,"column":32},"end":{"line":349,"column":35}},"112":{"start":{"line":343,"column":36},"end":{"line":343,"column":95}},"113":{"start":{"line":344,"column":36},"end":{"line":344,"column":73}},"114":{"start":{"line":345,"column":53},"end":{"line":345,"column":355}},"115":{"start":{"line":346,"column":36},"end":{"line":346,"column":65}},"116":{"start":{"line":347,"column":36},"end":{"line":347,"column":68}},"117":{"start":{"line":348,"column":36},"end":{"line":348,"column":58}},"118":{"start":{"line":350,"column":32},"end":{"line":350,"column":38}},"119":{"start":{"line":353,"column":20},"end":{"line":353,"column":26}},"120":{"start":{"line":355,"column":20},"end":{"line":405,"column":23}},"121":{"start":{"line":366,"column":24},"end":{"line":404,"column":25}},"122":{"start":{"line":368,"column":32},"end":{"line":381,"column":35}},"123":{"start":{"line":375,"column":36},"end":{"line":375,"column":134}},"124":{"start":{"line":376,"column":36},"end":{"line":376,"column":73}},"125":{"start":{"line":377,"column":53},"end":{"line":377,"column":355}},"126":{"start":{"line":378,"column":36},"end":{"line":378,"column":65}},"127":{"start":{"line":379,"column":36},"end":{"line":379,"column":68}},"128":{"start":{"line":380,"column":36},"end":{"line":380,"column":58}},"129":{"start":{"line":382,"column":32},"end":{"line":382,"column":38}},"130":{"start":{"line":384,"column":32},"end":{"line":402,"column":35}},"131":{"start":{"line":390,"column":44},"end":{"line":390,"column":81}},"132":{"start":{"line":394,"column":36},"end":{"line":396,"column":39}},"133":{"start":{"line":395,"column":40},"end":{"line":395,"column":67}},"134":{"start":{"line":397,"column":36},"end":{"line":397,"column":73}},"135":{"start":{"line":398,"column":53},"end":{"line":398,"column":355}},"136":{"start":{"line":399,"column":36},"end":{"line":399,"column":65}},"137":{"start":{"line":400,"column":36},"end":{"line":400,"column":68}},"138":{"start":{"line":401,"column":36},"end":{"line":401,"column":58}},"139":{"start":{"line":403,"column":32},"end":{"line":403,"column":38}},"140":{"start":{"line":406,"column":20},"end":{"line":406,"column":26}},"141":{"start":{"line":408,"column":20},"end":{"line":465,"column":23}},"142":{"start":{"line":441,"column":55},"end":{"line":444,"column":25}},"143":{"start":{"line":445,"column":52},"end":{"line":448,"column":25}},"144":{"start":{"line":449,"column":52},"end":{"line":452,"column":25}},"145":{"start":{"line":454,"column":49},"end":{"line":458,"column":25}},"146":{"start":{"line":459,"column":24},"end":{"line":459,"column":81}},"147":{"start":{"line":460,"column":24},"end":{"line":460,"column":61}},"148":{"start":{"line":461,"column":41},"end":{"line":461,"column":343}},"149":{"start":{"line":462,"column":24},"end":{"line":462,"column":53}},"150":{"start":{"line":463,"column":24},"end":{"line":463,"column":56}},"151":{"start":{"line":464,"column":24},"end":{"line":464,"column":46}},"152":{"start":{"line":466,"column":20},"end":{"line":466,"column":26}},"153":{"start":{"line":468,"column":20},"end":{"line":506,"column":23}},"154":{"start":{"line":490,"column":42},"end":{"line":494,"column":25}},"155":{"start":{"line":495,"column":46},"end":{"line":498,"column":25}},"156":{"start":{"line":500,"column":24},"end":{"line":500,"column":84}},"157":{"start":{"line":501,"column":24},"end":{"line":501,"column":61}},"158":{"start":{"line":502,"column":41},"end":{"line":502,"column":343}},"159":{"start":{"line":503,"column":24},"end":{"line":503,"column":53}},"160":{"start":{"line":504,"column":24},"end":{"line":504,"column":56}},"161":{"start":{"line":505,"column":24},"end":{"line":505,"column":46}},"162":{"start":{"line":507,"column":20},"end":{"line":507,"column":26}},"163":{"start":{"line":509,"column":20},"end":{"line":560,"column":23}},"164":{"start":{"line":520,"column":24},"end":{"line":559,"column":25}},"165":{"start":{"line":522,"column":32},"end":{"line":535,"column":35}},"166":{"start":{"line":529,"column":36},"end":{"line":529,"column":123}},"167":{"start":{"line":530,"column":36},"end":{"line":530,"column":73}},"168":{"start":{"line":531,"column":53},"end":{"line":531,"column":355}},"169":{"start":{"line":532,"column":36},"end":{"line":532,"column":65}},"170":{"start":{"line":533,"column":36},"end":{"line":533,"column":68}},"171":{"start":{"line":534,"column":36},"end":{"line":534,"column":58}},"172":{"start":{"line":536,"column":32},"end":{"line":536,"column":38}},"173":{"start":{"line":538,"column":32},"end":{"line":557,"column":35}},"174":{"start":{"line":545,"column":53},"end":{"line":545,"column":83}},"175":{"start":{"line":546,"column":56},"end":{"line":546,"column":88}},"176":{"start":{"line":547,"column":36},"end":{"line":550,"column":37}},"177":{"start":{"line":548,"column":40},"end":{"line":548,"column":73}},"178":{"start":{"line":549,"column":40},"end":{"line":549,"column":47}},"179":{"start":{"line":551,"column":36},"end":{"line":551,"column":84}},"180":{"start":{"line":552,"column":36},"end":{"line":552,"column":73}},"181":{"start":{"line":553,"column":53},"end":{"line":553,"column":355}},"182":{"start":{"line":554,"column":36},"end":{"line":554,"column":65}},"183":{"start":{"line":555,"column":36},"end":{"line":555,"column":68}},"184":{"start":{"line":556,"column":36},"end":{"line":556,"column":58}},"185":{"start":{"line":558,"column":32},"end":{"line":558,"column":38}},"186":{"start":{"line":561,"column":20},"end":{"line":561,"column":26}},"187":{"start":{"line":570,"column":25},"end":{"line":570,"column":29}},"188":{"start":{"line":571,"column":23},"end":{"line":571,"column":52}},"189":{"start":{"line":572,"column":8},"end":{"line":599,"column":11}},"190":{"start":{"line":583,"column":12},"end":{"line":585,"column":13}},"191":{"start":{"line":584,"column":16},"end":{"line":584,"column":35}},"192":{"start":{"line":586,"column":32},"end":{"line":586,"column":45}},"193":{"start":{"line":587,"column":12},"end":{"line":594,"column":15}},"194":{"start":{"line":588,"column":16},"end":{"line":593,"column":17}},"195":{"start":{"line":589,"column":20},"end":{"line":589,"column":66}},"196":{"start":{"line":592,"column":20},"end":{"line":592,"column":66}},"197":{"start":{"line":595,"column":12},"end":{"line":597,"column":15}},"198":{"start":{"line":596,"column":16},"end":{"line":596,"column":57}},"199":{"start":{"line":598,"column":12},"end":{"line":598,"column":31}},"200":{"start":{"line":605,"column":25},"end":{"line":605,"column":29}},"201":{"start":{"line":606,"column":23},"end":{"line":606,"column":52}},"202":{"start":{"line":607,"column":8},"end":{"line":635,"column":11}},"203":{"start":{"line":618,"column":12},"end":{"line":620,"column":13}},"204":{"start":{"line":619,"column":16},"end":{"line":619,"column":35}},"205":{"start":{"line":621,"column":32},"end":{"line":621,"column":45}},"206":{"start":{"line":622,"column":12},"end":{"line":629,"column":15}},"207":{"start":{"line":623,"column":16},"end":{"line":628,"column":17}},"208":{"start":{"line":624,"column":20},"end":{"line":624,"column":85}},"209":{"start":{"line":627,"column":20},"end":{"line":627,"column":85}},"210":{"start":{"line":631,"column":12},"end":{"line":633,"column":15}},"211":{"start":{"line":632,"column":16},"end":{"line":632,"column":80}},"212":{"start":{"line":634,"column":12},"end":{"line":634,"column":31}},"213":{"start":{"line":641,"column":25},"end":{"line":641,"column":29}},"214":{"start":{"line":642,"column":23},"end":{"line":642,"column":52}},"215":{"start":{"line":643,"column":8},"end":{"line":671,"column":11}},"216":{"start":{"line":654,"column":12},"end":{"line":656,"column":13}},"217":{"start":{"line":655,"column":16},"end":{"line":655,"column":35}},"218":{"start":{"line":657,"column":32},"end":{"line":657,"column":45}},"219":{"start":{"line":658,"column":12},"end":{"line":665,"column":15}},"220":{"start":{"line":659,"column":16},"end":{"line":664,"column":17}},"221":{"start":{"line":660,"column":20},"end":{"line":660,"column":79}},"222":{"start":{"line":663,"column":20},"end":{"line":663,"column":79}},"223":{"start":{"line":667,"column":12},"end":{"line":669,"column":15}},"224":{"start":{"line":668,"column":16},"end":{"line":668,"column":77}},"225":{"start":{"line":670,"column":12},"end":{"line":670,"column":31}},"226":{"start":{"line":677,"column":25},"end":{"line":677,"column":29}},"227":{"start":{"line":678,"column":23},"end":{"line":678,"column":52}},"228":{"start":{"line":679,"column":8},"end":{"line":706,"column":11}},"229":{"start":{"line":690,"column":12},"end":{"line":692,"column":13}},"230":{"start":{"line":691,"column":16},"end":{"line":691,"column":35}},"231":{"start":{"line":693,"column":32},"end":{"line":693,"column":45}},"232":{"start":{"line":694,"column":12},"end":{"line":701,"column":15}},"233":{"start":{"line":695,"column":16},"end":{"line":700,"column":17}},"234":{"start":{"line":696,"column":20},"end":{"line":696,"column":79}},"235":{"start":{"line":699,"column":20},"end":{"line":699,"column":79}},"236":{"start":{"line":702,"column":12},"end":{"line":704,"column":15}},"237":{"start":{"line":703,"column":16},"end":{"line":703,"column":75}},"238":{"start":{"line":705,"column":12},"end":{"line":705,"column":31}},"239":{"start":{"line":712,"column":23},"end":{"line":712,"column":52}},"240":{"start":{"line":713,"column":8},"end":{"line":744,"column":11}},"241":{"start":{"line":727,"column":12},"end":{"line":743,"column":13}},"242":{"start":{"line":729,"column":20},"end":{"line":729,"column":51}},"243":{"start":{"line":730,"column":20},"end":{"line":730,"column":26}},"244":{"start":{"line":732,"column":20},"end":{"line":732,"column":50}},"245":{"start":{"line":733,"column":20},"end":{"line":733,"column":26}},"246":{"start":{"line":735,"column":20},"end":{"line":735,"column":50}},"247":{"start":{"line":736,"column":20},"end":{"line":736,"column":26}},"248":{"start":{"line":738,"column":20},"end":{"line":738,"column":48}},"249":{"start":{"line":739,"column":20},"end":{"line":739,"column":26}},"250":{"start":{"line":741,"column":20},"end":{"line":741,"column":36}},"251":{"start":{"line":742,"column":20},"end":{"line":742,"column":26}},"252":{"start":{"line":752,"column":8},"end":{"line":752,"column":29}},"253":{"start":{"line":759,"column":8},"end":{"line":759,"column":33}},"254":{"start":{"line":762,"column":0},"end":{"line":762,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":18},"end":{"line":19,"column":5}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":13},"end":{"line":31,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":29},"end":{"line":26,"column":30}},"loc":{"start":{"line":26,"column":39},"end":{"line":29,"column":9}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":21},"end":{"line":64,"column":5}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":49,"column":16},"end":{"line":49,"column":17}},"loc":{"start":{"line":49,"column":29},"end":{"line":63,"column":9}},"line":49},"5":{"name":"(anonymous_5)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":23},"end":{"line":83,"column":5}},"line":68},"6":{"name":"(anonymous_6)","decl":{"start":{"line":75,"column":43},"end":{"line":75,"column":44}},"loc":{"start":{"line":75,"column":53},"end":{"line":77,"column":17}},"line":75},"7":{"name":"(anonymous_7)","decl":{"start":{"line":79,"column":16},"end":{"line":79,"column":17}},"loc":{"start":{"line":79,"column":29},"end":{"line":82,"column":9}},"line":79},"8":{"name":"(anonymous_8)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":22},"end":{"line":103,"column":5}},"line":88},"9":{"name":"(anonymous_9)","decl":{"start":{"line":90,"column":30},"end":{"line":90,"column":31}},"loc":{"start":{"line":90,"column":48},"end":{"line":96,"column":9}},"line":90},"10":{"name":"(anonymous_10)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}},"loc":{"start":{"line":107,"column":20},"end":{"line":180,"column":5}},"line":107},"11":{"name":"(anonymous_11)","decl":{"start":{"line":159,"column":16},"end":{"line":159,"column":17}},"loc":{"start":{"line":159,"column":29},"end":{"line":179,"column":9}},"line":159},"12":{"name":"(anonymous_12)","decl":{"start":{"line":184,"column":4},"end":{"line":184,"column":5}},"loc":{"start":{"line":184,"column":26},"end":{"line":198,"column":5}},"line":184},"13":{"name":"(anonymous_13)","decl":{"start":{"line":191,"column":43},"end":{"line":191,"column":44}},"loc":{"start":{"line":191,"column":53},"end":{"line":193,"column":17}},"line":191},"14":{"name":"(anonymous_14)","decl":{"start":{"line":195,"column":16},"end":{"line":195,"column":17}},"loc":{"start":{"line":195,"column":29},"end":{"line":197,"column":9}},"line":195},"15":{"name":"(anonymous_15)","decl":{"start":{"line":203,"column":4},"end":{"line":203,"column":5}},"loc":{"start":{"line":203,"column":36},"end":{"line":211,"column":5}},"line":203},"16":{"name":"(anonymous_16)","decl":{"start":{"line":204,"column":30},"end":{"line":204,"column":31}},"loc":{"start":{"line":204,"column":48},"end":{"line":209,"column":9}},"line":204},"17":{"name":"(anonymous_17)","decl":{"start":{"line":217,"column":4},"end":{"line":217,"column":5}},"loc":{"start":{"line":217,"column":36},"end":{"line":564,"column":5}},"line":217},"18":{"name":"(anonymous_18)","decl":{"start":{"line":220,"column":30},"end":{"line":220,"column":31}},"loc":{"start":{"line":220,"column":47},"end":{"line":225,"column":9}},"line":220},"19":{"name":"(anonymous_19)","decl":{"start":{"line":246,"column":16},"end":{"line":246,"column":17}},"loc":{"start":{"line":246,"column":29},"end":{"line":563,"column":9}},"line":246},"20":{"name":"(anonymous_20)","decl":{"start":{"line":255,"column":28},"end":{"line":255,"column":29}},"loc":{"start":{"line":255,"column":41},"end":{"line":262,"column":21}},"line":255},"21":{"name":"(anonymous_21)","decl":{"start":{"line":275,"column":28},"end":{"line":275,"column":29}},"loc":{"start":{"line":275,"column":41},"end":{"line":282,"column":21}},"line":275},"22":{"name":"(anonymous_22)","decl":{"start":{"line":296,"column":28},"end":{"line":296,"column":29}},"loc":{"start":{"line":296,"column":41},"end":{"line":352,"column":21}},"line":296},"23":{"name":"(anonymous_23)","decl":{"start":{"line":305,"column":40},"end":{"line":305,"column":41}},"loc":{"start":{"line":305,"column":53},"end":{"line":312,"column":33}},"line":305},"24":{"name":"(anonymous_24)","decl":{"start":{"line":320,"column":85},"end":{"line":320,"column":86}},"loc":{"start":{"line":320,"column":96},"end":{"line":322,"column":41}},"line":320},"25":{"name":"(anonymous_25)","decl":{"start":{"line":324,"column":40},"end":{"line":324,"column":41}},"loc":{"start":{"line":324,"column":53},"end":{"line":333,"column":33}},"line":324},"26":{"name":"(anonymous_26)","decl":{"start":{"line":325,"column":109},"end":{"line":325,"column":110}},"loc":{"start":{"line":325,"column":120},"end":{"line":327,"column":37}},"line":325},"27":{"name":"(anonymous_27)","decl":{"start":{"line":342,"column":40},"end":{"line":342,"column":41}},"loc":{"start":{"line":342,"column":53},"end":{"line":349,"column":33}},"line":342},"28":{"name":"(anonymous_28)","decl":{"start":{"line":365,"column":28},"end":{"line":365,"column":29}},"loc":{"start":{"line":365,"column":41},"end":{"line":405,"column":21}},"line":365},"29":{"name":"(anonymous_29)","decl":{"start":{"line":374,"column":40},"end":{"line":374,"column":41}},"loc":{"start":{"line":374,"column":53},"end":{"line":381,"column":33}},"line":374},"30":{"name":"(anonymous_30)","decl":{"start":{"line":389,"column":90},"end":{"line":389,"column":91}},"loc":{"start":{"line":389,"column":101},"end":{"line":391,"column":41}},"line":389},"31":{"name":"(anonymous_31)","decl":{"start":{"line":393,"column":40},"end":{"line":393,"column":41}},"loc":{"start":{"line":393,"column":53},"end":{"line":402,"column":33}},"line":393},"32":{"name":"(anonymous_32)","decl":{"start":{"line":394,"column":119},"end":{"line":394,"column":120}},"loc":{"start":{"line":394,"column":130},"end":{"line":396,"column":37}},"line":394},"33":{"name":"(anonymous_33)","decl":{"start":{"line":439,"column":28},"end":{"line":439,"column":29}},"loc":{"start":{"line":439,"column":42},"end":{"line":465,"column":21}},"line":439},"34":{"name":"(anonymous_34)","decl":{"start":{"line":489,"column":28},"end":{"line":489,"column":29}},"loc":{"start":{"line":489,"column":41},"end":{"line":506,"column":21}},"line":489},"35":{"name":"(anonymous_35)","decl":{"start":{"line":519,"column":28},"end":{"line":519,"column":29}},"loc":{"start":{"line":519,"column":41},"end":{"line":560,"column":21}},"line":519},"36":{"name":"(anonymous_36)","decl":{"start":{"line":528,"column":40},"end":{"line":528,"column":41}},"loc":{"start":{"line":528,"column":53},"end":{"line":535,"column":33}},"line":528},"37":{"name":"(anonymous_37)","decl":{"start":{"line":544,"column":40},"end":{"line":544,"column":41}},"loc":{"start":{"line":544,"column":53},"end":{"line":557,"column":33}},"line":544},"38":{"name":"(anonymous_38)","decl":{"start":{"line":569,"column":4},"end":{"line":569,"column":5}},"loc":{"start":{"line":569,"column":30},"end":{"line":600,"column":5}},"line":569},"39":{"name":"(anonymous_39)","decl":{"start":{"line":582,"column":16},"end":{"line":582,"column":17}},"loc":{"start":{"line":582,"column":29},"end":{"line":599,"column":9}},"line":582},"40":{"name":"(anonymous_40)","decl":{"start":{"line":587,"column":29},"end":{"line":587,"column":30}},"loc":{"start":{"line":587,"column":39},"end":{"line":594,"column":13}},"line":587},"41":{"name":"(anonymous_41)","decl":{"start":{"line":595,"column":32},"end":{"line":595,"column":33}},"loc":{"start":{"line":595,"column":42},"end":{"line":597,"column":13}},"line":595},"42":{"name":"(anonymous_42)","decl":{"start":{"line":604,"column":4},"end":{"line":604,"column":5}},"loc":{"start":{"line":604,"column":29},"end":{"line":636,"column":5}},"line":604},"43":{"name":"(anonymous_43)","decl":{"start":{"line":617,"column":16},"end":{"line":617,"column":17}},"loc":{"start":{"line":617,"column":29},"end":{"line":635,"column":9}},"line":617},"44":{"name":"(anonymous_44)","decl":{"start":{"line":622,"column":29},"end":{"line":622,"column":30}},"loc":{"start":{"line":622,"column":39},"end":{"line":629,"column":13}},"line":622},"45":{"name":"(anonymous_45)","decl":{"start":{"line":631,"column":32},"end":{"line":631,"column":33}},"loc":{"start":{"line":631,"column":42},"end":{"line":633,"column":13}},"line":631},"46":{"name":"(anonymous_46)","decl":{"start":{"line":640,"column":4},"end":{"line":640,"column":5}},"loc":{"start":{"line":640,"column":29},"end":{"line":672,"column":5}},"line":640},"47":{"name":"(anonymous_47)","decl":{"start":{"line":653,"column":16},"end":{"line":653,"column":17}},"loc":{"start":{"line":653,"column":29},"end":{"line":671,"column":9}},"line":653},"48":{"name":"(anonymous_48)","decl":{"start":{"line":658,"column":29},"end":{"line":658,"column":30}},"loc":{"start":{"line":658,"column":39},"end":{"line":665,"column":13}},"line":658},"49":{"name":"(anonymous_49)","decl":{"start":{"line":667,"column":32},"end":{"line":667,"column":33}},"loc":{"start":{"line":667,"column":42},"end":{"line":669,"column":13}},"line":667},"50":{"name":"(anonymous_50)","decl":{"start":{"line":676,"column":4},"end":{"line":676,"column":5}},"loc":{"start":{"line":676,"column":27},"end":{"line":707,"column":5}},"line":676},"51":{"name":"(anonymous_51)","decl":{"start":{"line":689,"column":16},"end":{"line":689,"column":17}},"loc":{"start":{"line":689,"column":29},"end":{"line":706,"column":9}},"line":689},"52":{"name":"(anonymous_52)","decl":{"start":{"line":694,"column":29},"end":{"line":694,"column":30}},"loc":{"start":{"line":694,"column":39},"end":{"line":701,"column":13}},"line":694},"53":{"name":"(anonymous_53)","decl":{"start":{"line":702,"column":32},"end":{"line":702,"column":33}},"loc":{"start":{"line":702,"column":42},"end":{"line":704,"column":13}},"line":702},"54":{"name":"(anonymous_54)","decl":{"start":{"line":711,"column":4},"end":{"line":711,"column":5}},"loc":{"start":{"line":711,"column":18},"end":{"line":745,"column":5}},"line":711},"55":{"name":"(anonymous_55)","decl":{"start":{"line":726,"column":16},"end":{"line":726,"column":17}},"loc":{"start":{"line":726,"column":29},"end":{"line":744,"column":9}},"line":726},"56":{"name":"(anonymous_56)","decl":{"start":{"line":751,"column":4},"end":{"line":751,"column":5}},"loc":{"start":{"line":751,"column":22},"end":{"line":753,"column":5}},"line":751},"57":{"name":"(anonymous_57)","decl":{"start":{"line":758,"column":4},"end":{"line":758,"column":5}},"loc":{"start":{"line":758,"column":30},"end":{"line":760,"column":5}},"line":758}},"branchMap":{"0":{"loc":{"start":{"line":50,"column":12},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":62,"column":13}},{"start":{"line":50,"column":12},"end":{"line":62,"column":13}}],"line":50},"1":{"loc":{"start":{"line":53,"column":17},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":17},"end":{"line":62,"column":13}},{"start":{"line":53,"column":17},"end":{"line":62,"column":13}}],"line":53},"2":{"loc":{"start":{"line":56,"column":17},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":56,"column":17},"end":{"line":62,"column":13}},{"start":{"line":56,"column":17},"end":{"line":62,"column":13}}],"line":56},"3":{"loc":{"start":{"line":59,"column":17},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":59,"column":17},"end":{"line":62,"column":13}},{"start":{"line":59,"column":17},"end":{"line":62,"column":13}}],"line":59},"4":{"loc":{"start":{"line":91,"column":12},"end":{"line":95,"column":13}},"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":95,"column":13}},{"start":{"line":91,"column":12},"end":{"line":95,"column":13}}],"line":91},"5":{"loc":{"start":{"line":97,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":102,"column":9}},{"start":{"line":97,"column":8},"end":{"line":102,"column":9}}],"line":97},"6":{"loc":{"start":{"line":205,"column":12},"end":{"line":208,"column":13}},"type":"if","locations":[{"start":{"line":205,"column":12},"end":{"line":208,"column":13}},{"start":{"line":205,"column":12},"end":{"line":208,"column":13}}],"line":205},"7":{"loc":{"start":{"line":221,"column":12},"end":{"line":224,"column":13}},"type":"if","locations":[{"start":{"line":221,"column":12},"end":{"line":224,"column":13}},{"start":{"line":221,"column":12},"end":{"line":224,"column":13}}],"line":221},"8":{"loc":{"start":{"line":226,"column":8},"end":{"line":229,"column":9}},"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":229,"column":9}},{"start":{"line":226,"column":8},"end":{"line":229,"column":9}}],"line":226},"9":{"loc":{"start":{"line":247,"column":12},"end":{"line":562,"column":13}},"type":"switch","locations":[{"start":{"line":248,"column":16},"end":{"line":263,"column":26}},{"start":{"line":264,"column":16},"end":{"line":283,"column":26}},{"start":{"line":284,"column":16},"end":{"line":353,"column":26}},{"start":{"line":354,"column":16},"end":{"line":406,"column":26}},{"start":{"line":407,"column":16},"end":{"line":466,"column":26}},{"start":{"line":467,"column":16},"end":{"line":507,"column":26}},{"start":{"line":508,"column":16},"end":{"line":561,"column":26}}],"line":247},"10":{"loc":{"start":{"line":297,"column":24},"end":{"line":351,"column":25}},"type":"switch","locations":[{"start":{"line":298,"column":28},"end":{"line":313,"column":38}},{"start":{"line":314,"column":28},"end":{"line":334,"column":38}},{"start":{"line":335,"column":28},"end":{"line":350,"column":38}}],"line":297},"11":{"loc":{"start":{"line":366,"column":24},"end":{"line":404,"column":25}},"type":"switch","locations":[{"start":{"line":367,"column":28},"end":{"line":382,"column":38}},{"start":{"line":383,"column":28},"end":{"line":403,"column":38}}],"line":366},"12":{"loc":{"start":{"line":520,"column":24},"end":{"line":559,"column":25}},"type":"switch","locations":[{"start":{"line":521,"column":28},"end":{"line":536,"column":38}},{"start":{"line":537,"column":28},"end":{"line":558,"column":38}}],"line":520},"13":{"loc":{"start":{"line":547,"column":36},"end":{"line":550,"column":37}},"type":"if","locations":[{"start":{"line":547,"column":36},"end":{"line":550,"column":37}},{"start":{"line":547,"column":36},"end":{"line":550,"column":37}}],"line":547},"14":{"loc":{"start":{"line":583,"column":12},"end":{"line":585,"column":13}},"type":"if","locations":[{"start":{"line":583,"column":12},"end":{"line":585,"column":13}},{"start":{"line":583,"column":12},"end":{"line":585,"column":13}}],"line":583},"15":{"loc":{"start":{"line":588,"column":16},"end":{"line":593,"column":17}},"type":"if","locations":[{"start":{"line":588,"column":16},"end":{"line":593,"column":17}},{"start":{"line":588,"column":16},"end":{"line":593,"column":17}}],"line":588},"16":{"loc":{"start":{"line":618,"column":12},"end":{"line":620,"column":13}},"type":"if","locations":[{"start":{"line":618,"column":12},"end":{"line":620,"column":13}},{"start":{"line":618,"column":12},"end":{"line":620,"column":13}}],"line":618},"17":{"loc":{"start":{"line":623,"column":16},"end":{"line":628,"column":17}},"type":"if","locations":[{"start":{"line":623,"column":16},"end":{"line":628,"column":17}},{"start":{"line":623,"column":16},"end":{"line":628,"column":17}}],"line":623},"18":{"loc":{"start":{"line":654,"column":12},"end":{"line":656,"column":13}},"type":"if","locations":[{"start":{"line":654,"column":12},"end":{"line":656,"column":13}},{"start":{"line":654,"column":12},"end":{"line":656,"column":13}}],"line":654},"19":{"loc":{"start":{"line":659,"column":16},"end":{"line":664,"column":17}},"type":"if","locations":[{"start":{"line":659,"column":16},"end":{"line":664,"column":17}},{"start":{"line":659,"column":16},"end":{"line":664,"column":17}}],"line":659},"20":{"loc":{"start":{"line":690,"column":12},"end":{"line":692,"column":13}},"type":"if","locations":[{"start":{"line":690,"column":12},"end":{"line":692,"column":13}},{"start":{"line":690,"column":12},"end":{"line":692,"column":13}}],"line":690},"21":{"loc":{"start":{"line":695,"column":16},"end":{"line":700,"column":17}},"type":"if","locations":[{"start":{"line":695,"column":16},"end":{"line":700,"column":17}},{"start":{"line":695,"column":16},"end":{"line":700,"column":17}}],"line":695},"22":{"loc":{"start":{"line":727,"column":12},"end":{"line":743,"column":13}},"type":"switch","locations":[{"start":{"line":728,"column":16},"end":{"line":730,"column":26}},{"start":{"line":731,"column":16},"end":{"line":733,"column":26}},{"start":{"line":734,"column":16},"end":{"line":736,"column":26}},{"start":{"line":737,"column":16},"end":{"line":739,"column":26}},{"start":{"line":740,"column":16},"end":{"line":742,"column":26}}],"line":727}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":11,"11":11,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":11,"60":1,"61":1,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":1,"254":1},"f":{"0":1,"1":1,"2":11,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":11,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[1,10],"7":[0,0],"8":[0,0],"9":[0,0,0,0,0,0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuarioCollection.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuarioCollection.ts"],"names":[],"mappings":"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","sourcesContent":["import { Usuario } from \"./usuario\";\nimport * as inquirer from \"inquirer\";\n// base de datos\nimport { database } from \"./bd\";\nimport { estadisticaEntrenamiento, estadistica, ID}  from './types';\n\n\n\n/**\n * @class usuarioCollection\n * @description Clase que representa una colección de usuarios\n */\nexport class usuarioCollection {\n  private usuarios: Usuario[] = [];\n\n  /**\n   * Constructor de la clase \n   */\n  constructor() {\n    this.leerBD();\n  }\n\n  /**\n   * Método que lee la base de datos y la carga en el array de usuarios\n   */\n  leerBD() {\n    const usuarios_aux = database.get(\"usuarios\").value();\n    const array_aux: Usuario[] = [];\n    usuarios_aux.forEach((user) => {\n      const user_aux: Usuario = new Usuario(user.nombre, user.actividad, user.amigos, user.grupo_de_amigos, user.estadisticas, user.historicoRutas, user.retos, user.id);\n      array_aux.push(user_aux);\n    });\n    this.setUsuarios = array_aux;  \n  }\n  \n  /**\n   * Método que controla el menú de usuarios\n   */\n  manageUsuarios() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: 'Manejo de Usuarios, ¿qué quieres hacer?',\n        choices: [\n          {name:'Añadir Usuario', value: 'add'},\n          {name:'Borrar Usuario', value: 'remove'},\n          {name:'Modificar Usuario', value: 'modify'},\n          {name:'Salir', value: 'Salir'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'add') {\n        this.promptAddUser();\n      }\n      else if (answers.opcion === 'remove') {\n        this.promptBorrarUser();\n      }\n      else if (answers.opcion === 'modify') {\n        this.promptModificarUser();\n      }\n      else if (answers.opcion === 'Salir') {\n        // cerrar prompt\n        process.exit(0);\n      }\n    });\n  }\n  \n  /**\n   * Método que controla el menú de borrar usuarios\n   */\n  promptBorrarUser() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué usuario quieres borrar? Introduce su ID: ',\n        choices: this.usuarios.map((user) => {\n          return {name: user.getNombre, value: user.getID};\n        })\n      }\n    ]).then((answers) => {\n      this.borrarUsuario(answers.opcion);\n      this.manageUsuarios();\n    });\n  }\n\n  /**\n   * Método que borra un usuario de la base de datos\n   * @param id \n   */\n  borrarUsuario(id: number) {\n    let control_bool = false;\n    this.usuarios.forEach((user, indice) => {\n      if (user.getID == id) {\n        this.usuarios.splice(indice, 1);\n        control_bool = true;\n        database.get(\"usuarios\").splice(indice,1).write();\n      }\n    });\n    if (control_bool) {\n      console.log(\"Usuario borrado\");\n    }\n    else {\n      console.log(\"No se ha encontrado el usuario\");\n    }\n  }\n\n  /**\n   * Método que controla el menú para añadir usuarios\n   */\n  promptAddUser() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      { \n        type: 'input',\n        name: 'nombre',\n        message: 'Introduce el nombre del usuario: '\n      },\n      {\n        type: 'list',\n        name: 'actividad',\n        message: '¿Qué actividad realiza?',\n        choices: [\n          {name:'Ciclismo', value: 'Ciclismo'},\n          {name:'Running', value: 'Running'},\n        ]\n      },\n      { \n        type: 'input',\n        name: 'amigos',\n        message: 'Introduce los IDs de los amigos del usuario \"id1,id2,...\": '\n      },\n      {\n        type: 'input',\n        name: 'grupo_de_amigos',\n        message: 'Inserta los grupos de amigos de la forma \"id1,id2,...;id3,id4,...\": ',\n      },\n      {\n        type: 'input',\n        name: 'estadisticas1',\n        message: 'Introduce las estadísticas de la semana: \"km,desnivel\"',\n      },\n      {\n        type: 'input',\n        name: 'estadisticas2',\n        message: 'Introduce las estadísticas del mes: \"km,desnivel\"',\n      },\n      {\n        type: 'input',\n        name: 'estadisticas3',\n        message: 'Introduce las estadísticas del año: \"km,desnivel\"',\n      },\n      {\n        type: 'input',\n        name: 'historicoRutas',\n        message: '¿Qué rutas ha realizado? \"id1,id2,...\"',\n      },\n      {\n        type: 'input',\n        name: 'retos',\n        message: '¿Qué retos ha realizado? \"id1,id2,...\"',\n        \n      },\n    ]).then((answers) => {\n      const amigos_aux = answers.amigos.split(\",\");\n      const historicoRutas_aux = answers.historicoRutas.split(\",\");\n      const retos_aux = answers.retos.split(\",\");\n      const grupos_aux = answers.grupo_de_amigos.split(\";\");\n      const estadisticas_aux = [];\n      estadisticas_aux.push(answers.estadisticas1.split(\",\"));\n      estadisticas_aux.push(answers.estadisticas2.split(\",\"));\n      estadisticas_aux.push(answers.estadisticas3.split(\",\"));\n\n      const est1: estadistica = {km: parseInt(estadisticas_aux[0][0]), desnivel: parseInt(estadisticas_aux[0][1])};\n      const est2: estadistica = {km: parseInt(estadisticas_aux[1][0]), desnivel: parseInt(estadisticas_aux[1][1])};\n      const est3: estadistica = {km: parseInt(estadisticas_aux[2][0]), desnivel: parseInt(estadisticas_aux[2][1])};\n\n      const estadisticas: estadisticaEntrenamiento = {\n        semana: est1,\n        mes: est2,\n        año: est3\n      }\n\n      const user_aux = new Usuario(answers.nombre, answers.actividad, amigos_aux, grupos_aux, estadisticas, historicoRutas_aux, retos_aux);\n      this.usuarios.push(user_aux);\n      this.manageUsuarios();\n    });\n  }\n\n  /**\n   * Método que controla el menú para modificar usuarios\n   */\n  promptModificarUser() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué usuario quieres modificar? ',\n        choices: this.usuarios.map((user) => {\n          return {name: user.getNombre, value: user.getID};\n        })\n      }\n    ]).then((answers) => {\n      this.modificarUsuario(answers.opcion);\n    });\n  }\n\n    /**\n   * Metodo para borrar un elemento de la base de datos\n   * @param identificador \n   */\n    borrarElementoBD(identificador: ID): boolean{\n      this.usuarios.forEach((user, indice) => {\n        if (user.getID == identificador) {\n          database.get(\"usuarios\").splice(indice,1).write();\n          return true;\n        }\n      });\n      return false;\n    }\n    \n  /**\n   * Método que modifica un usuario\n   * @param identificador \n   * @returns \n   */\n  modificarUsuario(identificador: ID) {\n    let id_existe_en_coleccion = false;\n    let indice = -1;\n    this.usuarios.forEach((user, index) => {\n      if (user.getID == identificador) {\n        id_existe_en_coleccion = true;\n        indice = index;\n      }\n    }\n    );\n    if (!id_existe_en_coleccion) {\n      console.log('No existe la ruta que se intenta modificar');\n      return;\n    }\n\n    const prompt = inquirer.createPromptModule();\n    prompt([ \n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué quieres modificar?',\n        choices: [\n          {name:'Nombre', value: 'nombre'},\n          {name:'Actividad', value: 'actividad'},\n          {name:'Amigos', value: 'amigos'},\n          {name:'Grupos de amigos', value: 'grupos_de_amigos'},\n          {name:'Estadísticas', value: 'estadisticas'},\n          {name:'Historico de rutas', value: 'historico_rutas'},\n          {name:'Retos', value: 'retos'},\n        ]\n      }\n    ]).then((answers) => {\n      switch (answers.opcion) {\n        case 'nombre':\n          prompt([\n            {\n              type: 'input',\n              name: 'nombre2',\n              message: 'Introduce el nuevo nombre del usuario',\n            }\n          ]).then((answers) => {\n            this.usuarios[indice].setNombre = answers.nombre2;\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n            this.usuarios.push(ruta_aux);\n            this.usuarios.splice(indice, 1);\n\n            this.manageUsuarios();\n          }\n          );\n          break;\n        case 'actividad':\n          \n          prompt([\n            {\n              type: 'list',\n              name: 'actividad',\n              message: '¿Qué actividad realiza?',\n              choices: [\n                {name:'Bicicleta', value: 'Bicicleta'},\n                {name:'Correr', value: 'Correr'},\n              ]\n            }\n          ]).then((answers) => {\n            this.usuarios[indice].setActividad = answers.actividad;\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n            this.usuarios.push(ruta_aux);\n            this.usuarios.splice(indice, 1);\n            this.manageUsuarios();          \n          });\n\n          break;\n        case 'amigos':\n          prompt\n          ([\n            {\n              type: 'list',\n              name: 'amigos',\n              message: '¿Qué deseas hacer?',\n              choices: [\n                {name:'Añadir amigo', value: 'añadir'},\n                {name:'Eliminar amigo', value: 'eliminar'},\n                {name:'Nueva lista de amigos', value: 'nuevo'},\n              ]\n            }\n          ]).then((answers) => {\n            switch (answers.amigos) {\n              case 'añadir':\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'amigo',\n                    message: 'Introduce el id del amigo',\n                  }\n                ]).then((answers) => {\n                  this.usuarios[indice].setAmigos = this.usuarios[indice].getAmigos.concat(answers.amigo);  \n                  this.borrarElementoBD(identificador);\n                  const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n                  this.usuarios.push(ruta_aux);\n                  this.usuarios.splice(indice, 1);\n                  this.manageUsuarios();\n                });\n              break;\n              case 'eliminar':\n                prompt([\n                  {\n                    type: 'list',\n                    name: 'id',\n                    message: '¿Qué amigo quieres eliminar?',\n                    choices: this.usuarios[indice].getAmigos.map((amigo) => {\n                      return {name: amigo, value: amigo};\n                    }\n                    )\n                  }\n                ]).then((answers) => {\n                  this.usuarios[indice].setAmigos = this.usuarios[indice].getAmigos.filter((amigo) => {\n                    return amigo != answers.id;\n                  }\n                  );\n                  this.borrarElementoBD(identificador);\n                  const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n                  this.usuarios.push(ruta_aux);\n                  this.usuarios.splice(indice, 1);\n                  this.manageUsuarios();\n                });\n              break;\n\n              case 'nuevo':\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'amigo',\n                    message: 'Introduce nueva lista de amigos \"id1,id2,...\"',\n                  }\n                ]).then((answers) => {\n                  this.usuarios[indice].setAmigos = answers.amigo.split(',');\n                  this.borrarElementoBD(identificador);\n                  const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n                  this.usuarios.push(ruta_aux);\n                  this.usuarios.splice(indice, 1);\n                  this.manageUsuarios();\n                });\n              break;\n            }\n          });\n\n                \n          break;\n        case 'grupos_de_amigos':\n          prompt([\n            {\n              type: 'list',\n              name: 'grupos',\n              message: '¿Qué deseas hacer?',\n              choices: [\n                {name:'Añadir grupo', value: 'añadir'},\n                {name:'Eliminar grupo', value: 'eliminar'},\n              ]\n            }\n          ]).then((answers) => {\n            switch (answers.grupos) {\n              case 'añadir':\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'grupo',\n                    message: 'Introduce el id del grupo de amigos \"id1,id2\"',\n                  }\n                ]).then((answers) => {  \n                  this.usuarios[indice].setGrupoAmigos = this.usuarios[indice].getGrupoAmigos.concat(answers.grupo);\n                  this.borrarElementoBD(identificador);\n                  const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n                  this.usuarios.push(ruta_aux);\n                  this.usuarios.splice(indice, 1);\n                  this.manageUsuarios();\n                });\n                break;\n              case 'eliminar':\n                prompt([\n                  {\n                    type: 'list',\n                    name: 'id',\n                    message: '¿Qué grupo de amigos quieres eliminar?',\n                    choices: this.usuarios[indice].getGrupoAmigos.map((grupo) => {\n                      return {name: grupo, value: grupo};\n                    }\n                    )\n                  }\n                ]).then((answers) => {\n                  this.usuarios[indice].setGrupoAmigos = this.usuarios[indice].getGrupoAmigos.filter((grupo) => {\n                    return grupo != answers.id;\n                  }\n                  );\n                  this.borrarElementoBD(identificador);\n                  const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n                  this.usuarios.push(ruta_aux);\n                  this.usuarios.splice(indice, 1);\n                  this.manageUsuarios();\n                });\n              break;\n            }\n          });\n          break;\n        case 'estadisticas':\n          prompt([\n            {\n              type: 'input',\n              name: 'kms_semana',\n              message: 'Introduce los kms de la semana',\n            },\n            {\n              type: 'input',\n              name: 'desnivel_semana',\n              message: 'Introduce el desnivel de la semana',\n            },\n            {\n              type: 'input',\n              name: 'kms_mes',\n              message: 'Introduce los kms del mes',\n            },\n            {\n              type: 'input',\n              name: 'desnivel_mes',\n              message: 'Introduce el desnivel del mes',\n            },\n            {\n              type: 'input',\n              name: 'kms_año',\n              message: 'Introduce los kms del año',\n            },\n            {\n              type: 'input',\n              name: 'desnivel_año',\n              message: 'Introduce el desnivel del año',\n            }\n          ]).then((answers5) => {\n            // generar 3 estadisticas con los nuevos datos\n            const new_estadistica_semana: estadistica = {\n              km: answers5.kms_semana,\n              desnivel: answers5.desnivel_semana,\n            }\n            const new_estadistica_mes: estadistica  = {\n              km: answers5.kms_mes,\n              desnivel: answers5.desnivel_mes,\n            }\n            const new_estadistica_año: estadistica  = {\n              km: answers5.kms_año,\n              desnivel: answers5.desnivel_año,\n            }\n            // crear un nuevo array de estadisticas e insertarlo en el array de estadisticas de la clase\n            const new_estadisticas: estadisticaEntrenamiento = {\n              semana: new_estadistica_semana,\n              mes: new_estadistica_mes,\n              año: new_estadistica_año,\n            }\n            this.usuarios[indice].setEstadisticas = new_estadisticas;\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n            this.usuarios.push(ruta_aux);\n            this.usuarios.splice(indice, 1);\n            this.manageUsuarios();\n          });\n          \n          break;\n        case 'historico_rutas':\n          prompt([\n            {\n              type: 'input',\n              name: 'dia',\n              message: 'Introduce el dia de la ruta',\n            },\n            {\n              type: 'input',\n              name: 'mes',\n              message: 'Introduce el mes de la ruta',\n            },\n            {\n              type: 'input',\n              name: 'año',\n              message: 'Introduce el año de la ruta',\n            },\n            {\n              type: 'input',\n              name: 'id',\n              message: 'Introduce el id de la ruta',\n            }\n          ]).then((answers) => {\n            const new_fecha = {\n              dia: answers.dia,\n              mes: answers.mes,\n              año: answers.año,\n            }\n            const new_historico = {\n              fecha: new_fecha,\n              id: answers.id,\n            }\n            // añadirlo y modificar la base de datos\n            this.usuarios[indice].getHistoricoRutas.push(new_historico);\n            this.borrarElementoBD(identificador);\n            const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n            this.usuarios.push(ruta_aux);\n            this.usuarios.splice(indice, 1);\n            this.manageUsuarios();\n          });\n          break;\n        case 'retos':\n          prompt([\n            {\n              type: 'list',\n              name: 'retos',\n              message: '¿Qué deseas hacer?',\n              choices: [\n                {name:'Añadir reto', value: 'añadir'},\n                {name:'Eliminar reto', value: 'eliminar'},\n              ]\n            }\n          ]).then((answers) => {\n            switch (answers.retos) {\n              case 'añadir':\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'nombre',\n                    message: 'Introduce el id del reto que quiera añadir',\n                  }\n                ]).then((answers) => {\n                  this.usuarios[indice].setRetos = this.usuarios[indice].getRetos.concat(answers.nombre);  \n                  this.borrarElementoBD(identificador);\n                  const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n                  this.usuarios.push(ruta_aux);\n                  this.usuarios.splice(indice, 1);\n                  this.manageUsuarios();\n                });\n                break;\n              case 'eliminar':\n                prompt([\n                  {\n                    type: 'input',\n                    name: 'nombre',\n                    message: 'Introduce el id del reto que desee eliminar',\n                  }\n                ]).then((answers) => {\n                  const usuarios = this.usuarios[indice].getRetos;\n                  const indice_reto = usuarios.indexOf(answers.nombre);\n                  if (indice_reto == -1) {\n                    console.log('El reto no existe');\n                    return;\n                  }\n                  this.usuarios[indice].setRetos = answers.nombre;\n                  this.borrarElementoBD(identificador);\n                  const ruta_aux = new Usuario(this.usuarios[indice].getNombre, this.usuarios[indice].getActividad, this.usuarios[indice].getAmigos, this.usuarios[indice].getGrupoAmigos, this.usuarios[indice].getEstadisticas, this.usuarios[indice].getHistoricoRutas, this.usuarios[indice].getRetos, this.usuarios[indice].getID);\n                  this.usuarios.push(ruta_aux);\n                  this.usuarios.splice(indice, 1);\n                  this.manageUsuarios();\n                });\n                break;\n            }\n          });\n          break;\n      }\n    });\n  }\n\n  //* INFO USUARIO\n\n  /**\n   * Metodo para ordenar los usuarios por nombre\n   */\n  ordenarUsuarioPorNombre() {\n   let ascendente = true; // por defecto ascendente\n   const prompt = inquirer.createPromptModule();\n   prompt([\n     {\n       type: 'list',\n       name: 'opcion',\n       message: '¿Cómo deseas ordenar?',\n       choices: [\n         {name:'Ascendente', value: 'ascendente'},\n         {name:'Descendente', value: 'descendente'},\n       ]\n     }\n   ]).then((answers) => {\n     if (answers.opcion === 'descendente') {\n       ascendente = false;\n     }\n     const copia_rutas = this.usuarios;\n     copia_rutas.sort((a, b) => {\n       if (ascendente) {\n         return a.getNombre.localeCompare(b.getNombre);\n       }\n       else {\n         return b.getNombre.localeCompare(a.getNombre);\n       }\n     });\n     copia_rutas.forEach((ruta) => {\n       console.log(`Nombre: ${ruta.getNombre}`);\n     });\n     this.infoUsuario();\n   });\n  }\n\n  /**\n   * Metodo para ordenar los usuarios por kms semanales\n   */\n  ordenarPorKmsSemanales() {\n   let ascendente = true; // por defecto ascendente\n   const prompt = inquirer.createPromptModule();\n   prompt([\n     {\n       type: 'list',\n       name: 'opcion',\n       message: '¿Cómo deseas ordenar?',\n       choices: [\n         {name:'Ascendente', value: 'ascendente'},\n         {name:'Descendente', value: 'descendente'},\n       ]\n     }\n   ]).then((answers) => {\n     if (answers.opcion === 'descendente') {\n       ascendente = false;\n     }\n     const copia_rutas = this.usuarios;\n     copia_rutas.sort((a, b) => {\n       if (ascendente) {\n         return a.getEstadisticas.semana.km - b.getEstadisticas.semana.km;\n       }\n       else {\n         return b.getEstadisticas.semana.km - a.getEstadisticas.semana.km;\n       }\n     });\n     // mostrar\n     copia_rutas.forEach((ruta) => {\n       console.log(`Kms semanales: ${ruta.getEstadisticas.semana.km}`);\n     });\n     this.infoUsuario();\n   });\n  }\n  \n  /**\n   * Metodo para ordenar los usuarios por kms mensuales\n   */\n  ordenarPorKmsMensuales() {\n    let ascendente = true; // por defecto ascendente\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_rutas = this.usuarios;\n      copia_rutas.sort((a, b) => {\n        if (ascendente) {\n          return a.getEstadisticas.mes.km - b.getEstadisticas.mes.km;\n        }\n        else {\n          return b.getEstadisticas.mes.km - a.getEstadisticas.mes.km;\n        }\n      });\n      // mostrar\n      copia_rutas.forEach((ruta) => {\n        console.log(`Kms mensuales: ${ruta.getEstadisticas.mes.km}`);\n      });\n      this.infoUsuario();\n    });\n  }\n\n  /**\n   * Metodo para ordenar los usuarios por kms anuales\n   */\n  ordenarPorKmsAnuales() {\n    let ascendente = true; // por defecto ascendente\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Cómo deseas ordenar?',\n        choices: [\n          {name:'Ascendente', value: 'ascendente'},\n          {name:'Descendente', value: 'descendente'},\n        ]\n      }\n    ]).then((answers) => {\n      if (answers.opcion === 'descendente') {\n        ascendente = false;\n      }\n      const copia_rutas = this.usuarios;\n      copia_rutas.sort((a, b) => {\n        if (ascendente) {\n          return a.getEstadisticas.año.km - b.getEstadisticas.año.km;\n        }\n        else {\n          return b.getEstadisticas.año.km - a.getEstadisticas.año.km;\n        }\n      });\n      copia_rutas.forEach((ruta) => {\n        console.log(`Kms anuales: ${ruta.getEstadisticas.año.km}`);\n      });\n      this.infoUsuario();\n    });\n  }\n\n  /**\n   * Método que controla el menú de información de los usuarios\n   */\n  infoUsuario() {\n    const prompt = inquirer.createPromptModule();\n    prompt([\n      {\n        type: 'list',\n        name: 'opcion',\n        message: '¿Qué deseas ver?',\n        choices: [\n          {name:'Mostrar por orden alfabético los usuarios', value: 'alfabetico'},\n          {name:'Por kms semanales', value: 'kms_semanales'},\n          {name:'Por kms mensuales', value: 'kms_mensuales'},\n          {name:'Por kms anuales', value:'kms_anuales'},\n          {name:'Salir', value: 'Salir'},\n        ]\n      }\n    ]).then((answers) => {\n      switch (answers.opcion) {\n        case 'alfabetico':\n          this.ordenarUsuarioPorNombre();\n          break;\n        case 'kms_semanales':\n          this.ordenarPorKmsSemanales();\n          break;\n        case 'kms_mensuales':\n          this.ordenarPorKmsMensuales();\n          break;\n        case 'kms_anuales':\n          this.ordenarPorKmsAnuales();\n          break;\n        case 'Salir':\n          process.exit(0);\n          break;\n      }\n    });\n  }\n\n  //* GETTERs Y SETTERs\n\n  /**\n   * Método que devuelve el array de usuarios\n   * @returns {Usuario[]} Array de usuarios\n   */\n  get getUsuarios() {\n    return this.usuarios;\n  }\n\n  /**\n   * Método que modifica el array de usuarios\n   * @param usuarios -- nuevo array de usuarios\n   */\n  set setUsuarios(usuarios: Usuario[]) {\n    this.usuarios = usuarios;\n  }\n}\n\n// const semana: estadistica = {\n//   km: 10,\n//   desnivel: 1000\n// }\n\n// const semana2: estadistica = {\n//   km: 20,\n//   desnivel: 200\n// }\n\n// const semana3: estadistica = {\n//   km: 30,\n//   desnivel: 300\n// }\n\n// const mes: estadistica = {\n//   km: 20,\n//   desnivel: 2000\n// }\n\n// const mes2: estadistica = {\n//   km: 30,\n//   desnivel: 3000\n// }\n\n// const mes3: estadistica = {\n//   km: 40,\n//   desnivel: 4000\n// }\n\n// const año: estadistica = {\n//   km: 30,\n//   desnivel: 3000\n// }\n\n// const año2: estadistica = {\n//   km: 40,\n//   desnivel: 4000\n// }\n\n// const año3: estadistica = {\n//   km: 50,\n//   desnivel: 5000\n// }\n\n// const estadisticas: estadisticaEntrenamiento = {\n//   semana: semana,\n//   mes: mes,\n//   año: año\n// }\n\n// const estadisticas2: estadisticaEntrenamiento = {\n//   semana: semana2,\n//   mes: mes2,\n//   año: año2\n// }\n\n// const estadisticas3: estadisticaEntrenamiento = {\n//   semana: semana3,\n//   mes: mes3,\n//   año: año3\n// }\n\n// const fecha1: fecha = {\n//   dia: 1,\n//   mes: 1,\n//   año: 2021\n// }\n\n// const fecha2: fecha = {\n//   dia: 2,\n//   mes: 2,\n//   año: 2021\n// }\n\n// const fecha3: fecha = {\n//   dia: 3,\n//   mes: 3,\n//   año: 2021\n// }\n\n// const fecha4: fecha = {\n//   dia: 4,\n//   mes: 4,\n//   año: 2021\n// }\n\n// const historic1: historicoRutas = {\n//   fecha: fecha1,\n//   id: 1\n// }\n\n// const historic2: historicoRutas = {\n//   fecha: fecha2,\n//   id: 2\n// }\n\n// const historic3: historicoRutas = {\n//   fecha: fecha3,\n//   id: 3\n// }\n\n// const historic4: historicoRutas = {\n//   fecha: fecha4,\n//   id: 1\n// }\n\n// const historic5: historicoRutas = {\n//   fecha: fecha1,\n//   id: 2\n// }\n\n// const historic6: historicoRutas = {\n//   fecha: fecha2,\n//   id: 3\n// }\n\n// const user0 = new Usuario(\"user0\", \"correr\", [1,2,3], [[1,2],[3,4],[5,6]], estadisticas, [historic1,historic2,historic3], [1,2,3]);\n// const user1 = new Usuario(\"user1\", \"correr\", [2,3], [[0,2],[3,4],[5,6]], estadisticas2, [historic4,historic5,historic6], [1,2,3]);\n// const user2 = new Usuario(\"user2\", \"correr\", [1,3,4], [[0,1],[3,4],[5,6]], estadisticas3, [historic1,historic2,historic3], [1,3]);\n// const user3 = new Usuario(\"user3\", \"correr\", [1,2,4], [[0,1],[2,4],[5,6]], estadisticas, [historic4,historic5,historic6], [1,2,3]);\n// const user4 = new Usuario(\"user4\", \"correr\", [1,2,3], [[0,1],[2,3],[5,6]], estadisticas2, [historic1,historic2,historic3], [1,2,3]);\n// const user5 = new Usuario(\"user5\", \"correr\", [1,2,3], [[0,1],[2,3],[4,6]], estadisticas3, [historic4,historic5,historic6], [1,2,3]);\n// const user6 = new Usuario(\"user6\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas, [historic1,historic2,historic3], [1,2,3]);\n// const user7 = new Usuario(\"user7\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas2, [historic4,historic5,historic6], [1,2,3]);\n// const user8 = new Usuario(\"user8\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas3, [historic1,historic2,historic3], [1,2,3]);\n// const user9 = new Usuario(\"user9\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas, [historic4,historic5,historic6], [1,2,3]);\n// const user10 = new Usuario(\"user10\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas2, [historic1,historic2,historic3], [1,2,3]);\n// const user11 = new Usuario(\"user11\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas3, [historic4,historic5,historic6], [1,2,3]);\n// const user12 = new Usuario(\"user12\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas, [historic1,historic2,historic3], [1,2,3]);\n// const user13 = new Usuario(\"user13\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas2, [historic4,historic5,historic6], [1,2,3]);\n// const user14 = new Usuario(\"user14\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas3, [historic1,historic2,historic3], [1,2,3]);\n// const user15 = new Usuario(\"user15\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas, [historic4,historic5,historic6], [1,2,3]);\n// const user16 = new Usuario(\"user16\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas2, [historic1,historic2,historic3], [1,2,3]);\n// const user17 = new Usuario(\"user17\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas3, [historic4,historic5,historic6], [1,2,3]);\n// const user18 = new Usuario(\"user18\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas, [historic1,historic2,historic3], [1,2,3]);\n// const user19 = new Usuario(\"user19\", \"correr\", [1,2,3], [[0,1],[2,3],[4,5]], estadisticas2, [historic4,historic5,historic6], [1,2,3]);"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e13c3f4fcafe72649d43a38e911c76ab43e27144","contentHash":"dbf80b4ff4d60a68c6ce860576d9b6d2e2665c818522d9116180f3bc3ec77bea"}}