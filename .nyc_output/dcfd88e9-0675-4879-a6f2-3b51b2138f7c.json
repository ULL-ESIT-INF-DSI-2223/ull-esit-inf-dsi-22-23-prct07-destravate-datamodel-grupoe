{"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/grupo.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/grupo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":28}},"3":{"start":{"line":26,"column":8},"end":{"line":26,"column":30}},"4":{"start":{"line":27,"column":8},"end":{"line":27,"column":44}},"5":{"start":{"line":28,"column":8},"end":{"line":28,"column":67}},"6":{"start":{"line":29,"column":8},"end":{"line":29,"column":35}},"7":{"start":{"line":30,"column":8},"end":{"line":30,"column":46}},"8":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"9":{"start":{"line":34,"column":26},"end":{"line":34,"column":75}},"10":{"start":{"line":35,"column":8},"end":{"line":62,"column":9}},"11":{"start":{"line":36,"column":12},"end":{"line":36,"column":93}},"12":{"start":{"line":39,"column":12},"end":{"line":52,"column":13}},"13":{"start":{"line":40,"column":16},"end":{"line":40,"column":30}},"14":{"start":{"line":44,"column":34},"end":{"line":44,"column":79}},"15":{"start":{"line":45,"column":16},"end":{"line":45,"column":48}},"16":{"start":{"line":45,"column":41},"end":{"line":45,"column":46}},"17":{"start":{"line":46,"column":16},"end":{"line":51,"column":17}},"18":{"start":{"line":47,"column":20},"end":{"line":47,"column":33}},"19":{"start":{"line":50,"column":20},"end":{"line":50,"column":67}},"20":{"start":{"line":53,"column":12},"end":{"line":61,"column":23}},"21":{"start":{"line":86,"column":8},"end":{"line":86,"column":24}},"22":{"start":{"line":93,"column":8},"end":{"line":93,"column":28}},"23":{"start":{"line":100,"column":8},"end":{"line":100,"column":35}},"24":{"start":{"line":107,"column":8},"end":{"line":107,"column":47}},"25":{"start":{"line":114,"column":8},"end":{"line":114,"column":29}},"26":{"start":{"line":121,"column":8},"end":{"line":121,"column":37}},"27":{"start":{"line":128,"column":8},"end":{"line":128,"column":36}},"28":{"start":{"line":135,"column":8},"end":{"line":135,"column":33}},"29":{"start":{"line":142,"column":8},"end":{"line":142,"column":30}},"30":{"start":{"line":149,"column":8},"end":{"line":149,"column":44}},"31":{"start":{"line":156,"column":8},"end":{"line":156,"column":68}},"32":{"start":{"line":163,"column":8},"end":{"line":163,"column":32}},"33":{"start":{"line":170,"column":8},"end":{"line":170,"column":47}},"34":{"start":{"line":177,"column":8},"end":{"line":177,"column":46}},"35":{"start":{"line":184,"column":8},"end":{"line":184,"column":69}},"36":{"start":{"line":185,"column":8},"end":{"line":185,"column":20}},"37":{"start":{"line":188,"column":0},"end":{"line":188,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":85},"end":{"line":63,"column":5}},"line":25},"1":{"name":"(anonymous_1)","decl":{"start":{"line":45,"column":31},"end":{"line":45,"column":32}},"loc":{"start":{"line":45,"column":41},"end":{"line":45,"column":46}},"line":45},"2":{"name":"(anonymous_2)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":16},"end":{"line":87,"column":5}},"line":85},"3":{"name":"(anonymous_3)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":20},"end":{"line":94,"column":5}},"line":92},"4":{"name":"(anonymous_4)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":27},"end":{"line":101,"column":5}},"line":99},"5":{"name":"(anonymous_5)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":39},"end":{"line":108,"column":5}},"line":106},"6":{"name":"(anonymous_6)","decl":{"start":{"line":113,"column":4},"end":{"line":113,"column":5}},"loc":{"start":{"line":113,"column":21},"end":{"line":115,"column":5}},"line":113},"7":{"name":"(anonymous_7)","decl":{"start":{"line":120,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":120,"column":28},"end":{"line":122,"column":5}},"line":120},"8":{"name":"(anonymous_8)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":28},"end":{"line":129,"column":5}},"line":127},"9":{"name":"(anonymous_9)","decl":{"start":{"line":134,"column":4},"end":{"line":134,"column":5}},"loc":{"start":{"line":134,"column":29},"end":{"line":136,"column":5}},"line":134},"10":{"name":"(anonymous_10)","decl":{"start":{"line":141,"column":4},"end":{"line":141,"column":5}},"loc":{"start":{"line":141,"column":26},"end":{"line":143,"column":5}},"line":141},"11":{"name":"(anonymous_11)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":40},"end":{"line":150,"column":5}},"line":148},"12":{"name":"(anonymous_12)","decl":{"start":{"line":155,"column":4},"end":{"line":155,"column":5}},"loc":{"start":{"line":155,"column":64},"end":{"line":157,"column":5}},"line":155},"13":{"name":"(anonymous_13)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":28},"end":{"line":164,"column":5}},"line":162},"14":{"name":"(anonymous_14)","decl":{"start":{"line":169,"column":4},"end":{"line":169,"column":5}},"loc":{"start":{"line":169,"column":42},"end":{"line":171,"column":5}},"line":169},"15":{"name":"(anonymous_15)","decl":{"start":{"line":176,"column":4},"end":{"line":176,"column":5}},"loc":{"start":{"line":176,"column":42},"end":{"line":178,"column":5}},"line":176},"16":{"name":"(anonymous_16)","decl":{"start":{"line":183,"column":4},"end":{"line":183,"column":5}},"loc":{"start":{"line":183,"column":21},"end":{"line":186,"column":5}},"line":183}},"branchMap":{"0":{"loc":{"start":{"line":35,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":62,"column":9}},{"start":{"line":35,"column":8},"end":{"line":62,"column":9}}],"line":35},"1":{"loc":{"start":{"line":39,"column":12},"end":{"line":52,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":52,"column":13}},{"start":{"line":39,"column":12},"end":{"line":52,"column":13}}],"line":39},"2":{"loc":{"start":{"line":46,"column":16},"end":{"line":51,"column":17}},"type":"if","locations":[{"start":{"line":46,"column":16},"end":{"line":51,"column":17}},{"start":{"line":46,"column":16},"end":{"line":51,"column":17}}],"line":46}},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":1,"12":1,"13":0,"14":1,"15":1,"16":5,"17":1,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1},"f":{"0":2,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"b":{"0":[1,1],"1":[0,1],"2":[0,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/grupo.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/grupo.ts"],"names":[],"mappings":"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","sourcesContent":["import { ID,estadisticaEntrenamiento, historicoRutas } from \"./types\";\nimport { Usuario } from \"./usuario\";\n\nimport { database } from \"./bd\";\n\n\n/**\n * @class Grupo\n * @description Clase que representa un grupo de usuarios\n */\nexport class Grupo {\n  private id_: ID;\n  private nombre_: string;\n  private participantes_: ID[];\n  private estadisticasEntrenamiento_: estadisticaEntrenamiento;\n  private ranking_: ID[];\n  private rutas_favoritas_ : ID[];\n  private historicoRutas_: historicoRutas[];\n  \n  /**\n   * Constructor de la clase Grupo.\n   * @param nombre \n   * @param participantes \n   * @param estadisticaEntrenamiento \n   * @param historicoRutas \n   * @param id \n   */\n  constructor(nombre: string, participantes: ID[], estadisticaEntrenamiento: estadisticaEntrenamiento, historicoRutas: historicoRutas[],id?: ID) {\n    this.nombre_ = nombre;\n    this.participantes_ = participantes;\n    this.estadisticasEntrenamiento_ = estadisticaEntrenamiento;\n    this.rutas_favoritas_ = [];\n    this.historicoRutas_ = historicoRutas;\n    \n    // this.ranking_ = this.calcularRanking();\n    this.ranking_ = [];\n    \n    //* escribir en lowdb la ruta creada\n    const id_global = database.get(\"grupos\").map(\"nombre\").value();\n    if (id_global.includes(this.nombre_)) {\n      this.id_ = database.get(\"grupos\").find({ nombre: this.nombre_ }).value().id;\n    } else {\n      if (id !== undefined) {\n        this.id_ = id;\n      }\n      else {\n        // se busca el id más alto y se le suma 1\n        const id_global = database.get(\"grupos\").map(\"id\").value();\n        id_global.sort((a, b) => a - b);\n        if (id_global.length === 0) {\n          this.id_ = 1;\n        }\n        else {\n          this.id_ = id_global[id_global.length - 1] + 1;\n        }\n      }\n      \n      database.get(\"grupos\").push({\n        id: this.id_,\n        nombre: this.nombre_,\n        participantes: this.participantes_,\n        estadisticasEntrenamiento: this.estadisticasEntrenamiento_,\n        ranking: this.ranking_,\n        rutas_favoritas: this.rutas_favoritas_,\n        historicoRutas: this.historicoRutas_\n      }).write();\n    }\n  }\n\n\n  // calcularRanking(): ID[] {\n  //   const ranking: Usuario[] = [];\n  //   const participantes = this.participantes_;\n  //   participantes.forEach(participante => {\n  //     // buscar el usuario en la base de datos\n  //     const usuario = database.get(\"usuarios\").find({ id: participante }).value();\n  //     ranking.push(new Usuario(usuario.nombre, usuario.actividad, usuario.amigos, usuario.grupo_de_amigos, usuario.estadisticas, usuario.historicoRutas, usuario.retos, usuario.id));\n  //   });\n  //   // ordenar el ranking, en base a la suma de los km del histórico de rutas de cada usuario\n  //   ranking.sort((a, b) => b.getKMTotales() - a.getKMTotales());\n  //   const rankingFinal: ID[] = [];\n  //   ranking.forEach(usuario => {\n  //     rankingFinal.push(usuario.getID);\n  //   });\n  //   return rankingFinal;\n\n  // }\n\n\n  //* GETTER Y SETTER\n\n  /**\n   * Método que devuelve el id del grupo\n   * @returns -- id del grupo\n   */\n  get getID(): ID {\n    return this.id_;\n  }\n\n  /**\n   * Método que devuelve el nombre del grupo\n   * @returns -- nombre del grupo\n   */\n  get getNombre(): string {\n    return this.nombre_;\n  }\n\n  /**\n   * Método que devuelve los participantes del grupo\n   * @returns -- participantes del grupo\n   */\n  get getParticipantes(): ID[] {\n    return this.participantes_;\n  }\n\n  /**\n   * Método que devuelve las estadisticas de entrenamiento del grupo\n   * @returns -- estadisticas de entrenamiento del grupo\n   */\n  get getEstadisticasEntrenamiento(): estadisticaEntrenamiento {\n    return this.estadisticasEntrenamiento_;\n  }\n\n  /**\n   * Método que devuelve el ranking del grupo\n   * @returns -- ranking del grupo\n   */\n  get getRanking(): ID[] {\n    return this.ranking_;\n  }\n\n  /**\n   * Método que devuelve las rutas favoritas del grupo\n   * @returns -- rutas favoritas del grupo\n   */\n  get getRutasFavoritas(): ID[] {\n    return this.rutas_favoritas_;\n  }\n\n  /**\n   * Método que devuelve el historico de rutas del grupo\n   * @returns -- historico de rutas del grupo\n   */\n  get getHistoricoRutas(): historicoRutas[] {\n    return this.historicoRutas_;\n  }\n\n  /**\n   * Método que modifica el id del grupo\n   * @param identificador-- nuevo id del grupo\n   */\n  set setID(identificador: ID) {\n    this.id_ = identificador;\n  }\n\n  /**\n   * Método que modifica el nombre del grupo\n   * @param nombre -- nuevo nombre del grupo\n   */\n  set setNombre(nombre: string) {\n    this.nombre_ = nombre;\n  }\n\n  /**\n   * Método que añade un participante al grupo\n   * @param participante -- participante que se añade al grupo\n   */\n  set setParticipantes(participantes: ID[]) {\n    this.participantes_ = participantes;\n  }\n\n  /**\n   * Método que añade un participante al grupo\n   * @param participante -- participante que se añade al grupo\n   */\n  set setEstadisticasEntrenamiento(estadisticasEntrenamiento: estadisticaEntrenamiento) {\n    this.estadisticasEntrenamiento_ = estadisticasEntrenamiento;\n  }\n\n  /**\n   * Método que añade un ranking al ranking del grupo\n   * @param ranking -- ranking que se añade al ranking del grupo\n   */\n  set setRanking(ranking: ID[]) {\n    this.ranking_ = ranking;\n  }\n\n  /**\n   * Método que añade una ruta a las rutas favoritas del grupo\n   * @param ruta -- ruta que se añade a las rutas favoritas\n   */\n  set setRutasFavoritas(rutasFavoritas: ID[]) {\n    this.rutas_favoritas_ = rutasFavoritas;\n  }\n\n  /**\n   * Método que añade una ruta al historico de rutas del grupo\n   * @param ruta -- ruta que se añade al historico\n   */\n  set setHistoricoRutas(historicoRutas: historicoRutas[]) {\n    this.historicoRutas_ = historicoRutas;\n  }\n\n\n  /**\n   * Método que elimina un grupo de la base de datos\n   * @returns True para las pruebas\n   */\n  autoborrarseBD(): boolean {\n    database.get(\"grupos\").remove({ id: this.id_ }).write();\n    return true;\n  }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"59d74d03e140af38c6d5e3fbd946f0567c36b427","contentHash":"09a3b5fee8b7cb833efd1cb10b0cb85f462777126ae381e04a4771f097f9177f"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/bd.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/bd.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":51}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":56}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":98}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/bd.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/bd.ts"],"names":[],"mappings":";;;AAAA,QAAQ;AACR,+BAA+B;AAC/B,oDAAoD;AAIpD,wCAAwC;AACxC,gBAAQ,GAAG,KAAK,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;AAChD,gBAAQ,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAC,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC","sourcesContent":["// lowdb\nimport * as lowdb from \"lowdb\";\nimport * as FileSync from \"lowdb/adapters/FileSync\";\nimport { schemaType } from \"./types\";\n\nexport let database: lowdb.LowdbSync<schemaType>;\n// eslint-disable-next-line prefer-const\ndatabase = lowdb(new FileSync(\"database.json\"));\ndatabase.defaults({ rutas: [] }, {usuarios: [] }, { grupos: []}, { retos: []}).write();"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"be2d6fc28264ac61e16d6e2e031cc25decea83b3","contentHash":"aaf92e7f08ba74d5ac87c1322042a203b27bb33bf34256db90b40301eaaa7393"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/reto.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/reto.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":28}},"3":{"start":{"line":24,"column":8},"end":{"line":24,"column":30}},"4":{"start":{"line":25,"column":8},"end":{"line":25,"column":28}},"5":{"start":{"line":26,"column":8},"end":{"line":26,"column":46}},"6":{"start":{"line":27,"column":8},"end":{"line":27,"column":44}},"7":{"start":{"line":28,"column":8},"end":{"line":28,"column":34}},"8":{"start":{"line":29,"column":26},"end":{"line":29,"column":74}},"9":{"start":{"line":30,"column":8},"end":{"line":56,"column":9}},"10":{"start":{"line":31,"column":12},"end":{"line":31,"column":92}},"11":{"start":{"line":34,"column":12},"end":{"line":47,"column":13}},"12":{"start":{"line":35,"column":16},"end":{"line":35,"column":30}},"13":{"start":{"line":39,"column":34},"end":{"line":39,"column":78}},"14":{"start":{"line":40,"column":16},"end":{"line":40,"column":48}},"15":{"start":{"line":40,"column":41},"end":{"line":40,"column":46}},"16":{"start":{"line":41,"column":16},"end":{"line":46,"column":17}},"17":{"start":{"line":42,"column":20},"end":{"line":42,"column":33}},"18":{"start":{"line":45,"column":20},"end":{"line":45,"column":67}},"19":{"start":{"line":48,"column":12},"end":{"line":55,"column":23}},"20":{"start":{"line":63,"column":8},"end":{"line":63,"column":68}},"21":{"start":{"line":64,"column":8},"end":{"line":64,"column":20}},"22":{"start":{"line":72,"column":25},"end":{"line":72,"column":26}},"23":{"start":{"line":73,"column":22},"end":{"line":73,"column":56}},"24":{"start":{"line":75,"column":8},"end":{"line":82,"column":9}},"25":{"start":{"line":75,"column":21},"end":{"line":75,"column":22}},"26":{"start":{"line":77,"column":12},"end":{"line":81,"column":15}},"27":{"start":{"line":78,"column":16},"end":{"line":80,"column":17}},"28":{"start":{"line":79,"column":20},"end":{"line":79,"column":52}},"29":{"start":{"line":83,"column":8},"end":{"line":83,"column":26}},"30":{"start":{"line":91,"column":8},"end":{"line":91,"column":24}},"31":{"start":{"line":98,"column":8},"end":{"line":98,"column":28}},"32":{"start":{"line":105,"column":8},"end":{"line":105,"column":27}},"33":{"start":{"line":112,"column":8},"end":{"line":112,"column":36}},"34":{"start":{"line":119,"column":8},"end":{"line":119,"column":32}},"35":{"start":{"line":126,"column":8},"end":{"line":126,"column":30}},"36":{"start":{"line":133,"column":8},"end":{"line":133,"column":33}},"37":{"start":{"line":140,"column":8},"end":{"line":140,"column":30}},"38":{"start":{"line":147,"column":8},"end":{"line":147,"column":28}},"39":{"start":{"line":154,"column":8},"end":{"line":154,"column":46}},"40":{"start":{"line":161,"column":8},"end":{"line":161,"column":38}},"41":{"start":{"line":168,"column":8},"end":{"line":168,"column":34}},"42":{"start":{"line":171,"column":0},"end":{"line":171,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":61},"end":{"line":57,"column":5}},"line":23},"1":{"name":"(anonymous_1)","decl":{"start":{"line":40,"column":31},"end":{"line":40,"column":32}},"loc":{"start":{"line":40,"column":41},"end":{"line":40,"column":46}},"line":40},"2":{"name":"(anonymous_2)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":21},"end":{"line":65,"column":5}},"line":62},"3":{"name":"(anonymous_3)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":16},"end":{"line":84,"column":5}},"line":70},"4":{"name":"(anonymous_4)","decl":{"start":{"line":77,"column":32},"end":{"line":77,"column":33}},"loc":{"start":{"line":77,"column":42},"end":{"line":81,"column":13}},"line":77},"5":{"name":"(anonymous_5)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":16},"end":{"line":92,"column":5}},"line":90},"6":{"name":"(anonymous_6)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":20},"end":{"line":99,"column":5}},"line":97},"7":{"name":"(anonymous_7)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":19},"end":{"line":106,"column":5}},"line":104},"8":{"name":"(anonymous_8)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":27},"end":{"line":113,"column":5}},"line":111},"9":{"name":"(anonymous_9)","decl":{"start":{"line":118,"column":4},"end":{"line":118,"column":5}},"loc":{"start":{"line":118,"column":23},"end":{"line":120,"column":5}},"line":118},"10":{"name":"(anonymous_10)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":22},"end":{"line":127,"column":5}},"line":125},"11":{"name":"(anonymous_11)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":29},"end":{"line":134,"column":5}},"line":132},"12":{"name":"(anonymous_12)","decl":{"start":{"line":139,"column":4},"end":{"line":139,"column":5}},"loc":{"start":{"line":139,"column":26},"end":{"line":141,"column":5}},"line":139},"13":{"name":"(anonymous_13)","decl":{"start":{"line":146,"column":4},"end":{"line":146,"column":5}},"loc":{"start":{"line":146,"column":24},"end":{"line":148,"column":5}},"line":146},"14":{"name":"(anonymous_14)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":41},"end":{"line":155,"column":5}},"line":153},"15":{"name":"(anonymous_15)","decl":{"start":{"line":160,"column":4},"end":{"line":160,"column":5}},"loc":{"start":{"line":160,"column":33},"end":{"line":162,"column":5}},"line":160},"16":{"name":"(anonymous_16)","decl":{"start":{"line":167,"column":4},"end":{"line":167,"column":5}},"loc":{"start":{"line":167,"column":30},"end":{"line":169,"column":5}},"line":167}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":56,"column":9}},{"start":{"line":30,"column":8},"end":{"line":56,"column":9}}],"line":30},"1":{"loc":{"start":{"line":34,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":47,"column":13}},{"start":{"line":34,"column":12},"end":{"line":47,"column":13}}],"line":34},"2":{"loc":{"start":{"line":41,"column":16},"end":{"line":46,"column":17}},"type":"if","locations":[{"start":{"line":41,"column":16},"end":{"line":46,"column":17}},{"start":{"line":41,"column":16},"end":{"line":46,"column":17}}],"line":41},"3":{"loc":{"start":{"line":78,"column":16},"end":{"line":80,"column":17}},"type":"if","locations":[{"start":{"line":78,"column":16},"end":{"line":80,"column":17}},{"start":{"line":78,"column":16},"end":{"line":80,"column":17}}],"line":78}},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":1,"11":1,"12":0,"13":1,"14":1,"15":4,"16":1,"17":0,"18":1,"19":1,"20":1,"21":1,"22":2,"23":2,"24":2,"25":2,"26":20,"27":70,"28":7,"29":2,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1},"f":{"0":2,"1":4,"2":1,"3":2,"4":70,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"b":{"0":[1,1],"1":[0,1],"2":[0,1],"3":[7,63]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/reto.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/reto.ts"],"names":[],"mappings":"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","sourcesContent":["import { actividad, ID } from \"./types\";\nimport { Usuario } from \"./usuario\";\nimport { Ruta } from \"./ruta\";\n\nimport { database } from \"./bd\";\n\n/**\n * Clase que representa un reto.\n * @class\n */\nexport class Reto {\n  private id_: ID;\n  private nombre_: string;\n  private rutas_: ID[];\n  private tipo_actividad_ : actividad;\n  private km_totales_: number;\n  private usuarios_: ID[];\n\n  /**\n   * Constructor de la clase Reto.\n   * @param nombre \n   * @param rutas \n   * @param tipo_actividad \n   * @param id \n   */\n  constructor(nombre: string, rutas: ID[], tipo_actividad: actividad, usuarios: ID[], id?: ID) {\n    this.nombre_ = nombre;\n    this.rutas_ = rutas;\n    this.tipo_actividad_ = tipo_actividad;\n    this.km_totales_ = this.kmTotales();\n    this.usuarios_ = usuarios;\n\n    const id_global = database.get(\"retos\").map(\"nombre\").value();\n    if (id_global.includes(this.nombre_)) {\n      this.id_ = database.get(\"retos\").find({ nombre: this.nombre_ }).value().id;\n    } else {\n      if (id !== undefined) {\n        this.id_ = id;\n      }\n      else {\n        // buscar el id más alto y sumarle 1\n        const id_global = database.get(\"retos\").map(\"id\").value();\n        id_global.sort((a, b) => a - b);\n        if (id_global.length === 0) {\n          this.id_ = 1;\n        }\n        else {\n          this.id_ = id_global[id_global.length - 1] + 1;\n        }\n      }\n      database.get(\"retos\").push({\n        id: this.id_,\n        nombre: this.nombre_,\n        rutas: this.rutas_,\n        tipo_actividad: this.tipo_actividad_,\n        km_totales: this.km_totales_,\n        usuarios: this.usuarios_\n      }).write();\n    }\n  }\n\n  /**\n   * Método que elimina un reto de la base de datos\n   * @returns True para las pruebas\n   */\n  autoborrarseBD(): boolean {\n    database.get(\"retos\").remove({ id: this.id_ }).write();\n    return true;\n  }\n\n\n  /**\n   * Método que devuelve el número total de km de todas las rutas.\n   * @returns KM totales de todas las rutas\n   */\n  public kmTotales(): number {\n    // calcular los km totales de todas las rutas\n    let km_totales = 0;\n    const rutas = database.get(\"rutas\").value();\n    // recorrer todas las rutas\n    for (let i = 0; i < rutas.length; i++) {\n      // si la ruta está en el reto\n      this.rutas_.forEach((ruta) => {\n        if (ruta === rutas[i].id) {\n          km_totales += rutas[i].longitud;\n        }\n      }\n      );\n    }\n    return km_totales;\n  }\n\n  //* getter y setter\n\n  /**\n   * Método que devuelve el id del reto\n   * @returns -- id del reto\n   */\n  get getId(): ID {\n    return this.id_;\n  }\n\n  /**\n   * Método que devuelve el nombre del reto\n   * @returns -- nombre del reto\n   */\n  get getNombre(): string {\n    return this.nombre_;\n  }\n\n  /**\n   * Método que devuelve las rutas del reto\n   * @returns -- rutas del reto\n   */\n  get getRutas(): ID[] {\n    return this.rutas_;\n  }\n\n  /**\n   * Método que devuelve el tipo de actividad del reto\n   * @returns -- tipo de actividad del reto\n   */\n  get getTipoActividad(): actividad {\n    return this.tipo_actividad_;\n  }\n\n  /**\n   * Método que devuelve los km totales del reto\n   * @returns -- km totales del reto\n   */\n  get getKmTotales(): number {\n    return this.km_totales_;\n  }\n\n  /**\n   * Método que devuelve los usuarios del reto\n   * @returns -- usuarios del reto\n   */\n  get getUsuarios(): ID[] {\n    return this.usuarios_;\n  }\n\n  /**\n   * Método que modifica el nombre del reto\n   * @param nombre -- nuevo nombre del reto\n   */\n  set setId(identificador: ID) {\n    this.id_ = identificador;\n  }\n\n  /**\n   * Método que modifica el nombre del reto\n   * @param nombre -- nuevo nombre del reto\n   */\n  set setNombre(nombre: string) {\n    this.nombre_ = nombre;\n  }\n\n  /**\n   * Método que modifica las rutas del reto\n   * @param rutas -- nuevas rutas del reto\n   */\n  set setRutas(rutas: ID[]) {\n    this.rutas_ = rutas;\n  }\n\n  /**\n   * Método que modifica el tipo de actividad del reto\n   * @param tipo_actividad -- nuevo tipo de actividad del reto\n   */\n  set setTipoActividad(tipo_actividad: actividad) {\n    this.tipo_actividad_ = tipo_actividad;\n  }\n\n  /**\n   * Método que modifica los km totales del reto\n   * @param km_totales -- nuevos km totales del reto\n   */\n  set setKmTotales(km_totales: number) {\n    this.km_totales_ = km_totales;\n  }\n\n  /**\n   * Método que añade un usuario al reto\n   * @param usuario -- usuario a añadir\n   */\n  set setUsuarios(usuarios: ID[]) {\n    this.usuarios_ = usuarios;\n  }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b35925653012f30ebc479c7447ee470c72ae993a","contentHash":"95cba2d242b44f8bb82c47e19850924a8fa90062a2f22861e4a16a2414808ff2"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/ruta.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/ruta.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":28}},"3":{"start":{"line":33,"column":8},"end":{"line":33,"column":30}},"4":{"start":{"line":34,"column":8},"end":{"line":34,"column":62}},"5":{"start":{"line":35,"column":8},"end":{"line":35,"column":56}},"6":{"start":{"line":36,"column":8},"end":{"line":36,"column":34}},"7":{"start":{"line":37,"column":8},"end":{"line":37,"column":34}},"8":{"start":{"line":38,"column":8},"end":{"line":38,"column":33}},"9":{"start":{"line":39,"column":8},"end":{"line":39,"column":46}},"10":{"start":{"line":40,"column":8},"end":{"line":40,"column":42}},"11":{"start":{"line":41,"column":26},"end":{"line":41,"column":74}},"12":{"start":{"line":42,"column":8},"end":{"line":73,"column":9}},"13":{"start":{"line":43,"column":12},"end":{"line":43,"column":92}},"14":{"start":{"line":46,"column":12},"end":{"line":61,"column":13}},"15":{"start":{"line":47,"column":16},"end":{"line":47,"column":30}},"16":{"start":{"line":53,"column":34},"end":{"line":53,"column":78}},"17":{"start":{"line":54,"column":16},"end":{"line":54,"column":48}},"18":{"start":{"line":54,"column":41},"end":{"line":54,"column":46}},"19":{"start":{"line":55,"column":16},"end":{"line":60,"column":17}},"20":{"start":{"line":56,"column":20},"end":{"line":56,"column":33}},"21":{"start":{"line":59,"column":20},"end":{"line":59,"column":67}},"22":{"start":{"line":62,"column":12},"end":{"line":72,"column":23}},"23":{"start":{"line":80,"column":8},"end":{"line":80,"column":68}},"24":{"start":{"line":81,"column":8},"end":{"line":81,"column":20}},"25":{"start":{"line":89,"column":8},"end":{"line":89,"column":24}},"26":{"start":{"line":96,"column":8},"end":{"line":96,"column":28}},"27":{"start":{"line":103,"column":8},"end":{"line":103,"column":44}},"28":{"start":{"line":110,"column":8},"end":{"line":110,"column":41}},"29":{"start":{"line":117,"column":8},"end":{"line":117,"column":30}},"30":{"start":{"line":124,"column":8},"end":{"line":124,"column":30}},"31":{"start":{"line":131,"column":8},"end":{"line":131,"column":30}},"32":{"start":{"line":138,"column":8},"end":{"line":138,"column":36}},"33":{"start":{"line":145,"column":8},"end":{"line":145,"column":34}},"34":{"start":{"line":153,"column":8},"end":{"line":153,"column":22}},"35":{"start":{"line":160,"column":8},"end":{"line":160,"column":30}},"36":{"start":{"line":167,"column":8},"end":{"line":167,"column":62}},"37":{"start":{"line":174,"column":8},"end":{"line":174,"column":56}},"38":{"start":{"line":181,"column":8},"end":{"line":181,"column":34}},"39":{"start":{"line":188,"column":8},"end":{"line":188,"column":34}},"40":{"start":{"line":195,"column":8},"end":{"line":195,"column":34}},"41":{"start":{"line":202,"column":8},"end":{"line":202,"column":46}},"42":{"start":{"line":209,"column":8},"end":{"line":209,"column":42}},"43":{"start":{"line":212,"column":0},"end":{"line":212,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":132},"end":{"line":74,"column":5}},"line":32},"1":{"name":"(anonymous_1)","decl":{"start":{"line":54,"column":31},"end":{"line":54,"column":32}},"loc":{"start":{"line":54,"column":41},"end":{"line":54,"column":46}},"line":54},"2":{"name":"(anonymous_2)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":21},"end":{"line":82,"column":5}},"line":79},"3":{"name":"(anonymous_3)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":16},"end":{"line":90,"column":5}},"line":88},"4":{"name":"(anonymous_4)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":20},"end":{"line":97,"column":5}},"line":95},"5":{"name":"(anonymous_5)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":35},"end":{"line":104,"column":5}},"line":102},"6":{"name":"(anonymous_6)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":32},"end":{"line":111,"column":5}},"line":109},"7":{"name":"(anonymous_7)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":22},"end":{"line":118,"column":5}},"line":116},"8":{"name":"(anonymous_8)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":22},"end":{"line":125,"column":5}},"line":123},"9":{"name":"(anonymous_9)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":22},"end":{"line":132,"column":5}},"line":130},"10":{"name":"(anonymous_10)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":27},"end":{"line":139,"column":5}},"line":137},"11":{"name":"(anonymous_11)","decl":{"start":{"line":144,"column":4},"end":{"line":144,"column":5}},"loc":{"start":{"line":144,"column":26},"end":{"line":146,"column":5}},"line":144},"12":{"name":"(anonymous_12)","decl":{"start":{"line":152,"column":4},"end":{"line":152,"column":5}},"loc":{"start":{"line":152,"column":18},"end":{"line":154,"column":5}},"line":152},"13":{"name":"(anonymous_13)","decl":{"start":{"line":159,"column":4},"end":{"line":159,"column":5}},"loc":{"start":{"line":159,"column":26},"end":{"line":161,"column":5}},"line":159},"14":{"name":"(anonymous_14)","decl":{"start":{"line":166,"column":4},"end":{"line":166,"column":5}},"loc":{"start":{"line":166,"column":57},"end":{"line":168,"column":5}},"line":166},"15":{"name":"(anonymous_15)","decl":{"start":{"line":173,"column":4},"end":{"line":173,"column":5}},"loc":{"start":{"line":173,"column":51},"end":{"line":175,"column":5}},"line":173},"16":{"name":"(anonymous_16)","decl":{"start":{"line":180,"column":4},"end":{"line":180,"column":5}},"loc":{"start":{"line":180,"column":30},"end":{"line":182,"column":5}},"line":180},"17":{"name":"(anonymous_17)","decl":{"start":{"line":187,"column":4},"end":{"line":187,"column":5}},"loc":{"start":{"line":187,"column":30},"end":{"line":189,"column":5}},"line":187},"18":{"name":"(anonymous_18)","decl":{"start":{"line":194,"column":4},"end":{"line":194,"column":5}},"loc":{"start":{"line":194,"column":30},"end":{"line":196,"column":5}},"line":194},"19":{"name":"(anonymous_19)","decl":{"start":{"line":201,"column":4},"end":{"line":201,"column":5}},"loc":{"start":{"line":201,"column":41},"end":{"line":203,"column":5}},"line":201},"20":{"name":"(anonymous_20)","decl":{"start":{"line":208,"column":4},"end":{"line":208,"column":5}},"loc":{"start":{"line":208,"column":38},"end":{"line":210,"column":5}},"line":208}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":73,"column":9}},{"start":{"line":42,"column":8},"end":{"line":73,"column":9}}],"line":42},"1":{"loc":{"start":{"line":46,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":61,"column":13}},{"start":{"line":46,"column":12},"end":{"line":61,"column":13}}],"line":46},"2":{"loc":{"start":{"line":55,"column":16},"end":{"line":60,"column":17}},"type":"if","locations":[{"start":{"line":55,"column":16},"end":{"line":60,"column":17}},{"start":{"line":55,"column":16},"end":{"line":60,"column":17}}],"line":55}},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":0,"16":1,"17":1,"18":9,"19":1,"20":0,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1},"f":{"0":2,"1":9,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1},"b":{"0":[1,1],"1":[0,1],"2":[0,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/ruta.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/ruta.ts"],"names":[],"mappings":"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","sourcesContent":["import { coordenadas, actividad, ID } from \"./types\";\n\nimport { database } from \"./bd\";\n\n/**\n * @class Ruta\n * @description Clase que representa una ruta\n */\nexport class Ruta {\n  private id_: ID;\n  private nombre_: string;\n  private geolocalizacion_inicio_: coordenadas[];\n  private geolocalizacion_fin_: coordenadas[];\n  private longitud_: number;\n  private desnivel_: number;\n  private usuarios_: ID[];\n  private tipo_actividad_: actividad;\n  private calificacion_: number;\n\n  /** \n   * @constructor\n   * @param nombre Nombre de la ruta\n   * @param geolocalizacion_inicio Geolocalización de inicio de la ruta\n   * @param geolocalizacion_fin Geolocalización de fin de la ruta\n   * @param longitud Longitud de la ruta\n   * @param desnivel Desnivel de la ruta\n   * @param usuarios Usuarios que han realizado la ruta\n   * @param tipo_actividad Tipo de actividad de la ruta\n   * @param calificacion Calificacion de la ruta\n   * @param id ID de la ruta (Parámetro opcional)\n   * @description Constructor de la clase Ruta\n  */\n  constructor(nombre: string, geolocalizacion_inicio: coordenadas[], geolocalizacion_fin: coordenadas[], longitud: number, desnivel: number, usuario: ID[], tipo_actividad: actividad, calificacion: number, id?: ID) {\n    this.nombre_ = nombre;\n    this.geolocalizacion_inicio_ = geolocalizacion_inicio;\n    this.geolocalizacion_fin_ = geolocalizacion_fin;\n    this.longitud_ = longitud;\n    this.desnivel_ = desnivel;\n    this.usuarios_ = usuario;\n    this.tipo_actividad_ = tipo_actividad;\n    this.calificacion_ = calificacion;\n    \n    const id_global = database.get(\"rutas\").map(\"nombre\").value();\n    if (id_global.includes(this.nombre_)) {\n      this.id_ = database.get(\"rutas\").find({ nombre: this.nombre_ }).value().id;\n\n    } else {\n      if (id !== undefined) {\n        this.id_ = id;\n      }\n      else {\n        /**\n         * Buscar el id más alto y sumarle 1\n         */\n        const id_global = database.get(\"rutas\").map(\"id\").value();\n        id_global.sort((a, b) => a - b);\n        if (id_global.length === 0) {\n          this.id_ = 1;\n        }\n        else {\n          this.id_ = id_global[id_global.length - 1] + 1;\n        }\n      }\n      database.get(\"rutas\").push({\n        id: this.id_,\n        nombre: this.nombre_,\n        geolocalizacion_inicio: this.geolocalizacion_inicio_,\n        geolocalizacion_fin: this.geolocalizacion_fin_,\n        longitud: this.longitud_,\n        desnivel: this.desnivel_,\n        usuarios: this.usuarios_,\n        tipo_actividad: this.tipo_actividad_,\n        calificacion: this.calificacion_\n      }).write();\n    }\n  } \n\n  /**\n   * Método que elimina una ruta de la base de datos\n   * @returns True para las pruebas\n   */\n  autoborrarseBD(): boolean {\n    database.get(\"rutas\").remove({ id: this.id_ }).write();\n    return true;\n  }\n\n  // Getters\n\n  /**\n   * Método que devuelve el id de la ruta\n   * @returns Id de la ruta\n   */\n  get getId(): ID {\n    return this.id_;\n  }\n\n  /**\n   * Método que devuelve el nombre de la ruta\n   * @returns Nombre de la ruta\n   */\n  get getNombre(): string {\n    return this.nombre_;\n  }\n\n  /**\n   * Método que devuelve la geolocalización de inicio de la ruta\n   * @returns Geolocalización de inicio de la ruta\n   */\n  get getGeolocalizacionInicio(): coordenadas[] {\n    return this.geolocalizacion_inicio_;\n  }\n\n  /**\n   * Método que devuelve la geolocalización de fin de la ruta\n   * @returns Geolocalización de fin de la ruta\n   */\n  get getGeolocalizacionFin(): coordenadas[] {\n    return this.geolocalizacion_fin_;\n  }\n  \n  /**\n   * Método que devuelve la longitud de la ruta\n   * @returns Longitud de la ruta\n   */\n  get getLongitud(): number {\n    return this.longitud_;\n  }\n\n  /**\n   * Método que devuelve el desnivel de la ruta\n   * @returns Desnivel de la ruta\n   */\n  get getDesnivel(): number {\n    return this.desnivel_;\n  }\n\n  /**\n   * Método que devuelve los usuarios de la ruta\n   * @returns Usuarios de la ruta\n   */\n  get getUsuarios(): ID[] {\n    return this.usuarios_;\n  }\n\n  /**\n   * Método que devuelve el tipo de actividad de la ruta\n   * @returns Actividad de la ruta\n   */\n  get getTipoActividad(): actividad {\n    return this.tipo_actividad_;\n  }\n\n  /**\n   * Método que devuelve la calificación de la ruta\n   * @returns Calificación de la ruta\n   */\n  get getCalificacion(): number {\n    return this.calificacion_;\n  }\n\n  // Setters\n\n  /**\n   * Método que asigna el id de la ruta\n   * @param id Id de la ruta\n   */\n  set setId(id: ID) {\n    this.id_ = id;\n  }\n\n  /**\n   * Método que asigna el nombre de la ruta\n   * @param nombre Nombre de la ruta\n   */\n  set setNombre(nombre: string) {\n    this.nombre_ = nombre;\n  }\n\n  /**\n   * Método que asigna la geolocalización de inicio de la ruta\n   * @param geolocalizacion_inicio Geolocalización de inicio de la ruta\n   */\n  set setGeolocalizacionInicio(geolocalizacion_inicio: coordenadas[]) {\n    this.geolocalizacion_inicio_ = geolocalizacion_inicio;\n  }\n\n  /**\n   * Méotodo que asigna la geolocalización de fin de la ruta\n   * @param geolocalizacion_fin geolocalización de fin de la ruta\n   */\n  set setGeolocalizacionFin(geolocalizacion_fin: coordenadas[]) {\n    this.geolocalizacion_fin_ = geolocalizacion_fin;\n  }\n\n  /**\n   * Método que asigna la longitud de la ruta\n   * @param longitud Longitud de la ruta\n   */\n  set setLongitud(longitud: number) {\n    this.longitud_ = longitud;\n  }\n\n  /**\n   * Método que asigna el desnivel de la ruta\n   * @param desnivel Desnivel de la ruta\n   */\n  set setDesnivel(desnivel: number) {\n    this.desnivel_ = desnivel;\n  }\n\n  /**\n   * Método que asigna los usuarios de la ruta\n   * @param usuarios Usuarios de la ruta\n   */\n  set setUsuarios(usuarios: ID[]) {\n    this.usuarios_ = usuarios;\n  }\n\n  /**\n   * Método que asigna el tipo de actividad de la ruta\n   * @param tipo_actividad Tipo de actividad de la ruta\n   */\n  set setTipoActividad(tipo_actividad: actividad) {\n    this.tipo_actividad_ = tipo_actividad;\n  }\n\n  /**\n   * Método que asigna la calificación de la ruta\n   * @param calificacion Calificación de la ruta\n   */\n  set setCalificacion(calificacion: number) {\n    this.calificacion_ = calificacion;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9a7ed07fcf6c53cda29acb87a8368fc7eb27a6c6","contentHash":"163c68d3987364d22c3385a34bffc56063c63acd59f3d3844f7aaa65cb918e3a"},"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuario.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuario.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":28}},"3":{"start":{"line":32,"column":8},"end":{"line":32,"column":30}},"4":{"start":{"line":33,"column":8},"end":{"line":33,"column":36}},"5":{"start":{"line":34,"column":8},"end":{"line":34,"column":30}},"6":{"start":{"line":35,"column":8},"end":{"line":35,"column":45}},"7":{"start":{"line":36,"column":8},"end":{"line":36,"column":28}},"8":{"start":{"line":37,"column":8},"end":{"line":37,"column":47}},"9":{"start":{"line":38,"column":8},"end":{"line":38,"column":37}},"10":{"start":{"line":39,"column":8},"end":{"line":39,"column":42}},"11":{"start":{"line":40,"column":26},"end":{"line":40,"column":77}},"12":{"start":{"line":41,"column":8},"end":{"line":69,"column":9}},"13":{"start":{"line":42,"column":12},"end":{"line":42,"column":95}},"14":{"start":{"line":45,"column":12},"end":{"line":57,"column":13}},"15":{"start":{"line":46,"column":16},"end":{"line":46,"column":30}},"16":{"start":{"line":49,"column":34},"end":{"line":49,"column":81}},"17":{"start":{"line":50,"column":16},"end":{"line":50,"column":48}},"18":{"start":{"line":50,"column":41},"end":{"line":50,"column":46}},"19":{"start":{"line":51,"column":16},"end":{"line":56,"column":17}},"20":{"start":{"line":52,"column":20},"end":{"line":52,"column":33}},"21":{"start":{"line":55,"column":20},"end":{"line":55,"column":67}},"22":{"start":{"line":58,"column":12},"end":{"line":68,"column":23}},"23":{"start":{"line":77,"column":8},"end":{"line":77,"column":24}},"24":{"start":{"line":84,"column":8},"end":{"line":84,"column":28}},"25":{"start":{"line":91,"column":8},"end":{"line":91,"column":31}},"26":{"start":{"line":98,"column":8},"end":{"line":98,"column":28}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":37}},"28":{"start":{"line":112,"column":8},"end":{"line":112,"column":34}},"29":{"start":{"line":119,"column":8},"end":{"line":119,"column":36}},"30":{"start":{"line":126,"column":8},"end":{"line":126,"column":27}},"31":{"start":{"line":133,"column":8},"end":{"line":133,"column":36}},"32":{"start":{"line":141,"column":8},"end":{"line":141,"column":22}},"33":{"start":{"line":148,"column":8},"end":{"line":148,"column":30}},"34":{"start":{"line":155,"column":8},"end":{"line":155,"column":36}},"35":{"start":{"line":162,"column":8},"end":{"line":162,"column":30}},"36":{"start":{"line":169,"column":8},"end":{"line":169,"column":38}},"37":{"start":{"line":176,"column":8},"end":{"line":176,"column":42}},"38":{"start":{"line":183,"column":8},"end":{"line":183,"column":46}},"39":{"start":{"line":190,"column":8},"end":{"line":190,"column":28}},"40":{"start":{"line":197,"column":8},"end":{"line":197,"column":46}},"41":{"start":{"line":203,"column":26},"end":{"line":203,"column":46}},"42":{"start":{"line":204,"column":25},"end":{"line":204,"column":27}},"43":{"start":{"line":205,"column":22},"end":{"line":205,"column":24}},"44":{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},"45":{"start":{"line":206,"column":21},"end":{"line":206,"column":22}},"46":{"start":{"line":207,"column":12},"end":{"line":207,"column":40}},"47":{"start":{"line":209,"column":8},"end":{"line":209,"column":36}},"48":{"start":{"line":209,"column":29},"end":{"line":209,"column":34}},"49":{"start":{"line":210,"column":19},"end":{"line":210,"column":20}},"50":{"start":{"line":211,"column":8},"end":{"line":221,"column":9}},"51":{"start":{"line":211,"column":21},"end":{"line":211,"column":22}},"52":{"start":{"line":212,"column":12},"end":{"line":220,"column":13}},"53":{"start":{"line":213,"column":16},"end":{"line":213,"column":23}},"54":{"start":{"line":216,"column":16},"end":{"line":218,"column":17}},"55":{"start":{"line":217,"column":20},"end":{"line":217,"column":44}},"56":{"start":{"line":219,"column":16},"end":{"line":219,"column":25}},"57":{"start":{"line":222,"column":8},"end":{"line":222,"column":42}},"58":{"start":{"line":229,"column":26},"end":{"line":229,"column":46}},"59":{"start":{"line":230,"column":24},"end":{"line":230,"column":25}},"60":{"start":{"line":231,"column":8},"end":{"line":236,"column":9}},"61":{"start":{"line":231,"column":21},"end":{"line":231,"column":22}},"62":{"start":{"line":232,"column":25},"end":{"line":232,"column":89}},"63":{"start":{"line":233,"column":12},"end":{"line":235,"column":13}},"64":{"start":{"line":234,"column":16},"end":{"line":234,"column":43}},"65":{"start":{"line":237,"column":8},"end":{"line":237,"column":25}},"66":{"start":{"line":244,"column":8},"end":{"line":244,"column":71}},"67":{"start":{"line":245,"column":8},"end":{"line":245,"column":20}},"68":{"start":{"line":248,"column":0},"end":{"line":248,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":99},"end":{"line":70,"column":5}},"line":31},"1":{"name":"(anonymous_1)","decl":{"start":{"line":50,"column":31},"end":{"line":50,"column":32}},"loc":{"start":{"line":50,"column":41},"end":{"line":50,"column":46}},"line":50},"2":{"name":"(anonymous_2)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":16},"end":{"line":78,"column":5}},"line":76},"3":{"name":"(anonymous_3)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":20},"end":{"line":85,"column":5}},"line":83},"4":{"name":"(anonymous_4)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":23},"end":{"line":92,"column":5}},"line":90},"5":{"name":"(anonymous_5)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":20},"end":{"line":99,"column":5}},"line":97},"6":{"name":"(anonymous_6)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":25},"end":{"line":106,"column":5}},"line":104},"7":{"name":"(anonymous_7)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":26},"end":{"line":113,"column":5}},"line":111},"8":{"name":"(anonymous_8)","decl":{"start":{"line":118,"column":4},"end":{"line":118,"column":5}},"loc":{"start":{"line":118,"column":28},"end":{"line":120,"column":5}},"line":118},"9":{"name":"(anonymous_9)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":19},"end":{"line":127,"column":5}},"line":125},"10":{"name":"(anonymous_10)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":28},"end":{"line":134,"column":5}},"line":132},"11":{"name":"(anonymous_11)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":18},"end":{"line":142,"column":5}},"line":140},"12":{"name":"(anonymous_12)","decl":{"start":{"line":147,"column":4},"end":{"line":147,"column":5}},"loc":{"start":{"line":147,"column":26},"end":{"line":149,"column":5}},"line":147},"13":{"name":"(anonymous_13)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":32},"end":{"line":156,"column":5}},"line":154},"14":{"name":"(anonymous_14)","decl":{"start":{"line":161,"column":4},"end":{"line":161,"column":5}},"loc":{"start":{"line":161,"column":26},"end":{"line":163,"column":5}},"line":161},"15":{"name":"(anonymous_15)","decl":{"start":{"line":168,"column":4},"end":{"line":168,"column":5}},"loc":{"start":{"line":168,"column":30},"end":{"line":170,"column":5}},"line":168},"16":{"name":"(anonymous_16)","decl":{"start":{"line":175,"column":4},"end":{"line":175,"column":5}},"loc":{"start":{"line":175,"column":38},"end":{"line":177,"column":5}},"line":175},"17":{"name":"(anonymous_17)","decl":{"start":{"line":182,"column":4},"end":{"line":182,"column":5}},"loc":{"start":{"line":182,"column":42},"end":{"line":184,"column":5}},"line":182},"18":{"name":"(anonymous_18)","decl":{"start":{"line":189,"column":4},"end":{"line":189,"column":5}},"loc":{"start":{"line":189,"column":24},"end":{"line":191,"column":5}},"line":189},"19":{"name":"(anonymous_19)","decl":{"start":{"line":196,"column":4},"end":{"line":196,"column":5}},"loc":{"start":{"line":196,"column":42},"end":{"line":198,"column":5}},"line":196},"20":{"name":"(anonymous_20)","decl":{"start":{"line":202,"column":4},"end":{"line":202,"column":5}},"loc":{"start":{"line":202,"column":28},"end":{"line":223,"column":5}},"line":202},"21":{"name":"(anonymous_21)","decl":{"start":{"line":209,"column":19},"end":{"line":209,"column":20}},"loc":{"start":{"line":209,"column":29},"end":{"line":209,"column":34}},"line":209},"22":{"name":"(anonymous_22)","decl":{"start":{"line":228,"column":4},"end":{"line":228,"column":5}},"loc":{"start":{"line":228,"column":19},"end":{"line":238,"column":5}},"line":228},"23":{"name":"(anonymous_23)","decl":{"start":{"line":243,"column":4},"end":{"line":243,"column":5}},"loc":{"start":{"line":243,"column":21},"end":{"line":246,"column":5}},"line":243}},"branchMap":{"0":{"loc":{"start":{"line":41,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":69,"column":9}},{"start":{"line":41,"column":8},"end":{"line":69,"column":9}}],"line":41},"1":{"loc":{"start":{"line":45,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":57,"column":13}},{"start":{"line":45,"column":12},"end":{"line":57,"column":13}}],"line":45},"2":{"loc":{"start":{"line":51,"column":16},"end":{"line":56,"column":17}},"type":"if","locations":[{"start":{"line":51,"column":16},"end":{"line":56,"column":17}},{"start":{"line":51,"column":16},"end":{"line":56,"column":17}}],"line":51},"3":{"loc":{"start":{"line":212,"column":12},"end":{"line":220,"column":13}},"type":"if","locations":[{"start":{"line":212,"column":12},"end":{"line":220,"column":13}},{"start":{"line":212,"column":12},"end":{"line":220,"column":13}}],"line":212},"4":{"loc":{"start":{"line":216,"column":16},"end":{"line":218,"column":17}},"type":"if","locations":[{"start":{"line":216,"column":16},"end":{"line":218,"column":17}},{"start":{"line":216,"column":16},"end":{"line":218,"column":17}}],"line":216},"5":{"loc":{"start":{"line":233,"column":12},"end":{"line":235,"column":13}},"type":"if","locations":[{"start":{"line":233,"column":12},"end":{"line":235,"column":13}},{"start":{"line":233,"column":12},"end":{"line":235,"column":13}}],"line":233}},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":0,"16":1,"17":1,"18":19,"19":1,"20":0,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":3,"39":1,"40":1,"41":2,"42":2,"43":2,"44":2,"45":2,"46":6,"47":2,"48":4,"49":2,"50":2,"51":2,"52":6,"53":0,"54":6,"55":0,"56":6,"57":2,"58":1,"59":1,"60":1,"61":1,"62":2,"63":2,"64":2,"65":1,"66":1,"67":1,"68":1},"f":{"0":2,"1":19,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":3,"18":1,"19":1,"20":2,"21":4,"22":1,"23":1},"b":{"0":[1,1],"1":[0,1],"2":[0,1],"3":[0,6],"4":[0,6],"5":[2,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuario.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct07-destravate-datamodel-grupoe/src/usuario.ts"],"names":[],"mappings":"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","sourcesContent":["import { actividad, ID, estadisticaEntrenamiento, historicoRutas } from \"./types\";\n\nimport { database } from \"./bd\";\n\n/**\n * @class Usuario\n * @description Clase que representa un usuario\n */\nexport class Usuario {\n  private id_: ID;\n  private nombre_: string;\n  private actividad_: actividad;\n  private amigos_: ID[];\n  private grupo_de_amigos_: ID[][];\n  private estadisticas_: estadisticaEntrenamiento;\n  private rutasFavoritas_: ID[];\n  private retos_: ID[];\n  private historicoRutas_: historicoRutas[];\n\n  /**\n   * @constructor\n   * @param nombre Nombre del usuario \n   * @param actividad Actividad del usuario\n   * @param amigos Amigos del usuario\n   * @param grupo_amigos Grupo de amigos del usuario\n   * @param estadisticas Estadisticas del usuario\n   * @param historico_rutas Histórico de rutas del usuario\n   * @param retos Retos del usuario\n   * @param id Id del usuario\n   * @description Constructor de la clase Usuario\n   */\n  constructor(nombre: string, actividad: actividad, amigos: ID[], grupo_amigos: ID[][], estadisticas: estadisticaEntrenamiento ,historico_rutas: historicoRutas[], retos: ID[], id?: ID) {\n    this.nombre_ = nombre;\n    this.actividad_ = actividad;\n    this.amigos_ = amigos;\n    this.grupo_de_amigos_ = grupo_amigos;\n    this.retos_ = retos;\n    this.historicoRutas_ = historico_rutas;\n    this.obtenerRutasFavoritas();\n    this.estadisticas_ = estadisticas;\n\n    const id_global = database.get(\"usuarios\").map(\"nombre\").value();\n    if (id_global.includes(this.nombre_)) {\n      this.id_ = database.get(\"usuarios\").find({ nombre: this.nombre_ }).value().id;\n    }\n    else {\n      if (id !== undefined) {\n        this.id_ = id;\n      }\n      else {\n        const id_global = database.get(\"usuarios\").map(\"id\").value();\n        id_global.sort((a, b) => a - b);\n        if (id_global.length === 0) {\n          this.id_ = 1;\n        }\n        else {\n          this.id_ = id_global[id_global.length - 1] + 1;\n        }\n      }\n      database.get(\"usuarios\").push(\n        {\n          id: this.id_,\n          nombre: this.nombre_,\n          actividad: this.actividad_,\n          amigos: this.amigos_,\n          grupo_de_amigos: this.grupo_de_amigos_,\n          estadisticas: this.estadisticas_,\n          rutasFavoritas: this.rutasFavoritas_,\n          retos: this.retos_,\n          historicoRutas: this.historicoRutas_\n        }\n      ).write();\n    }\n  }\n\n  // Getters\n\n  /**\n   * Método que devuelve el id del usuario\n   * @returns Id del usuario\n   */\n  get getID(): ID {\n    return this.id_;\n  }\n\n  /**\n   * Método que devuelve el nombre del usuario\n   * @returns Nombre del usuario\n   */\n  get getNombre(): string {\n    return this.nombre_;\n  }\n\n  /**\n   * Método que devuelve la actividad del usuario\n   * @returns Actividad del usuario\n   */\n  get getActividad(): actividad {\n    return this.actividad_;\n  }\n\n  /**\n   * Método que devuelve los amigos del usuario\n   * @returns Amigos del usuario\n   */\n  get getAmigos(): ID[] {\n    return this.amigos_;\n  }\n\n  /**\n   * Método que devuelve el grupo de amigos del usuario\n   * @returns Grupo de amigos del usuario\n   */\n  get getGrupoAmigos(): ID[][] {\n    return this.grupo_de_amigos_;\n  }\n\n  /**\n   * Método que devuelve las estadísticas del usuario\n   * @returns Estadísticas del usuario\n   */\n  get getEstadisticas(): estadisticaEntrenamiento {\n    return this.estadisticas_;\n  }\n\n  /**\n   * Método que devuelve las rutas favoritas del usuario\n   * @returns Rutas favoritas del usuario\n   */\n  get getRutasFavoritas(): ID[] {\n    return this.rutasFavoritas_;\n  }\n\n  /**\n   * Método que devuelve los retos del usuario\n   * @returns Retos del usuario\n   */\n  get getRetos(): ID[] {\n    return this.retos_;\n  }\n\n  /**\n   * Método que devuelve el historico de rutas del usuario\n   * @returns -- historico de rutas del usuario\n   */\n  get getHistoricoRutas(): historicoRutas[] {\n    return this.historicoRutas_;\n  }\n\n  // Setters\n\n  /**\n   * Método que modifica el id del usuario\n   * @param id -- nuevo id del usuario\n   */\n    set setID(id: ID) {\n      this.id_ = id;\n    }\n\n  /**\n   * Método que modifica el nombre del usuario\n   * @param nombre -- nuevo nombre del usuario\n   */\n  set setNombre(nombre: string) {\n    this.nombre_ = nombre;\n  }\n\n  /**\n   * Método que modifica la actividad del usuario\n   * @param actividad -- nueva actividad del usuario\n   */\n  set setActividad(actividad: actividad) {\n    this.actividad_ = actividad;\n  }\n\n  /**\n   * Método que modifica los amigos del usuario\n   * @param amigos -- nuevos amigos del usuario\n   */\n  set setAmigos(amigos: ID[]) {\n    this.amigos_ = amigos;\n  }\n\n  /**\n   * Método que modifica el grupo de amigos del usuario\n   * @param grupo -- nuevo grupo de amigos del usuario\n   */\n  set setGrupoAmigos(grupo: ID[][]) {\n    this.grupo_de_amigos_ = grupo;\n  }\n\n  /**\n   * Método que modifica las estadísticas del usuario\n   * @param estadisticas -- nuevas estadísticas del usuario\n   */\n  set setEstadisticas(estadisticas: estadisticaEntrenamiento) {\n    this.estadisticas_ = estadisticas;\n  }\n\n  /**\n   * Método que modifica las rutas favoritas del usuario\n   * @param rutasFavoritas -- nuevas rutas favoritas del usuario\n   */\n  set setRutasFavoritas(rutasFavoritas: ID[]) {\n    this.rutasFavoritas_ = rutasFavoritas;\n  }\n\n  /**\n   * Método que modifica los retos del usuario\n   * @param retos -- nuevos retos del usuario\n   */\n  set setRetos(retos: ID[]) {\n    this.retos_ = retos;\n  }\n\n  /**\n   * Método que modifica el historico de rutas del usuario\n   * @param historicoRutas -- nuevo historico de rutas del usuario\n   */\n  set setHistoricoRutas(historicoRutas: historicoRutas[]) {\n    this.historicoRutas_ = historicoRutas;\n  }\n\n  /**\n   * Método que calcula las rutas favoritas del usuario\n   */\n  obtenerRutasFavoritas(): void {\n    const historico = this.historicoRutas_;\n    const rutasFav = [];\n    const rutas = [];\n    for (let i = 0; i < historico.length; i++) {\n      rutas.push(historico[i].id);\n    } \n    rutas.sort((a, b) => a - b);\n    let cont = 1;\n    for (let i = 0; i < rutas.length; i++) {\n      if (rutas[i] == rutas[i + 1]) {\n        cont++;\n      } \n      else {\n        if (cont > 2) {\n          rutasFav.push(rutas[i]);\n        }\n        cont = 1;\n      }\n    }\n    this.setRutasFavoritas = rutasFav;\n  }\n\n  /**\n   * Método que devuelve el número de km totales recorridos por el usuario\n   * @returns número de km totales recorridos por el usuario\n   */\n  getKMTotales(): number {\n    const historico = this.historicoRutas_;\n    let kmTotales = 0;\n    for (let i = 0; i < historico.length; i++) {\n      const ruta = database.get('rutas').find({ id: historico[i].id }).value();\n      if (ruta != undefined) {\n        kmTotales += ruta.longitud;\n      }\n    }\n    return kmTotales;\n  }\n\n  /**\n   * Método que elimina un usuario de la base de datos\n   * @returns True para las pruebas\n   */\n  autoborrarseBD(): boolean {\n    database.get('usuarios').remove({ id: this.id_ }).write();\n    return true;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"76416662fdd792682cc74b60d411908b6b63c6fa","contentHash":"ca5ae339d845f4d420d7fb8d943831abbf9646e1bf097594e8e3ece5c80c771b"}}